{
	"id": "4c441385bba6f4be93ad327919b5f470",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token.sol": {
				"content": "pragma solidity =0.5.16;\n\nimport 'https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol';\nimport 'https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol';\n\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\n    using SafeMath for uint;\n\n    string public constant name = 'Uniswap V2';\n    string public constant symbol = 'UNI-V2';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() public {\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n\n        _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000);\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}"
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/token.sol": {
				"UniswapV2ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/token.sol\":215:3617  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token.sol\":1029:1546  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/token.sol\":1029:1546  constructor() public {... */\n  pop\n    /* \"contracts/token.sol\":1060:1072  uint chainId */\n  0x00\n    /* \"contracts/token.sol\":1116:1123  chainid */\n  chainid\n    /* \"contracts/token.sol\":1105:1123  chainId := chainid */\n  swap1\n  pop\n    /* \"contracts/token.sol\":1212:1307  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/token.sol\":1341:1345  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x556e697377617020563200000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/token.sol\":1325:1347  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/token.sol\":1375:1385  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/token.sol\":1365:1386  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/token.sol\":1404:1411  chainId */\n  dup4\n    /* \"contracts/token.sol\":1437:1441  this */\n  address\n    /* \"contracts/token.sol\":1184:1456  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"contracts/token.sol\":1184:1456  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"contracts/token.sol\":1161:1466  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/token.sol\":1142:1158  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/token.sol\":1142:1466  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token.sol\":1477:1539  _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000) */\n  tag_4\n    /* \"contracts/token.sol\":1483:1525  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"contracts/token.sol\":1527:1538  10000000000 */\n  0x02540be400\n    /* \"contracts/token.sol\":1477:1482  _mint */\n  shl(0x20, tag_5)\n    /* \"contracts/token.sol\":1477:1539  _mint(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 10000000000) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/token.sol\":1029:1546  constructor() public {... */\n  pop\n    /* \"contracts/token.sol\":215:3617  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n  jump(tag_6)\n    /* \"contracts/token.sol\":1552:1749  function _mint(address to, uint value) internal {... */\ntag_5:\n    /* \"contracts/token.sol\":1624:1646  totalSupply.add(value) */\n  tag_8\n    /* \"contracts/token.sol\":1640:1645  value */\n  dup2\n    /* \"contracts/token.sol\":1624:1635  totalSupply */\n  sload(0x00)\n    /* \"contracts/token.sol\":1624:1639  totalSupply.add */\n  or(tag_0_82, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/token.sol\":1624:1646  totalSupply.add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/token.sol\":1610:1621  totalSupply */\n  0x00\n    /* \"contracts/token.sol\":1610:1646  totalSupply = totalSupply.add(value) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token.sol\":1672:1696  balanceOf[to].add(value) */\n  tag_10\n    /* \"contracts/token.sol\":1690:1695  value */\n  dup2\n    /* \"contracts/token.sol\":1672:1681  balanceOf */\n  0x01\n    /* \"contracts/token.sol\":1672:1685  balanceOf[to] */\n  0x00\n    /* \"contracts/token.sol\":1682:1684  to */\n  dup6\n    /* \"contracts/token.sol\":1672:1685  balanceOf[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/token.sol\":1672:1689  balanceOf[to].add */\n  or(tag_0_82, shl(0x20, tag_9))\n  swap1\n    /* \"contracts/token.sol\":1672:1696  balanceOf[to].add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/token.sol\":1656:1665  balanceOf */\n  0x01\n    /* \"contracts/token.sol\":1656:1669  balanceOf[to] */\n  0x00\n    /* \"contracts/token.sol\":1666:1668  to */\n  dup5\n    /* \"contracts/token.sol\":1656:1669  balanceOf[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/token.sol\":1656:1696  balanceOf[to] = balanceOf[to].add(value) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token.sol\":1732:1734  to */\n  dup2\n    /* \"contracts/token.sol\":1711:1742  Transfer(address(0), to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token.sol\":1728:1729  0 */\n  0x00\n    /* \"contracts/token.sol\":1711:1742  Transfer(address(0), to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/token.sol\":1736:1741  value */\n  dup4\n    /* \"contracts/token.sol\":1711:1742  Transfer(address(0), to, value) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token.sol\":1552:1749  function _mint(address to, uint value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\ntag_9:\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":207:213  uint z */\n  0x00\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":248:249  x */\n  dup3\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":242:243  y */\n  dup3\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":238:239  x */\n  dup5\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":238:243  x + y */\n  add\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":234:243  z = x + y */\n  swap2\n  pop\n  dup2\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n  lt\n  iszero\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x14\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token.sol\":215:3617  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/token.sol\":215:3617  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/token.sol\":215:3617  contract UniswapV2ERC20 is IUniswapV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token.sol\":294:336  string public constant name = 'Uniswap V2' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/token.sol\":294:336  string public constant name = 'Uniswap V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":2360:2504  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/token.sol\":2360:2504  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":429:453  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":2652:2947  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/token.sol\":2652:2947  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":715:823  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":388:423  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":574:605  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":459:500  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/token.sol\":459:500  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":829:867  mapping(address => uint) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/token.sol\":829:867  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":342:382  string public constant symbol = 'UNI-V2' */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/token.sol\":342:382  string public constant symbol = 'UNI-V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":2510:2646  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/token.sol\":2510:2646  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":2953:3615  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"contracts/token.sol\":2953:3615  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/token.sol\":506:567  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/token.sol\":506:567  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token.sol\":294:336  string public constant name = 'Uniswap V2' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x556e697377617020563200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":2360:2504  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"contracts/token.sol\":2424:2428  bool */\n      0x00\n        /* \"contracts/token.sol\":2440:2476  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"contracts/token.sol\":2449:2459  msg.sender */\n      caller\n        /* \"contracts/token.sol\":2461:2468  spender */\n      dup5\n        /* \"contracts/token.sol\":2470:2475  value */\n      dup5\n        /* \"contracts/token.sol\":2440:2448  _approve */\n      tag_61\n        /* \"contracts/token.sol\":2440:2476  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/token.sol\":2493:2497  true */\n      0x01\n        /* \"contracts/token.sol\":2486:2497  return true */\n      swap1\n      pop\n        /* \"contracts/token.sol\":2360:2504  function approve(address spender, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":429:453  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":2652:2947  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n        /* \"contracts/token.sol\":2730:2734  bool */\n      0x00\n        /* \"contracts/token.sol\":2786:2788  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/token.sol\":2750:2759  allowance */\n      0x02\n        /* \"contracts/token.sol\":2750:2765  allowance[from] */\n      0x00\n        /* \"contracts/token.sol\":2760:2764  from */\n      dup7\n        /* \"contracts/token.sol\":2750:2765  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2750:2777  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/token.sol\":2766:2776  msg.sender */\n      caller\n        /* \"contracts/token.sol\":2750:2777  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token.sol\":2750:2789  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/token.sol\":2746:2884  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_63\n      jumpi\n        /* \"contracts/token.sol\":2835:2873  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"contracts/token.sol\":2867:2872  value */\n      dup3\n        /* \"contracts/token.sol\":2835:2844  allowance */\n      0x02\n        /* \"contracts/token.sol\":2835:2850  allowance[from] */\n      0x00\n        /* \"contracts/token.sol\":2845:2849  from */\n      dup8\n        /* \"contracts/token.sol\":2835:2850  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2835:2862  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/token.sol\":2851:2861  msg.sender */\n      caller\n        /* \"contracts/token.sol\":2835:2862  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token.sol\":2835:2866  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"contracts/token.sol\":2835:2873  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/token.sol\":2805:2814  allowance */\n      0x02\n        /* \"contracts/token.sol\":2805:2820  allowance[from] */\n      0x00\n        /* \"contracts/token.sol\":2815:2819  from */\n      dup7\n        /* \"contracts/token.sol\":2805:2820  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2805:2832  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/token.sol\":2821:2831  msg.sender */\n      caller\n        /* \"contracts/token.sol\":2805:2832  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2805:2873  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token.sol\":2746:2884  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_63:\n        /* \"contracts/token.sol\":2893:2919  _transfer(from, to, value) */\n      tag_66\n        /* \"contracts/token.sol\":2903:2907  from */\n      dup5\n        /* \"contracts/token.sol\":2909:2911  to */\n      dup5\n        /* \"contracts/token.sol\":2913:2918  value */\n      dup5\n        /* \"contracts/token.sol\":2893:2902  _transfer */\n      tag_67\n        /* \"contracts/token.sol\":2893:2919  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/token.sol\":2936:2940  true */\n      0x01\n        /* \"contracts/token.sol\":2929:2940  return true */\n      swap1\n      pop\n        /* \"contracts/token.sol\":2652:2947  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":715:823  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"contracts/token.sol\":757:823  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/token.sol\":715:823  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":388:423  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/token.sol\":421:423  18 */\n      0x12\n        /* \"contracts/token.sol\":388:423  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":574:605  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":459:500  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":829:867  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":342:382  string public constant symbol = 'UNI-V2' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x554e492d56320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":2510:2646  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"contracts/token.sol\":2570:2574  bool */\n      0x00\n        /* \"contracts/token.sol\":2586:2618  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"contracts/token.sol\":2596:2606  msg.sender */\n      caller\n        /* \"contracts/token.sol\":2608:2610  to */\n      dup5\n        /* \"contracts/token.sol\":2612:2617  value */\n      dup5\n        /* \"contracts/token.sol\":2586:2595  _transfer */\n      tag_67\n        /* \"contracts/token.sol\":2586:2618  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/token.sol\":2635:2639  true */\n      0x01\n        /* \"contracts/token.sol\":2628:2639  return true */\n      swap1\n      pop\n        /* \"contracts/token.sol\":2510:2646  function transfer(address to, uint value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":2953:3615  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_55:\n        /* \"contracts/token.sol\":3098:3113  block.timestamp */\n      timestamp\n        /* \"contracts/token.sol\":3086:3094  deadline */\n      dup5\n        /* \"contracts/token.sol\":3086:3113  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/token.sol\":3078:3136  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/token.sol\":3146:3160  bytes32 digest */\n      0x00\n        /* \"contracts/token.sol\":3248:3264  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"contracts/token.sol\":757:823  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/token.sol\":3303:3318  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"contracts/token.sol\":3320:3325  owner */\n      dup10\n        /* \"contracts/token.sol\":3327:3334  spender */\n      dup10\n        /* \"contracts/token.sol\":3336:3341  value */\n      dup10\n        /* \"contracts/token.sol\":3343:3349  nonces */\n      0x04\n        /* \"contracts/token.sol\":3343:3356  nonces[owner] */\n      0x00\n        /* \"contracts/token.sol\":3350:3355  owner */\n      dup15\n        /* \"contracts/token.sol\":3343:3356  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token.sol\":3343:3358  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/token.sol\":3360:3368  deadline */\n      dup11\n        /* \"contracts/token.sol\":3292:3369  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/token.sol\":3292:3369  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/token.sol\":3282:3370  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/token.sol\":3186:3384  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/token.sol\":3186:3384  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/token.sol\":3163:3394  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/token.sol\":3146:3394  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/token.sol\":3404:3428  address recoveredAddress */\n      0x00\n        /* \"contracts/token.sol\":3431:3457  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"contracts/token.sol\":3441:3447  digest */\n      dup3\n        /* \"contracts/token.sol\":3449:3450  v */\n      dup7\n        /* \"contracts/token.sol\":3452:3453  r */\n      dup7\n        /* \"contracts/token.sol\":3455:3456  s */\n      dup7\n        /* \"contracts/token.sol\":3431:3457  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/token.sol\":3431:3457  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/token.sol\":3404:3457  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/token.sol\":3503:3504  0 */\n      0x00\n        /* \"contracts/token.sol\":3475:3505  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token.sol\":3475:3491  recoveredAddress */\n      dup2\n        /* \"contracts/token.sol\":3475:3505  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/token.sol\":3475:3534  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/token.sol\":3529:3534  owner */\n      dup9\n        /* \"contracts/token.sol\":3509:3534  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token.sol\":3509:3525  recoveredAddress */\n      dup2\n        /* \"contracts/token.sol\":3509:3534  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token.sol\":3475:3534  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"contracts/token.sol\":3467:3567  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/token.sol\":3577:3608  _approve(owner, spender, value) */\n      tag_75\n        /* \"contracts/token.sol\":3586:3591  owner */\n      dup10\n        /* \"contracts/token.sol\":3593:3600  spender */\n      dup10\n        /* \"contracts/token.sol\":3602:3607  value */\n      dup10\n        /* \"contracts/token.sol\":3577:3585  _approve */\n      tag_61\n        /* \"contracts/token.sol\":3577:3608  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/token.sol\":2953:3615  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":506:567  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/token.sol\":1966:2132  function _approve(address owner, address spender, uint value) private {... */\n    tag_61:\n        /* \"contracts/token.sol\":2074:2079  value */\n      dup1\n        /* \"contracts/token.sol\":2046:2055  allowance */\n      0x02\n        /* \"contracts/token.sol\":2046:2062  allowance[owner] */\n      0x00\n        /* \"contracts/token.sol\":2056:2061  owner */\n      dup6\n        /* \"contracts/token.sol\":2046:2062  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2046:2071  allowance[owner][spender] */\n      0x00\n        /* \"contracts/token.sol\":2063:2070  spender */\n      dup5\n        /* \"contracts/token.sol\":2046:2071  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2046:2079  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token.sol\":2110:2117  spender */\n      dup2\n        /* \"contracts/token.sol\":2094:2125  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token.sol\":2103:2108  owner */\n      dup4\n        /* \"contracts/token.sol\":2094:2125  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token.sol\":2119:2124  value */\n      dup4\n        /* \"contracts/token.sol\":2094:2125  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token.sol\":1966:2132  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":287:414  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_65:\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":339:345  uint z */\n      0x00\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":380:381  x */\n      dup3\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":374:375  y */\n      dup3\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":370:371  x */\n      dup5\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":370:375  x - y */\n      sub\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":366:375  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":365:381  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":357:407  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":287:414  function sub(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token.sol\":2138:2354  function _transfer(address from, address to, uint value) private {... */\n    tag_67:\n        /* \"contracts/token.sol\":2231:2257  balanceOf[from].sub(value) */\n      tag_80\n        /* \"contracts/token.sol\":2251:2256  value */\n      dup2\n        /* \"contracts/token.sol\":2231:2240  balanceOf */\n      0x01\n        /* \"contracts/token.sol\":2231:2246  balanceOf[from] */\n      0x00\n        /* \"contracts/token.sol\":2241:2245  from */\n      dup7\n        /* \"contracts/token.sol\":2231:2246  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token.sol\":2231:2250  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"contracts/token.sol\":2231:2257  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"contracts/token.sol\":2213:2222  balanceOf */\n      0x01\n        /* \"contracts/token.sol\":2213:2228  balanceOf[from] */\n      0x00\n        /* \"contracts/token.sol\":2223:2227  from */\n      dup6\n        /* \"contracts/token.sol\":2213:2228  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2213:2257  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token.sol\":2283:2307  balanceOf[to].add(value) */\n      tag_81\n        /* \"contracts/token.sol\":2301:2306  value */\n      dup2\n        /* \"contracts/token.sol\":2283:2292  balanceOf */\n      0x01\n        /* \"contracts/token.sol\":2283:2296  balanceOf[to] */\n      0x00\n        /* \"contracts/token.sol\":2293:2295  to */\n      dup6\n        /* \"contracts/token.sol\":2283:2296  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token.sol\":2283:2300  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"contracts/token.sol\":2283:2307  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/token.sol\":2267:2276  balanceOf */\n      0x01\n        /* \"contracts/token.sol\":2267:2280  balanceOf[to] */\n      0x00\n        /* \"contracts/token.sol\":2277:2279  to */\n      dup5\n        /* \"contracts/token.sol\":2267:2280  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token.sol\":2267:2307  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token.sol\":2337:2339  to */\n      dup2\n        /* \"contracts/token.sol\":2322:2347  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token.sol\":2331:2335  from */\n      dup4\n        /* \"contracts/token.sol\":2322:2347  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token.sol\":2341:2346  value */\n      dup4\n        /* \"contracts/token.sol\":2322:2347  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token.sol\":2138:2354  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_82:\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":207:213  uint z */\n      0x00\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":248:249  x */\n      dup3\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":242:243  y */\n      dup3\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":238:239  x */\n      dup5\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":238:243  x + y */\n      add\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":234:243  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158206e199360c9af25df5576c0dff5404732a1b1ad4173a84c8c62594833bed5083f64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061126360529139605201905060405180910390206040518060400160405280600a81526020017f556e697377617020563200000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120600381905550610148735b38da6a701c568545dcfcb03fcb875f56beddc46402540be40061014e60201b60201c565b506102f3565b6101678160005461027060201b610ea91790919060201c565b6000819055506101c381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461027060201b610ea91790919060201c565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008282840191508110156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b610f61806103026000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f556e69737761702056320000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158206e199360c9af25df5576c0dff5404732a1b1ad4173a84c8c62594833bed5083f64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1263 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x148 PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH5 0x2540BE400 PUSH2 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x167 DUP2 PUSH1 0x0 SLOAD PUSH2 0x270 PUSH1 0x20 SHL PUSH2 0xEA9 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x1C3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x270 PUSH1 0x20 SHL PUSH2 0xEA9 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF61 DUP1 PUSH2 0x302 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E492D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x199360C9AF25DF5576C0DFF5404732 LOG1 0xB1 0xAD COINBASE PUSH20 0xA84C8C62594833BED5083F64736F6C6343000510 STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "215:3402:0:-;;;1029:517;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:517:0;1060:12;1116:7;1105:18;;1212:95;;;;;;;;;;;;;;;;;;;1341:4;;;;;;;;;;;;;;;;;1325:22;;;;;;1375:10;;;;;;;;;;;;;;;;;1365:21;;;;;;1404:7;1437:4;1184:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1184:272:0;;;1161:305;;;;;;1142:16;:324;;;;1477:62;1483:42;1527:11;1477:5;;;:62;;:::i;:::-;1029:517;215:3402;;1552:197;1624:22;1640:5;1624:11;;:15;;;;;;:22;;;;:::i;:::-;1610:11;:36;;;;1672:24;1690:5;1672:9;:13;1682:2;1672:13;;;;;;;;;;;;;;;;:17;;;;;;:24;;;;:::i;:::-;1656:9;:13;1666:2;1656:13;;;;;;;;;;;;;;;:40;;;;1732:2;1711:31;;1728:1;1711:31;;;1736:5;1711:31;;;;;;;;;;;;;;;;;;1552:197;;:::o;155:126:2:-;207:6;248:1;242;238;:5;234:9;;;233:16;;225:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:126;;;;:::o;215:3402:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f556e69737761702056320000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158206e199360c9af25df5576c0dff5404732a1b1ad4173a84c8c62594833bed5083f64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E697377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x554E492D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x199360C9AF25DF5576C0DFF5404732 LOG1 0xB1 0xAD COINBASE PUSH20 0xA84C8C62594833BED5083F64736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "215:3402:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:3402:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;294:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2360:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;429:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2652:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2652:295:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;715:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;388:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;574:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;459:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;459:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;829:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;829:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;342:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;342:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2510:136;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2510:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2953:662;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2953:662:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;506:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;506:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;294:42;;;;;;;;;;;;;;;;;;;:::o;2360:144::-;2424:4;2440:36;2449:10;2461:7;2470:5;2440:8;:36::i;:::-;2493:4;2486:11;;2360:144;;;;:::o;429:24::-;;;;:::o;2652:295::-;2730:4;2786:2;2750:9;:15;2760:4;2750:15;;;;;;;;;;;;;;;:27;2766:10;2750:27;;;;;;;;;;;;;;;;:39;2746:138;;2835:38;2867:5;2835:9;:15;2845:4;2835:15;;;;;;;;;;;;;;;:27;2851:10;2835:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2805:9;:15;2815:4;2805:15;;;;;;;;;;;;;;;:27;2821:10;2805:27;;;;;;;;;;;;;;;:68;;;;2746:138;2893:26;2903:4;2909:2;2913:5;2893:9;:26::i;:::-;2936:4;2929:11;;2652:295;;;;;:::o;715:108::-;757:66;715:108;;;:::o;388:35::-;421:2;388:35;:::o;574:31::-;;;;:::o;459:41::-;;;;;;;;;;;;;;;;;:::o;829:38::-;;;;;;;;;;;;;;;;;:::o;342:40::-;;;;;;;;;;;;;;;;;;;:::o;2510:136::-;2570:4;2586:32;2596:10;2608:2;2612:5;2586:9;:32::i;:::-;2635:4;2628:11;;2510:136;;;;:::o;2953:662::-;3098:15;3086:8;:27;;3078:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:14;3248:16;;757:66;3303:15;;3320:5;3327:7;3336:5;3343:6;:13;3350:5;3343:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3360:8;3292:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3292:77:0;;;3282:88;;;;;;3186:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3186:198:0;;;3163:231;;;;;;3146:248;;3404:24;3431:26;3441:6;3449:1;3452;3455;3431:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3431:26:0;;;;;;;;3404:53;;3503:1;3475:30;;:16;:30;;;;:59;;;;;3529:5;3509:25;;:16;:25;;;3475:59;3467:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:31;3586:5;3593:7;3602:5;3577:8;:31::i;:::-;2953:662;;;;;;;;;:::o;506:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1966:166::-;2074:5;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;:25;2063:7;2046:25;;;;;;;;;;;;;;;:33;;;;2110:7;2094:31;;2103:5;2094:31;;;2119:5;2094:31;;;;;;;;;;;;;;;;;;1966:166;;;:::o;287:127:2:-;339:6;380:1;374;370;:5;366:9;;;365:16;;357:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:127;;;;:::o;2138:216:0:-;2231:26;2251:5;2231:9;:15;2241:4;2231:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2213:9;:15;2223:4;2213:15;;;;;;;;;;;;;;;:44;;;;2283:24;2301:5;2283:9;:13;2293:2;2283:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2267:9;:13;2277:2;2267:13;;;;;;;;;;;;;;;:40;;;;2337:2;2322:25;;2331:4;2322:25;;;2341:5;2322:25;;;;;;;;;;;;;;;;;;2138:216;;;:::o;155:126:2:-;207:6;248:1;242;238;:5;234:9;;;233:16;;225:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:126;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "MSTORE"
								},
								{
									"begin": 1029,
									"end": 1546,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1029,
									"end": 1546,
									"name": "POP"
								},
								{
									"begin": 1060,
									"end": 1072,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1123,
									"name": "CHAINID"
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "SWAP1"
								},
								{
									"begin": 1105,
									"end": 1123,
									"name": "POP"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "MLOAD"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "DUP1"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "DUP1"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "SWAP2"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "CODECOPY"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "ADD"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "SWAP1"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "POP"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "MLOAD"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "DUP1"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "SWAP2"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "SUB"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "SWAP1"
								},
								{
									"begin": 1212,
									"end": 1307,
									"name": "KECCAK256"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "MLOAD"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "DUP1"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "ADD"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "MSTORE"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "DUP1"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "DUP2"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "MSTORE"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "ADD"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "PUSH",
									"value": "556E697377617020563200000000000000000000000000000000000000000000"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "DUP2"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "MSTORE"
								},
								{
									"begin": 1341,
									"end": 1345,
									"name": "POP"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "DUP1"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "MLOAD"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "SWAP1"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "ADD"
								},
								{
									"begin": 1325,
									"end": 1347,
									"name": "KECCAK256"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "MLOAD"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "DUP1"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "ADD"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "MSTORE"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "DUP1"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "DUP2"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "MSTORE"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "ADD"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "DUP2"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "MSTORE"
								},
								{
									"begin": 1375,
									"end": 1385,
									"name": "POP"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "DUP1"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "MLOAD"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "SWAP1"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "ADD"
								},
								{
									"begin": 1365,
									"end": 1386,
									"name": "KECCAK256"
								},
								{
									"begin": 1404,
									"end": 1411,
									"name": "DUP4"
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "ADDRESS"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MLOAD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP1"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP7"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP6"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP5"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP4"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP3"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "AND"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "AND"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "SWAP6"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "POP"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "SWAP1"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "DUP1"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "MLOAD"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "SWAP1"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "ADD"
								},
								{
									"begin": 1161,
									"end": 1466,
									"name": "KECCAK256"
								},
								{
									"begin": 1142,
									"end": 1158,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1142,
									"end": 1466,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 1466,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1466,
									"name": "SSTORE"
								},
								{
									"begin": 1142,
									"end": 1466,
									"name": "POP"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 1483,
									"end": 1525,
									"name": "PUSH",
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 1527,
									"end": 1538,
									"name": "PUSH",
									"value": "2540BE400"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "SHL"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "SHR"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1539,
									"name": "JUMPDEST"
								},
								{
									"begin": 1029,
									"end": 1546,
									"name": "POP"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "JUMP"
								},
								{
									"begin": 1552,
									"end": 1749,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1749,
									"name": "JUMPDEST"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2"
								},
								{
									"begin": 1624,
									"end": 1635,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1624,
									"end": 1635,
									"name": "SLOAD"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "SHL"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "PUSH [tag]",
									"value": "18446744073709551698"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "OR"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "SWAP1"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP2"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SHR"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "JUMPDEST"
								},
								{
									"begin": 1610,
									"end": 1621,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1646,
									"name": "DUP2"
								},
								{
									"begin": 1610,
									"end": 1646,
									"name": "SWAP1"
								},
								{
									"begin": 1610,
									"end": 1646,
									"name": "SSTORE"
								},
								{
									"begin": 1610,
									"end": 1646,
									"name": "POP"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "DUP2"
								},
								{
									"begin": 1672,
									"end": 1681,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1682,
									"end": 1684,
									"name": "DUP6"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "AND"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "AND"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "DUP2"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "MSTORE"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "ADD"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "SWAP1"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "DUP2"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "MSTORE"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "ADD"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "KECCAK256"
								},
								{
									"begin": 1672,
									"end": 1685,
									"name": "SLOAD"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "SHL"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "PUSH [tag]",
									"value": "18446744073709551698"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "OR"
								},
								{
									"begin": 1672,
									"end": 1689,
									"name": "SWAP1"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "SWAP2"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "SWAP1"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "SHR"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 1672,
									"end": 1696,
									"name": "JUMPDEST"
								},
								{
									"begin": 1656,
									"end": 1665,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "DUP5"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "AND"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "AND"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "DUP2"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "MSTORE"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "ADD"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "SWAP1"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "DUP2"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "MSTORE"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "ADD"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1656,
									"end": 1669,
									"name": "KECCAK256"
								},
								{
									"begin": 1656,
									"end": 1696,
									"name": "DUP2"
								},
								{
									"begin": 1656,
									"end": 1696,
									"name": "SWAP1"
								},
								{
									"begin": 1656,
									"end": 1696,
									"name": "SSTORE"
								},
								{
									"begin": 1656,
									"end": 1696,
									"name": "POP"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "DUP2"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "AND"
								},
								{
									"begin": 1728,
									"end": 1729,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "AND"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 1736,
									"end": 1741,
									"name": "DUP4"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MLOAD"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "DUP1"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "DUP3"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "DUP2"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "ADD"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "POP"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "POP"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MLOAD"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "DUP1"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "SUB"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "SWAP1"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "LOG3"
								},
								{
									"begin": 1552,
									"end": 1749,
									"name": "POP"
								},
								{
									"begin": 1552,
									"end": 1749,
									"name": "POP"
								},
								{
									"begin": 1552,
									"end": 1749,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "JUMPDEST"
								},
								{
									"begin": 207,
									"end": 213,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 249,
									"name": "DUP3"
								},
								{
									"begin": 242,
									"end": 243,
									"name": "DUP3"
								},
								{
									"begin": 238,
									"end": 239,
									"name": "DUP5"
								},
								{
									"begin": 238,
									"end": 243,
									"name": "ADD"
								},
								{
									"begin": 234,
									"end": 243,
									"name": "SWAP2"
								},
								{
									"begin": 234,
									"end": 243,
									"name": "POP"
								},
								{
									"begin": 234,
									"end": 243,
									"name": "DUP2"
								},
								{
									"begin": 233,
									"end": 249,
									"name": "LT"
								},
								{
									"begin": 233,
									"end": 249,
									"name": "ISZERO"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "JUMPI"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MLOAD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MSTORE"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "ADD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "ADD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP3"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "SUB"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP3"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MSTORE"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MSTORE"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "ADD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MSTORE"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "POP"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "ADD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "SWAP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "POP"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "POP"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "MLOAD"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "DUP1"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "SWAP2"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "SUB"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "SWAP1"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "REVERT"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 225,
									"end": 274,
									"name": "JUMPDEST"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "SWAP3"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "SWAP2"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "POP"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "POP"
								},
								{
									"begin": 155,
									"end": 281,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "JUMPDEST"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "DUP1"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "CODECOPY"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3617,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206e199360c9af25df5576c0dff5404732a1b1ad4173a84c8c62594833bed5083f64736f6c63430005100032",
									".code": [
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "MSTORE"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "POP"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "LT"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "SHR"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "GT"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "GT"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMP"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMP"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 3617,
											"name": "REVERT"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP4"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP4"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ISZERO"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMPI"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP4"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "EXP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "NOT"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP3"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "RETURN"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ADD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "AND"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ADD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP3"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ADD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP3"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "MLOAD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP3"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ISZERO"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ISZERO"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ISZERO"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ISZERO"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "MSTORE"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "ADD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "MLOAD"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SUB"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP1"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "RETURN"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "RETURN"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "JUMPDEST"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "AND"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP3"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "AND"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP3"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP3"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "JUMPDEST"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "MLOAD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP3"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ISZERO"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ISZERO"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ISZERO"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ISZERO"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "MSTORE"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "ADD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "MLOAD"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "DUP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP2"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SUB"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP1"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "RETURN"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "JUMPDEST"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "JUMPDEST"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "MLOAD"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "DUP1"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "DUP3"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "DUP2"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "MSTORE"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "SWAP2"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "POP"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "POP"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "MLOAD"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "DUP1"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "SWAP2"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "SUB"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "SWAP1"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "RETURN"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "MLOAD"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "DUP3"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "AND"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "MSTORE"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "ADD"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "SWAP2"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "POP"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "POP"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "MLOAD"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "DUP1"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "SWAP2"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "SUB"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "RETURN"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "MLOAD"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "DUP3"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "ADD"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "SWAP2"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "MLOAD"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "SWAP2"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "SUB"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "SWAP1"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "RETURN"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP3"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP3"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "MLOAD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SUB"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "RETURN"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "ADD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "AND"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "ADD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP3"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "MLOAD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP3"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "MSTORE"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "ADD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "MLOAD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SUB"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "RETURN"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP4"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP4"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "AND"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPI"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP4"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "EXP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "NOT"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "AND"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP3"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "RETURN"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "AND"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP3"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP3"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "MLOAD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP3"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ISZERO"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ISZERO"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ISZERO"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ISZERO"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "MSTORE"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "ADD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "MLOAD"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "DUP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SUB"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "RETURN"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "JUMPDEST"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "AND"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "AND"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "AND"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "DUP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "ADD"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP3"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP2"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "SWAP1"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "JUMPDEST"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "STOP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "JUMPDEST"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "AND"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP3"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "AND"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP3"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "JUMPDEST"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MLOAD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP3"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MLOAD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SUB"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "RETURN"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MLOAD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "PUSH",
											"value": "556E697377617020563200000000000000000000000000000000000000000000"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 336,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "JUMPDEST"
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "CALLER"
										},
										{
											"begin": 2461,
											"end": 2468,
											"name": "DUP5"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "DUP5"
										},
										{
											"begin": 2440,
											"end": 2448,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "JUMPDEST"
										},
										{
											"begin": 2493,
											"end": 2497,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2486,
											"end": 2497,
											"name": "SWAP1"
										},
										{
											"begin": 2486,
											"end": 2497,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP3"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "SWAP2"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2504,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 429,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "JUMPDEST"
										},
										{
											"begin": 2730,
											"end": 2734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "DUP7"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "AND"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2765,
											"name": "KECCAK256"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "CALLER"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "AND"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "AND"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "KECCAK256"
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "SLOAD"
										},
										{
											"begin": 2750,
											"end": 2789,
											"name": "EQ"
										},
										{
											"begin": 2746,
											"end": 2884,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2746,
											"end": 2884,
											"name": "JUMPI"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP3"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2849,
											"name": "DUP8"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "DUP2"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "MSTORE"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "ADD"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "SWAP1"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "DUP2"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "MSTORE"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "ADD"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "KECCAK256"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "CALLER"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "MSTORE"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "DUP2"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "MSTORE"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "ADD"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "KECCAK256"
										},
										{
											"begin": 2835,
											"end": 2862,
											"name": "SLOAD"
										},
										{
											"begin": 2835,
											"end": 2866,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2835,
											"end": 2866,
											"name": "SWAP1"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "SWAP2"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "SWAP1"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2835,
											"end": 2873,
											"name": "JUMPDEST"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "DUP7"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "AND"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "AND"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "DUP2"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MSTORE"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "ADD"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "SWAP1"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "DUP2"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "MSTORE"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "ADD"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2820,
											"name": "KECCAK256"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2831,
											"name": "CALLER"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "AND"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "AND"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "DUP2"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "MSTORE"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "ADD"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "DUP2"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "MSTORE"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "ADD"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "KECCAK256"
										},
										{
											"begin": 2805,
											"end": 2873,
											"name": "DUP2"
										},
										{
											"begin": 2805,
											"end": 2873,
											"name": "SWAP1"
										},
										{
											"begin": 2805,
											"end": 2873,
											"name": "SSTORE"
										},
										{
											"begin": 2805,
											"end": 2873,
											"name": "POP"
										},
										{
											"begin": 2746,
											"end": 2884,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2746,
											"end": 2884,
											"name": "JUMPDEST"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "DUP5"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "DUP5"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DUP5"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "JUMPDEST"
										},
										{
											"begin": 2936,
											"end": 2940,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "SWAP1"
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP4"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "SWAP3"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "POP"
										},
										{
											"begin": 2652,
											"end": 2947,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "JUMPDEST"
										},
										{
											"begin": 757,
											"end": 823,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "SHL"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "DUP2"
										},
										{
											"begin": 715,
											"end": 823,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 423,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 388,
											"end": 423,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "JUMPDEST"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "SLOAD"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "DUP2"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "MSTORE"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "KECCAK256"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "POP"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "MSTORE"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "MSTORE"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "KECCAK256"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SWAP1"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "POP"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "SLOAD"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "DUP2"
										},
										{
											"begin": 829,
											"end": 867,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "PUSH",
											"value": "554E492D56320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 342,
											"end": 382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "JUMPDEST"
										},
										{
											"begin": 2570,
											"end": 2574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2618,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER"
										},
										{
											"begin": 2608,
											"end": 2610,
											"name": "DUP5"
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "DUP5"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2586,
											"end": 2618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2618,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2586,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2635,
											"end": 2639,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2639,
											"name": "SWAP1"
										},
										{
											"begin": 2628,
											"end": 2639,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP3"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "SWAP2"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "POP"
										},
										{
											"begin": 2510,
											"end": 2646,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "JUMPDEST"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3086,
											"end": 3094,
											"name": "DUP5"
										},
										{
											"begin": 3086,
											"end": 3113,
											"name": "LT"
										},
										{
											"begin": 3086,
											"end": 3113,
											"name": "ISZERO"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "JUMPI"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP3"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "SUB"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP3"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MSTORE"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "ADD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "SWAP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "POP"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "MLOAD"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "DUP1"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "SWAP2"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "SUB"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "SWAP1"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "REVERT"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3078,
											"end": 3136,
											"name": "JUMPDEST"
										},
										{
											"begin": 3146,
											"end": 3160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3264,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3248,
											"end": 3264,
											"name": "SLOAD"
										},
										{
											"begin": 757,
											"end": 823,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "SHL"
										},
										{
											"begin": 3320,
											"end": 3325,
											"name": "DUP10"
										},
										{
											"begin": 3327,
											"end": 3334,
											"name": "DUP10"
										},
										{
											"begin": 3336,
											"end": 3341,
											"name": "DUP10"
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3355,
											"name": "DUP15"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "KECCAK256"
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "DUP2"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SLOAD"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "DUP1"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SWAP3"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SWAP2"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SWAP1"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "ADD"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SWAP2"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SWAP1"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "POP"
										},
										{
											"begin": 3343,
											"end": 3358,
											"name": "SSTORE"
										},
										{
											"begin": 3360,
											"end": 3368,
											"name": "DUP11"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MLOAD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP1"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP8"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP7"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "AND"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "AND"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP6"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "AND"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "AND"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP5"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP4"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP3"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "DUP2"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "ADD"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "SWAP7"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "POP"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "SWAP1"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3369,
											"name": "MSTORE"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "DUP1"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "MLOAD"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "SWAP1"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "ADD"
										},
										{
											"begin": 3282,
											"end": 3370,
											"name": "KECCAK256"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MLOAD"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP1"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP1"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "POP"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP4"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP3"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "ADD"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "SWAP3"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "POP"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "POP"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "POP"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "SWAP1"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "DUP1"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "MLOAD"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "ADD"
										},
										{
											"begin": 3163,
											"end": 3394,
											"name": "KECCAK256"
										},
										{
											"begin": 3146,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3146,
											"end": 3394,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3441,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "DUP7"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP7"
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP7"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ADD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP1"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP6"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ADD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "AND"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "AND"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ADD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP4"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ADD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP3"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ADD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SWAP5"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP2"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SUB"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SWAP1"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP1"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP5"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SUB"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SWAP1"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "DUP6"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "GAS"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "STATICCALL"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "SUB"
										},
										{
											"begin": 3431,
											"end": 3457,
											"name": "MLOAD"
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 3491,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "EQ"
										},
										{
											"begin": 3475,
											"end": 3505,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "JUMPI"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "POP"
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "DUP9"
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "AND"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "DUP2"
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "AND"
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "EQ"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3475,
											"end": 3534,
											"name": "JUMPDEST"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "JUMPI"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MLOAD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP1"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP1"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP3"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "SUB"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP3"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP1"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MSTORE"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "POP"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "ADD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "SWAP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "POP"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "POP"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "MLOAD"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "DUP1"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "SWAP2"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "SUB"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "SWAP1"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "REVERT"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3467,
											"end": 3567,
											"name": "JUMPDEST"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP10"
										},
										{
											"begin": 3593,
											"end": 3600,
											"name": "DUP10"
										},
										{
											"begin": 3602,
											"end": 3607,
											"name": "DUP10"
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3577,
											"end": 3608,
											"name": "JUMPDEST"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "POP"
										},
										{
											"begin": 2953,
											"end": 3615,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "JUMPDEST"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "KECCAK256"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP1"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "MSTORE"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "KECCAK256"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SWAP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "POP"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "SLOAD"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 506,
											"end": 567,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "JUMPDEST"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP1"
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2061,
											"name": "DUP6"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "AND"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "AND"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "MSTORE"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "ADD"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "SWAP1"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "MSTORE"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "ADD"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "KECCAK256"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP5"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "AND"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "AND"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "MSTORE"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "ADD"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "SWAP1"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "MSTORE"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "ADD"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2071,
											"name": "KECCAK256"
										},
										{
											"begin": 2046,
											"end": 2079,
											"name": "DUP2"
										},
										{
											"begin": 2046,
											"end": 2079,
											"name": "SWAP1"
										},
										{
											"begin": 2046,
											"end": 2079,
											"name": "SSTORE"
										},
										{
											"begin": 2046,
											"end": 2079,
											"name": "POP"
										},
										{
											"begin": 2110,
											"end": 2117,
											"name": "DUP2"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "DUP4"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "AND"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "DUP4"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "DUP2"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "MSTORE"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "ADD"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "MLOAD"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "DUP1"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "SWAP2"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "SUB"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "LOG3"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2132,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP3"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 371,
											"name": "DUP5"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 366,
											"end": 375,
											"name": "SWAP2"
										},
										{
											"begin": 366,
											"end": 375,
											"name": "POP"
										},
										{
											"begin": 366,
											"end": 375,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "GT"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "ISZERO"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "POP"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "REVERT"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "SWAP3"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "JUMPDEST"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2"
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP7"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "AND"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "AND"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "DUP2"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "MSTORE"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "ADD"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "SWAP1"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "DUP2"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "MSTORE"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "ADD"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "KECCAK256"
										},
										{
											"begin": 2231,
											"end": 2246,
											"name": "SLOAD"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2231,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "AND"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2231,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "DUP6"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "AND"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "AND"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "DUP2"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "MSTORE"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "ADD"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "SWAP1"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "DUP2"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "MSTORE"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "ADD"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "KECCAK256"
										},
										{
											"begin": 2213,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2213,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2213,
											"end": 2257,
											"name": "SSTORE"
										},
										{
											"begin": 2213,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2"
										},
										{
											"begin": 2283,
											"end": 2292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "DUP6"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "AND"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "AND"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "DUP2"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "MSTORE"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "DUP2"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "MSTORE"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "KECCAK256"
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "SLOAD"
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "AND"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2283,
											"end": 2307,
											"name": "JUMPDEST"
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2279,
											"name": "DUP5"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "AND"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "DUP2"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "MSTORE"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "ADD"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "DUP2"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "MSTORE"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "ADD"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "KECCAK256"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "DUP2"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "SSTORE"
										},
										{
											"begin": 2267,
											"end": 2307,
											"name": "POP"
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "DUP2"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2335,
											"name": "DUP4"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "AND"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP4"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MLOAD"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP1"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP3"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP2"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MSTORE"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "ADD"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SWAP2"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MLOAD"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP1"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SWAP2"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SUB"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SWAP1"
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "LOG3"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "POP"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "POP"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "POP"
										},
										{
											"begin": 2138,
											"end": 2354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 207,
											"end": 213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 242,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 239,
											"name": "DUP5"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 243,
											"name": "SWAP2"
										},
										{
											"begin": 234,
											"end": 243,
											"name": "POP"
										},
										{
											"begin": 234,
											"end": 243,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "REVERT"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "SWAP3"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "SWAP2"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/token.sol\":\"UniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token.sol\":{\"keccak256\":\"0xa32fb1ea0fd1d6368c8e7f947763c28d40a5b3979e3cb2edbdfa861c03f780eb\",\"urls\":[\"bzz-raw://3610643c58ff320b3ba46d743351ff05cee819e5548fd3570ef6586d8ab1be2d\",\"dweb:/ipfs/QmUZdUxzDFCJDRNt1sZu8xjqtB2H4qsegzSV8j3ZZNpp3C\"]},\"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]},\"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/token.sol:UniswapV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/token.sol:UniswapV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/token.sol:UniswapV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/token.sol:UniswapV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/token.sol:UniswapV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820ff22ab7da989930832d52aea86720f48becbd8cfeb714cd05dc2c26826a046d464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820ff22ab7da989930832d52aea86720f48becbd8cfeb714cd05dc2c26826a046d464736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SELFDESTRUCT 0x22 0xAB PUSH30 0xA989930832D52AEA86720F48BECBD8CFEB714CD05DC2C26826A046D46473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "132:430:2:-;;:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820ff22ab7da989930832d52aea86720f48becbd8cfeb714cd05dc2c26826a046d464736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SELFDESTRUCT 0x22 0xAB PUSH30 0xA989930832D52AEA86720F48BECBD8CFEB714CD05DC2C26826A046D46473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "132:430:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820ff22ab7da989930832d52aea86720f48becbd8cfeb714cd05dc2c26826a046d464736f6c63430005100032",
									".code": [
										{
											"begin": 132,
											"end": 562,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "ADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "EQ"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/token.sol": {
				"ast": {
					"absolutePath": "contracts/token.sol",
					"exportedSymbols": {
						"UniswapV2ERC20": [
							389
						]
					},
					"id": 390,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol",
							"file": "https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 390,
							"sourceUnit": 508,
							"src": "26:97:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol",
							"file": "https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 390,
							"sourceUnit": 583,
							"src": "124:89:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 507,
										"src": "242:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$507",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "242:15:0"
								}
							],
							"contractDependencies": [
								507
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389,
								507
							],
							"name": "UniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 582,
										"src": "270:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$582",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "264:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "283:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "294:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "294:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "556e6973776170205632",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738",
											"typeString": "literal_string \"Uniswap V2\""
										},
										"value": "Uniswap V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "342:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "342:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "554e492d5632",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0c49a525f6758cfb27d0ada1467d2a2e99733995423d47ae30ae4ba2ba563255",
											"typeString": "literal_string \"UNI-V2\""
										},
										"value": "UNI-V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "388:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "388:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "429:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "429:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "459:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "459:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "478:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "506:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "514:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "506:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "533:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "525:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "544:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "574:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "574:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "715:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "757:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 389,
									"src": "829:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "837:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "829:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "848:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "889:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "912:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "937:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "888:60:0"
									},
									"src": "874:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "969:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "991:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1011:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "968:54:0"
									},
									"src": "954:69:0"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1050:496:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 91,
														"src": "1060:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1060:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1060:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1105:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1082:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1142:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1222:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "1212:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1212:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1341:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1335:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1335:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "1325:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1325:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1381:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1375:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1375:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "1365:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1365:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1404:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "1437:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$389",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$389",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1429:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1429:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "1184:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1184:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1184:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "1161:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1161:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1142:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1142:324:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1483:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
														},
														{
															"argumentTypes": null,
															"hexValue": "3130303030303030303030",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1527:11:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"value": "10000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															}
														],
														"id": 86,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1477:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1477:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1477:62:0"
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:0:0"
									},
									"scope": 389,
									"src": "1029:517:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1600:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 99,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1610:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 102,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 100,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1624:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 531,
															"src": "1624:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1624:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1610:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1610:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 106,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1656:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 108,
														"indexExpression": {
															"argumentTypes": null,
															"id": 107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1666:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1656:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1690:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1672:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 111,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1682:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1672:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 531,
															"src": "1672:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1672:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1656:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1656:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1720:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1732:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1736:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 117,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "1706:36:0"
											}
										]
									},
									"documentation": null,
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1567:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1579:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1566:24:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:0:0"
									},
									"scope": 389,
									"src": "1552:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1805:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 133,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 135,
														"indexExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1815:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1853:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 136,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1833:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 138,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1843:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1833:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 553,
															"src": "1833:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1833:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1815:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1815:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 144,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1869:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1899:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 145,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1883:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 553,
															"src": "1883:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1883:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1869:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1869:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 152,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1929:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1943:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1935:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1935:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "1947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 151,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "EmitStatement",
												"src": "1915:38:0"
											}
										]
									},
									"documentation": null,
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1769:26:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1805:0:0"
									},
									"scope": 389,
									"src": "1755:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "2036:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 169,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2046:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 172,
															"indexExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "2056:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2046:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 173,
														"indexExpression": {
															"argumentTypes": null,
															"id": 171,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2046:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 174,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2074:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2046:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2046:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 178,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2110:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 180,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2119:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "2094:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "EmitStatement",
												"src": "2089:36:0"
											}
										]
									},
									"documentation": null,
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1999:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2016:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1983:44:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:0"
									},
									"scope": 389,
									"src": "1966:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2203:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2213:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 195,
														"indexExpression": {
															"argumentTypes": null,
															"id": 194,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2213:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 200,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2251:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2231:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 198,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "2241:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2231:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 553,
															"src": "2231:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2231:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2213:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "2213:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 204,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2267:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 206,
														"indexExpression": {
															"argumentTypes": null,
															"id": 205,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2277:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2267:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 211,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2301:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 207,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2283:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 209,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 208,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "2293:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2283:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 531,
															"src": "2283:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2283:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2267:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2267:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 216,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 217,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2337:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2341:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 215,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "EmitStatement",
												"src": "2317:30:0"
											}
										]
									},
									"documentation": null,
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2157:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2171:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:38:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:0:0"
									},
									"scope": 389,
									"src": "2138:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2430:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2449:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 234,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "2470:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 231,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2440:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2440:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2493:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 230,
												"id": 239,
												"nodeType": "Return",
												"src": "2486:11:0"
											}
										]
									},
									"documentation": null,
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2376:29:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2424:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2423:6:0"
									},
									"scope": 389,
									"src": "2360:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 452,
									"visibility": "external"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "2576:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2596:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 253,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2608:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 254,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2586:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2586:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2586:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2635:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 249,
												"id": 258,
												"nodeType": "Return",
												"src": "2628:11:0"
											}
										]
									},
									"documentation": null,
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2528:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2540:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:24:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "2570:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2569:6:0"
									},
									"scope": 389,
									"src": "2510:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 461,
									"visibility": "external"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2736:211:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 271,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2750:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 273,
															"indexExpression": {
																"argumentTypes": null,
																"id": 272,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2760:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2750:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 276,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "2766:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2766:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2750:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2786:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2787:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2750:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 300,
												"nodeType": "IfStatement",
												"src": "2746:138:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "2791:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 282,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2805:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 286,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 283,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 262,
																			"src": "2815:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2805:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 287,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 284,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "2821:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2821:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2805:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "2867:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 288,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2835:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 290,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 289,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 262,
																					"src": "2845:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2835:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 291,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "2851:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2851:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2835:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 553,
																		"src": "2835:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2835:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2805:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "2805:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2909:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 304,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "2913:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2893:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2893:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2893:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2936:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 270,
												"id": 308,
												"nodeType": "Return",
												"src": "2929:11:0"
											}
										]
									},
									"documentation": null,
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2674:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2688:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2700:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2673:38:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2729:6:0"
									},
									"scope": 389,
									"src": "2652:295:0",
									"stateMutability": "nonpayable",
									"superFunction": 472,
									"visibility": "external"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "3068:547:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 328,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3086:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "3098:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3098:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3086:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3115:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															601
														],
														"referencedDeclaration": 601,
														"src": "3078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3078:58:0"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "3146:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 335,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3220:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 341,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3248:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 345,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3303:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 346,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 312,
																					"src": "3320:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 314,
																					"src": "3327:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 316,
																					"src": "3336:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3343:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 349,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3343:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 351,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 350,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 312,
																							"src": "3350:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3343:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 353,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "3360:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 343,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 584,
																					"src": "3292:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3292:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3292:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 342,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "3282:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3282:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "3186:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3186:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3186:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 337,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "3163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3163:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3146:248:0"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "3404:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 359,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3404:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 362,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "3441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 363,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3449:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 364,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3452:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 365,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3455:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 361,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "3431:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3431:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3404:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3475:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3503:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3495:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3475:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 374,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3509:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "3529:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3509:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3475:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3536:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															601
														],
														"referencedDeclaration": 601,
														"src": "3467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3467:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3467:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 382,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3586:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 384,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3602:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3577:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3577:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3577:31:0"
											}
										]
									},
									"documentation": null,
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2969:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3001:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 319,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3028:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3037:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3048:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 323,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2968:90:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3068:0:0"
									},
									"scope": 389,
									"src": "2953:662:0",
									"stateMutability": "nonpayable",
									"superFunction": 506,
									"visibility": "external"
								}
							],
							"scope": 390,
							"src": "215:3402:0"
						}
					],
					"src": "0:3617:0"
				},
				"id": 0
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v2-core/blob/master/contracts/interfaces/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							507
						]
					},
					"id": 508,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 399,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "73:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "96:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "121:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "72:60:1"
									},
									"src": "58:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 407,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "153:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "175:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "195:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:54:1"
									},
									"src": "138:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "252:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:1"
									},
									"scope": 507,
									"src": "213:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "313:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:15:1"
									},
									"scope": 507,
									"src": "272:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "376:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 419,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:7:1"
									},
									"scope": 507,
									"src": "333:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "434:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:1"
									},
									"scope": 507,
									"src": "388:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:15:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "502:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:6:1"
									},
									"scope": 507,
									"src": "445:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "532:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "547:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:32:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "587:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:6:1"
									},
									"scope": 507,
									"src": "513:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "616:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "633:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:29:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:6:1"
									},
									"scope": 507,
									"src": "599:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "704:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:1"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "734:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:1"
									},
									"scope": 507,
									"src": "674:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "781:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:38:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "823:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:6:1"
									},
									"scope": 507,
									"src": "745:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "886:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:1"
									},
									"scope": 507,
									"src": "835:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "950:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 479,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:9:1"
									},
									"scope": 507,
									"src": "900:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "980:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:15:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1018:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:6:1"
									},
									"scope": 507,
									"src": "964:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1046:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1061:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1090:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1105:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 498,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1105:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1114:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:90:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:1"
									},
									"scope": 507,
									"src": "1030:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "26:1121:1"
						}
					],
					"src": "0:1148:1"
				},
				"id": 1
			},
			"https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v2-core/blob/master/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							582
						]
					},
					"id": 583,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "215:66:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 519,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 516,
																			"src": "234:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 520,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "238:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 521,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "242:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "238:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "234:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "233:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 525,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "248:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "233:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															601
														],
														"referencedDeclaration": 601,
														"src": "225:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "225:49:2"
											}
										]
									},
									"documentation": null,
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "168:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "176:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:16:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "207:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:8:2"
									},
									"scope": 582,
									"src": "155:126:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 541,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "366:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 542,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "370:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 543,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "370:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "366:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 547,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "380:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "365:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "383:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															601
														],
														"referencedDeclaration": 601,
														"src": "357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "357:50:2"
											}
										]
									},
									"documentation": null,
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "308:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:16:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "339:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:8:2"
									},
									"scope": 582,
									"src": "287:127:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "480:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 563,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "498:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "498:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 566,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 560,
																					"src": "509:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 567,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 555,
																						"src": "513:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 568,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 557,
																						"src": "517:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "513:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "509:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "508:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 572,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "522:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "508:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 574,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "527:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "508:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "498:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															601
														],
														"referencedDeclaration": 601,
														"src": "490:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "490:63:2"
											}
										]
									},
									"documentation": null,
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "433:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "441:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:16:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "472:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "471:8:2"
									},
									"scope": 582,
									"src": "420:140:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 583,
							"src": "132:430:2"
						}
					],
					"src": "0:563:2"
				},
				"id": 2
			}
		}
	}
}