{
	"id": "567aa432aaa2e16bbeab85497cd30652",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.1 ;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ninterface IStake{\n    function depositStake( uint amount) external;\n    function withdrawStake(uint amount) external;\n\n    function setDuration(uint duration) external;\n\n    function getTimeLeft() external view returns(uint256);\n\n    function calculateReward(uint amount) external;\n    function withdrawReward(uint amount) external;\n\n}\n\ncontract Staking{\n    using SafeMath for uint256;\n    using SafeMath for uint;\n    IERC20 public stakingToken;\n    IERC20 public rewardsToken;\n\n    uint public totalStake;\n    uint public totalRewardsPaid;\n    \n    uint public duration; // stake duration\n    uint public rate; //stake rate\n\n    mapping (address => uint) public _balance;\n\n    //modifiers\n\n    //contract methods\n    constructor(address _stakeToken, address _rewardsToken){\n        stakingToken = IERC20(_stakeToken);\n        rewardsToken = IERC20(_rewardsToken);\n    }\n\n    function depositStake (uint amount) external {\n        require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\");\n\n        _balance[msg.sender] = _balance[msg.sender].add(amount);\n        totalStake = totalStake.add(amount);\n    }\n    function balance() external view returns (uint256){\n        return _balance[msg.sender];\n    }\n\n    // function setDuration(uint duration) public\n \n    \n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/staking.sol": {
				"IStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTimeLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"depositStake(uint256)": "cb82cc8f",
							"getTimeLeft()": "c7e284b8",
							"setDuration(uint256)": "f6be71d1",
							"withdrawReward(uint256)": "523a3f08",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"IStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0x8689dd2a34baf5ced14234327a745bd91cd0bd5dc6d0f3386793771a320b5b88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5da37aef1ea725dff2e0c604228a748876ddd7c026cbeae04b703abc4847a0\",\"dweb:/ipfs/QmPhP4HdvEqTyqcEAouxfyZU7q5QCvYtCypju9w2nYeWoY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardsPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":617:1677  contract Staking{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking.sol\":1000:1152  constructor(address _stakeToken, address _rewardsToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking.sol\":1087:1098  _stakeToken */\n  dup2\n    /* \"contracts/staking.sol\":1065:1077  stakingToken */\n  0x00\n  dup1\n    /* \"contracts/staking.sol\":1065:1099  stakingToken = IERC20(_stakeToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1131:1144  _rewardsToken */\n  dup1\n    /* \"contracts/staking.sol\":1109:1121  rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/staking.sol\":1109:1145  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1000:1152  constructor(address _stakeToken, address _rewardsToken){... */\n  pop\n  pop\n    /* \"contracts/staking.sol\":617:1677  contract Staking{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/staking.sol\":617:1677  contract Staking{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":617:1677  contract Staking{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b0e9f3f\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcb82cc8f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x74958e35\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking.sol\":832:852  uint public duration */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":876:892  uint public rate */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":793:821  uint public totalRewardsPaid */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1523:1617  function balance() external view returns (uint256){... */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1158:1518  function depositStake (uint amount) external {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":912:953  mapping (address => uint) public _balance */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":832:852  uint public duration */\n    tag_14:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":876:892  uint public rate */\n    tag_18:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_21:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":793:821  uint public totalRewardsPaid */\n    tag_25:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1523:1617  function balance() external view returns (uint256){... */\n    tag_31:\n        /* \"contracts/staking.sol\":1565:1572  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":1590:1598  _balance */\n      0x06\n        /* \"contracts/staking.sol\":1590:1610  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1599:1609  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1590:1610  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1583:1610  return _balance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1523:1617  function balance() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1158:1518  function depositStake (uint amount) external {... */\n    tag_36:\n        /* \"contracts/staking.sol\":1259:1265  amount */\n      dup1\n        /* \"contracts/staking.sol\":1221:1233  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1221:1243  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/staking.sol\":1244:1254  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1221:1255  stakingToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/staking.sol\":1221:1265  stakingToken.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/staking.sol\":1213:1297  require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/staking.sol\":1315:1327  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1315:1340  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking.sol\":1341:1351  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1361:1365  this */\n      address\n        /* \"contracts/staking.sol\":1368:1374  amount */\n      dup5\n        /* \"contracts/staking.sol\":1315:1375  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/staking.sol\":1307:1400  require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/staking.sol\":1434:1466  _balance[msg.sender].add(amount) */\n      tag_65\n        /* \"contracts/staking.sol\":1459:1465  amount */\n      dup2\n        /* \"contracts/staking.sol\":1434:1442  _balance */\n      0x06\n        /* \"contracts/staking.sol\":1434:1454  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1443:1453  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1434:1454  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1434:1458  _balance[msg.sender].add */\n      tag_66\n      swap1\n        /* \"contracts/staking.sol\":1434:1466  _balance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"contracts/staking.sol\":1411:1419  _balance */\n      0x06\n        /* \"contracts/staking.sol\":1411:1431  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1420:1430  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1411:1431  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1411:1466  _balance[msg.sender] = _balance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1489:1511  totalStake.add(amount) */\n      tag_67\n        /* \"contracts/staking.sol\":1504:1510  amount */\n      dup2\n        /* \"contracts/staking.sol\":1489:1499  totalStake */\n      sload(0x02)\n        /* \"contracts/staking.sol\":1489:1503  totalStake.add */\n      tag_66\n      swap1\n        /* \"contracts/staking.sol\":1489:1511  totalStake.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/staking.sol\":1476:1486  totalStake */\n      0x02\n        /* \"contracts/staking.sol\":1476:1511  totalStake = totalStake.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1158:1518  function depositStake (uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_38:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":912:953  mapping (address => uint) public _balance */\n    tag_43:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_71:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_72:\n        /* \"#utility.yul\":177:201   */\n      tag_101\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_71\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_103\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_72\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_73:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_74:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_75:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_107\n        /* \"#utility.yul\":741:775   */\n      tag_108\n        /* \"#utility.yul\":750:774   */\n      tag_109\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_73\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":741:775   */\n      tag_74\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":723:776   */\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_76:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_111\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_75\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_77:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_113\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_76\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_78:\n        /* \"#utility.yul\":1167:1218   */\n      tag_115\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_77\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_23:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_117\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_78\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_80:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1936   */\n    tag_82:\n        /* \"#utility.yul\":1887:1911   */\n      tag_122\n        /* \"#utility.yul\":1905:1910   */\n      dup2\n        /* \"#utility.yul\":1887:1911   */\n      tag_71\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1912   */\n      eq\n        /* \"#utility.yul\":1867:1930   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1923:1924   */\n      dup1\n        /* \"#utility.yul\":1916:1928   */\n      revert\n        /* \"#utility.yul\":1867:1930   */\n    tag_123:\n        /* \"#utility.yul\":1814:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2081   */\n    tag_83:\n        /* \"#utility.yul\":1988:1993   */\n      0x00\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2013:2033   */\n      calldataload\n        /* \"#utility.yul\":2004:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2075   */\n      tag_125\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2042:2075   */\n      tag_82\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1942:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2416   */\n    tag_35:\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x20\n        /* \"#utility.yul\":2183:2192   */\n      dup3\n        /* \"#utility.yul\":2174:2181   */\n      dup5\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2282   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":2201:2280   */\n      tag_128\n      tag_80\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2163:2282   */\n    tag_127:\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2346:2399   */\n      tag_129\n        /* \"#utility.yul\":2391:2398   */\n      dup5\n        /* \"#utility.yul\":2382:2388   */\n      dup3\n        /* \"#utility.yul\":2371:2380   */\n      dup6\n        /* \"#utility.yul\":2367:2389   */\n      add\n        /* \"#utility.yul\":2346:2399   */\n      tag_83\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2336:2399   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2409   */\n      pop\n        /* \"#utility.yul\":2087:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_84:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_131\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_73\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_85:\n        /* \"#utility.yul\":2597:2621   */\n      tag_133\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_84\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_134:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_86:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_136\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_85\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_42:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_139\n      tag_80\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2873:2992   */\n    tag_138:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_140\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_86\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_87:\n        /* \"#utility.yul\":3219:3243   */\n      tag_142\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_84\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_48:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_144\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_87\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3627   */\n    tag_88:\n        /* \"#utility.yul\":3541:3546   */\n      0x00\n        /* \"#utility.yul\":3572:3578   */\n      dup2\n        /* \"#utility.yul\":3566:3579   */\n      mload\n        /* \"#utility.yul\":3557:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3621   */\n      tag_146\n        /* \"#utility.yul\":3615:3620   */\n      dup2\n        /* \"#utility.yul\":3588:3621   */\n      tag_82\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3484:3627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3633:3984   */\n    tag_52:\n        /* \"#utility.yul\":3703:3709   */\n      0x00\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup3\n        /* \"#utility.yul\":3731:3738   */\n      dup5\n        /* \"#utility.yul\":3727:3750   */\n      sub\n        /* \"#utility.yul\":3723:3755   */\n      slt\n        /* \"#utility.yul\":3720:3839   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":3758:3837   */\n      tag_149\n      tag_80\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3720:3839   */\n    tag_148:\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3903:3967   */\n      tag_150\n        /* \"#utility.yul\":3959:3966   */\n      dup5\n        /* \"#utility.yul\":3950:3956   */\n      dup3\n        /* \"#utility.yul\":3939:3948   */\n      dup6\n        /* \"#utility.yul\":3935:3957   */\n      add\n        /* \"#utility.yul\":3903:3967   */\n      tag_88\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3893:3967   */\n      swap2\n      pop\n        /* \"#utility.yul\":3849:3977   */\n      pop\n        /* \"#utility.yul\":3633:3984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4159   */\n    tag_89:\n        /* \"#utility.yul\":4074:4085   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup3\n        /* \"#utility.yul\":4103:4106   */\n      dup3\n        /* \"#utility.yul\":4096:4115   */\n      mstore\n        /* \"#utility.yul\":4148:4152   */\n      0x20\n        /* \"#utility.yul\":4143:4146   */\n      dup3\n        /* \"#utility.yul\":4139:4153   */\n      add\n        /* \"#utility.yul\":4124:4153   */\n      swap1\n      pop\n        /* \"#utility.yul\":3990:4159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4165:4342   */\n    tag_90:\n        /* \"#utility.yul\":4305:4334   */\n      0x4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000\n        /* \"#utility.yul\":4301:4302   */\n      0x00\n        /* \"#utility.yul\":4293:4299   */\n      dup3\n        /* \"#utility.yul\":4289:4303   */\n      add\n        /* \"#utility.yul\":4282:4335   */\n      mstore\n        /* \"#utility.yul\":4165:4342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4348:4714   */\n    tag_91:\n        /* \"#utility.yul\":4490:4493   */\n      0x00\n        /* \"#utility.yul\":4511:4578   */\n      tag_154\n        /* \"#utility.yul\":4575:4577   */\n      0x1b\n        /* \"#utility.yul\":4570:4573   */\n      dup4\n        /* \"#utility.yul\":4511:4578   */\n      tag_89\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4504:4578   */\n      swap2\n      pop\n        /* \"#utility.yul\":4587:4680   */\n      tag_155\n        /* \"#utility.yul\":4676:4679   */\n      dup3\n        /* \"#utility.yul\":4587:4680   */\n      tag_90\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4705:4707   */\n      0x20\n        /* \"#utility.yul\":4700:4703   */\n      dup3\n        /* \"#utility.yul\":4696:4708   */\n      add\n        /* \"#utility.yul\":4689:4708   */\n      swap1\n      pop\n        /* \"#utility.yul\":4348:4714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4720:5139   */\n    tag_55:\n        /* \"#utility.yul\":4886:4890   */\n      0x00\n        /* \"#utility.yul\":4924:4926   */\n      0x20\n        /* \"#utility.yul\":4913:4922   */\n      dup3\n        /* \"#utility.yul\":4909:4927   */\n      add\n        /* \"#utility.yul\":4901:4927   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:4982   */\n      dup2\n        /* \"#utility.yul\":4967:4971   */\n      dup2\n        /* \"#utility.yul\":4963:4983   */\n      sub\n        /* \"#utility.yul\":4959:4960   */\n      0x00\n        /* \"#utility.yul\":4948:4957   */\n      dup4\n        /* \"#utility.yul\":4944:4961   */\n      add\n        /* \"#utility.yul\":4937:4984   */\n      mstore\n        /* \"#utility.yul\":5001:5132   */\n      tag_157\n        /* \"#utility.yul\":5127:5131   */\n      dup2\n        /* \"#utility.yul\":5001:5132   */\n      tag_91\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4993:5132   */\n      swap1\n      pop\n        /* \"#utility.yul\":4720:5139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5145:5587   */\n    tag_57:\n        /* \"#utility.yul\":5294:5298   */\n      0x00\n        /* \"#utility.yul\":5332:5334   */\n      0x60\n        /* \"#utility.yul\":5321:5330   */\n      dup3\n        /* \"#utility.yul\":5317:5335   */\n      add\n        /* \"#utility.yul\":5309:5335   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5416   */\n      tag_159\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5402:5411   */\n      dup4\n        /* \"#utility.yul\":5398:5415   */\n      add\n        /* \"#utility.yul\":5389:5395   */\n      dup7\n        /* \"#utility.yul\":5345:5416   */\n      tag_87\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5426:5498   */\n      tag_160\n        /* \"#utility.yul\":5494:5496   */\n      0x20\n        /* \"#utility.yul\":5483:5492   */\n      dup4\n        /* \"#utility.yul\":5479:5497   */\n      add\n        /* \"#utility.yul\":5470:5476   */\n      dup6\n        /* \"#utility.yul\":5426:5498   */\n      tag_87\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5508:5580   */\n      tag_161\n        /* \"#utility.yul\":5576:5578   */\n      0x40\n        /* \"#utility.yul\":5565:5574   */\n      dup4\n        /* \"#utility.yul\":5561:5579   */\n      add\n        /* \"#utility.yul\":5552:5558   */\n      dup5\n        /* \"#utility.yul\":5508:5580   */\n      tag_72\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5145:5587   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5593:5683   */\n    tag_92:\n        /* \"#utility.yul\":5627:5634   */\n      0x00\n        /* \"#utility.yul\":5670:5675   */\n      dup2\n        /* \"#utility.yul\":5663:5676   */\n      iszero\n        /* \"#utility.yul\":5656:5677   */\n      iszero\n        /* \"#utility.yul\":5645:5677   */\n      swap1\n      pop\n        /* \"#utility.yul\":5593:5683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5689:5805   */\n    tag_93:\n        /* \"#utility.yul\":5759:5780   */\n      tag_164\n        /* \"#utility.yul\":5774:5779   */\n      dup2\n        /* \"#utility.yul\":5759:5780   */\n      tag_92\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5752:5757   */\n      dup2\n        /* \"#utility.yul\":5749:5781   */\n      eq\n        /* \"#utility.yul\":5739:5799   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5792:5793   */\n      dup1\n        /* \"#utility.yul\":5785:5797   */\n      revert\n        /* \"#utility.yul\":5739:5799   */\n    tag_165:\n        /* \"#utility.yul\":5689:5805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:5948   */\n    tag_94:\n        /* \"#utility.yul\":5865:5870   */\n      0x00\n        /* \"#utility.yul\":5896:5902   */\n      dup2\n        /* \"#utility.yul\":5890:5903   */\n      mload\n        /* \"#utility.yul\":5881:5903   */\n      swap1\n      pop\n        /* \"#utility.yul\":5912:5942   */\n      tag_167\n        /* \"#utility.yul\":5936:5941   */\n      dup2\n        /* \"#utility.yul\":5912:5942   */\n      tag_93\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5811:5948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6299   */\n    tag_61:\n        /* \"#utility.yul\":6021:6027   */\n      0x00\n        /* \"#utility.yul\":6070:6072   */\n      0x20\n        /* \"#utility.yul\":6058:6067   */\n      dup3\n        /* \"#utility.yul\":6049:6056   */\n      dup5\n        /* \"#utility.yul\":6045:6068   */\n      sub\n        /* \"#utility.yul\":6041:6073   */\n      slt\n        /* \"#utility.yul\":6038:6157   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":6076:6155   */\n      tag_170\n      tag_80\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6038:6157   */\n    tag_169:\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6221:6282   */\n      tag_171\n        /* \"#utility.yul\":6274:6281   */\n      dup5\n        /* \"#utility.yul\":6265:6271   */\n      dup3\n        /* \"#utility.yul\":6254:6263   */\n      dup6\n        /* \"#utility.yul\":6250:6272   */\n      add\n        /* \"#utility.yul\":6221:6282   */\n      tag_94\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6211:6282   */\n      swap2\n      pop\n        /* \"#utility.yul\":6167:6292   */\n      pop\n        /* \"#utility.yul\":5954:6299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6305:6476   */\n    tag_95:\n        /* \"#utility.yul\":6445:6468   */\n      0x4661696c656420746f207374616b6520746f6b656e0000000000000000000000\n        /* \"#utility.yul\":6441:6442   */\n      0x00\n        /* \"#utility.yul\":6433:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6443   */\n      add\n        /* \"#utility.yul\":6422:6469   */\n      mstore\n        /* \"#utility.yul\":6305:6476   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6482:6848   */\n    tag_96:\n        /* \"#utility.yul\":6624:6627   */\n      0x00\n        /* \"#utility.yul\":6645:6712   */\n      tag_174\n        /* \"#utility.yul\":6709:6711   */\n      0x15\n        /* \"#utility.yul\":6704:6707   */\n      dup4\n        /* \"#utility.yul\":6645:6712   */\n      tag_89\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6638:6712   */\n      swap2\n      pop\n        /* \"#utility.yul\":6721:6814   */\n      tag_175\n        /* \"#utility.yul\":6810:6813   */\n      dup3\n        /* \"#utility.yul\":6721:6814   */\n      tag_95\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6839:6841   */\n      0x20\n        /* \"#utility.yul\":6834:6837   */\n      dup3\n        /* \"#utility.yul\":6830:6842   */\n      add\n        /* \"#utility.yul\":6823:6842   */\n      swap1\n      pop\n        /* \"#utility.yul\":6482:6848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6854:7273   */\n    tag_64:\n        /* \"#utility.yul\":7020:7024   */\n      0x00\n        /* \"#utility.yul\":7058:7060   */\n      0x20\n        /* \"#utility.yul\":7047:7056   */\n      dup3\n        /* \"#utility.yul\":7043:7061   */\n      add\n        /* \"#utility.yul\":7035:7061   */\n      swap1\n      pop\n        /* \"#utility.yul\":7107:7116   */\n      dup2\n        /* \"#utility.yul\":7101:7105   */\n      dup2\n        /* \"#utility.yul\":7097:7117   */\n      sub\n        /* \"#utility.yul\":7093:7094   */\n      0x00\n        /* \"#utility.yul\":7082:7091   */\n      dup4\n        /* \"#utility.yul\":7078:7095   */\n      add\n        /* \"#utility.yul\":7071:7118   */\n      mstore\n        /* \"#utility.yul\":7135:7266   */\n      tag_177\n        /* \"#utility.yul\":7261:7265   */\n      dup2\n        /* \"#utility.yul\":7135:7266   */\n      tag_96\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7127:7266   */\n      swap1\n      pop\n        /* \"#utility.yul\":6854:7273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7279:7459   */\n    tag_97:\n        /* \"#utility.yul\":7327:7404   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7324:7325   */\n      0x00\n        /* \"#utility.yul\":7317:7405   */\n      mstore\n        /* \"#utility.yul\":7424:7428   */\n      0x11\n        /* \"#utility.yul\":7421:7422   */\n      0x04\n        /* \"#utility.yul\":7414:7429   */\n      mstore\n        /* \"#utility.yul\":7448:7452   */\n      0x24\n        /* \"#utility.yul\":7445:7446   */\n      0x00\n        /* \"#utility.yul\":7438:7453   */\n      revert\n        /* \"#utility.yul\":7465:7656   */\n    tag_70:\n        /* \"#utility.yul\":7505:7508   */\n      0x00\n        /* \"#utility.yul\":7524:7544   */\n      tag_180\n        /* \"#utility.yul\":7542:7543   */\n      dup3\n        /* \"#utility.yul\":7524:7544   */\n      tag_71\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7519:7544   */\n      swap2\n      pop\n        /* \"#utility.yul\":7558:7578   */\n      tag_181\n        /* \"#utility.yul\":7576:7577   */\n      dup4\n        /* \"#utility.yul\":7558:7578   */\n      tag_71\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7553:7578   */\n      swap3\n      pop\n        /* \"#utility.yul\":7601:7602   */\n      dup3\n        /* \"#utility.yul\":7598:7599   */\n      dup3\n        /* \"#utility.yul\":7594:7603   */\n      add\n        /* \"#utility.yul\":7587:7603   */\n      swap1\n      pop\n        /* \"#utility.yul\":7622:7625   */\n      dup1\n        /* \"#utility.yul\":7619:7620   */\n      dup3\n        /* \"#utility.yul\":7616:7626   */\n      gt\n        /* \"#utility.yul\":7613:7649   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":7629:7647   */\n      tag_183\n      tag_97\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7613:7649   */\n    tag_182:\n        /* \"#utility.yul\":7465:7656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220873b382c3e435836b82bf85db55ca560ef8096aadf8e8a0616f54f9c400f470a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a88380380610a888339818101604052810190610032919061011d565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b61091c8061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638b0e9f3f116100665780638b0e9f3f14610110578063b69ef8a81461012e578063cb82cc8f1461014c578063d1af0c7d14610168578063d3aceae21461018657610093565b80630fb5a6b4146100985780632c4e722e146100b657806372f702f3146100d457806374958e35146100f2575b600080fd5b6100a06101b6565b6040516100ad9190610514565b60405180910390f35b6100be6101bc565b6040516100cb9190610514565b60405180910390f35b6100dc6101c2565b6040516100e991906105ae565b60405180910390f35b6100fa6101e6565b6040516101079190610514565b60405180910390f35b6101186101ec565b6040516101259190610514565b60405180910390f35b6101366101f2565b6040516101439190610514565b60405180910390f35b610166600480360381019061016191906105fa565b610239565b005b6101706104a7565b60405161017d91906105ae565b60405180910390f35b6101a0600480360381019061019b9190610665565b6104cd565b6040516101ad9190610514565b60405180910390f35b60045481565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161029391906106a1565b602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906106d1565b1015610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c9061075b565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103729392919061077b565b6020604051808303816000875af1158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b591906107ea565b6103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90610863565b60405180910390fd5b61044681600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061049e816002546104e590919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600081836104f391906108b2565b905092915050565b6000819050919050565b61050e816104fb565b82525050565b60006020820190506105296000830184610505565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061057461056f61056a8461052f565b61054f565b61052f565b9050919050565b600061058682610559565b9050919050565b60006105988261057b565b9050919050565b6105a88161058d565b82525050565b60006020820190506105c3600083018461059f565b92915050565b600080fd5b6105d7816104fb565b81146105e257600080fd5b50565b6000813590506105f4816105ce565b92915050565b6000602082840312156106105761060f6105c9565b5b600061061e848285016105e5565b91505092915050565b60006106328261052f565b9050919050565b61064281610627565b811461064d57600080fd5b50565b60008135905061065f81610639565b92915050565b60006020828403121561067b5761067a6105c9565b5b600061068984828501610650565b91505092915050565b61069b81610627565b82525050565b60006020820190506106b66000830184610692565b92915050565b6000815190506106cb816105ce565b92915050565b6000602082840312156106e7576106e66105c9565b5b60006106f5848285016106bc565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610745601b836106fe565b91506107508261070f565b602082019050919050565b6000602082019050818103600083015261077481610738565b9050919050565b60006060820190506107906000830186610692565b61079d6020830185610692565b6107aa6040830184610505565b949350505050565b60008115159050919050565b6107c7816107b2565b81146107d257600080fd5b50565b6000815190506107e4816107be565b92915050565b600060208284031215610800576107ff6105c9565b5b600061080e848285016107d5565b91505092915050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b600061084d6015836106fe565b915061085882610817565b602082019050919050565b6000602082019050818103600083015261087c81610840565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108bd826104fb565b91506108c8836104fb565b92508282019050808211156108e0576108df610883565b5b9291505056fea2646970667358221220873b382c3e435836b82bf85db55ca560ef8096aadf8e8a0616f54f9c400f470a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA88 CODESIZE SUB DUP1 PUSH2 0xA88 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA DUP3 PUSH2 0xBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xDF JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x117 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH2 0x133 PUSH2 0xBA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142 DUP6 DUP3 DUP7 ADD PUSH2 0x108 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153 DUP6 DUP3 DUP7 ADD PUSH2 0x108 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x91C DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x186 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x74958E35 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x446 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x49E DUP2 PUSH1 0x2 SLOAD PUSH2 0x4E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50E DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x529 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x505 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 PUSH2 0x56F PUSH2 0x56A DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 DUP3 PUSH2 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x598 DUP3 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A8 DUP2 PUSH2 0x58D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D7 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F4 DUP2 PUSH2 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP3 PUSH2 0x52F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65F DUP2 PUSH2 0x639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP5 DUP3 DUP6 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69B DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x692 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6CB DUP2 PUSH2 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP3 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH1 0x1B DUP4 PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP PUSH2 0x750 DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x790 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x505 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E4 DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80E DUP5 DUP3 DUP6 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH1 0x15 DUP4 PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP PUSH2 0x858 DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87C DUP2 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8BD DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP2 POP PUSH2 0x8C8 DUP4 PUSH2 0x4FB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0x883 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 EXTCODESIZE CODESIZE 0x2C RETURNDATACOPY NUMBER PC CALLDATASIZE 0xB8 0x2B 0xF8 0x5D 0xB5 0x5C 0xA5 PUSH1 0xEF DUP1 SWAP7 0xAA 0xDF DUP15 DUP11 MOD AND CREATE2 0x4F SWAP13 BLOCKHASH 0xF SELFBALANCE EXP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "617:1060:0:-:0;;;1000:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1087:11;1065:12;;:34;;;;;;;;;;;;;;;;;;1131:13;1109:12;;:36;;;;;;;;;;;;;;;;;;1000:152;;617:1060;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;617:1060:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_58": {
									"entryPoint": 1229,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_395": {
									"entryPoint": 1253,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balance_140": {
									"entryPoint": 498,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositStake_129": {
									"entryPoint": 569,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@duration_52": {
									"entryPoint": 438,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rate_54": {
									"entryPoint": 444,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_46": {
									"entryPoint": 1191,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_43": {
									"entryPoint": 450,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewardsPaid_50": {
									"entryPoint": 486,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_48": {
									"entryPoint": 492,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$219_to_t_address_fromStack": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$219__to_t_address__fromStack_reversed": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$219_to_t_address": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7659:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:3",
														"type": ""
													}
												],
												"src": "442:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "616:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "623:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "592:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "602:3:3",
														"type": ""
													}
												],
												"src": "574:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "690:9:3",
														"type": ""
													}
												],
												"src": "640:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "838:9:3",
														"type": ""
													}
												],
												"src": "788:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1004:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$219_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "974:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "984:9:3",
														"type": ""
													}
												],
												"src": "920:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1145:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$219_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$219_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1133:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1140:3:3",
														"type": ""
													}
												],
												"src": "1066:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$219_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$219__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1327:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1338:4:3",
														"type": ""
													}
												],
												"src": "1231:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1537:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1520:6:3",
														"type": ""
													}
												],
												"src": "1487:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1914:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1926:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1916:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1905:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1887:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1887:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1877:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:43:3"
															},
															"nodeType": "YulIf",
															"src": "1867:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1850:5:3",
														"type": ""
													}
												],
												"src": "1814:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2013:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2042:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1972:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1980:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1988:5:3",
														"type": ""
													}
												],
												"src": "1942:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2201:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:3"
															},
															"nodeType": "YulIf",
															"src": "2163:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2292:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2336:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2371:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2382:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2391:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2346:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2336:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2123:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2134:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2146:6:3",
														"type": ""
													}
												],
												"src": "2087:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2477:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2449:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2459:7:3",
														"type": ""
													}
												],
												"src": "2422:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:3"
															},
															"nodeType": "YulIf",
															"src": "2577:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:3",
														"type": ""
													}
												],
												"src": "2524:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:3",
														"type": ""
													}
												],
												"src": "2652:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:32:3"
															},
															"nodeType": "YulIf",
															"src": "2873:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3002:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2844:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:3",
														"type": ""
													}
												],
												"src": "2797:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3197:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3185:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3192:3:3",
														"type": ""
													}
												],
												"src": "3132:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3364:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3338:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3349:4:3",
														"type": ""
													}
												],
												"src": "3256:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3557:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3572:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3566:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3557:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3615:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3588:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3525:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3533:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3541:5:3",
														"type": ""
													}
												],
												"src": "3484:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3710:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3756:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3758:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3758:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3731:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:32:3"
															},
															"nodeType": "YulIf",
															"src": "3720:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3849:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3864:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3878:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3868:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3893:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3939:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3950:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3935:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3935:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3959:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3903:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3903:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3893:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3680:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3691:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3703:6:3",
														"type": ""
													}
												],
												"src": "3633:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4086:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4103:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4108:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4124:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4148:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4124:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4058:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4063:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4074:11:3",
														"type": ""
													}
												],
												"src": "3990:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4271:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4293:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:14:3"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4305:29:3",
																		"type": "",
																		"value": "Not enough tokens for stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4282:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4263:6:3",
														"type": ""
													}
												],
												"src": "4165:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4570:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4511:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4504:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4676:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																	"nodeType": "YulIdentifier",
																	"src": "4587:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4689:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4700:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4696:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4696:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4689:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4482:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4490:3:3",
														"type": ""
													}
												],
												"src": "4348:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4901:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4913:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4901:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4948:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4959:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4944:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4967:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4963:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4937:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4993:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5127:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5001:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4993:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4871:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4886:4:3",
														"type": ""
													}
												],
												"src": "4720:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5309:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5321:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5332:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5317:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5309:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5389:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5402:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5413:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5345:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5470:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5494:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5479:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5426:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5552:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5576:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5508:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5255:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5267:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5275:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5283:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5294:4:3",
														"type": ""
													}
												],
												"src": "5145:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5635:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5645:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5670:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5663:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5645:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5617:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5627:7:3",
														"type": ""
													}
												],
												"src": "5593:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5783:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5795:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5785:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5785:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5785:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5752:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5774:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5759:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5759:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5749:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5749:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5742:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:40:3"
															},
															"nodeType": "YulIf",
															"src": "5739:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5722:5:3",
														"type": ""
													}
												],
												"src": "5689:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5881:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5896:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5890:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5881:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5936:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5912:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5912:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5849:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5857:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5865:5:3",
														"type": ""
													}
												],
												"src": "5811:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6028:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6074:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6076:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6076:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6076:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6049:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6058:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6045:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6070:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6041:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:32:3"
															},
															"nodeType": "YulIf",
															"src": "6038:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6167:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6182:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6186:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6211:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6254:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6265:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6250:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6250:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6274:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6221:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6211:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5998:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6009:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6021:6:3",
														"type": ""
													}
												],
												"src": "5954:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6411:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6433:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6441:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6429:14:3"
																	},
																	{
																		"hexValue": "4661696c656420746f207374616b6520746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6445:23:3",
																		"type": "",
																		"value": "Failed to stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6422:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6422:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6403:6:3",
														"type": ""
													}
												],
												"src": "6305:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6638:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6704:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6709:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6645:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6638:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6810:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																	"nodeType": "YulIdentifier",
																	"src": "6721:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6834:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6616:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6624:3:3",
														"type": ""
													}
												],
												"src": "6482:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7025:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7035:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7047:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7058:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7043:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7035:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7078:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7101:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7097:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7097:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7127:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7261:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7135:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7135:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7127:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7005:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7020:4:3",
														"type": ""
													}
												],
												"src": "6854:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7307:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7324:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7327:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7317:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7424:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7414:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7448:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7279:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7509:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7519:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7542:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7524:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7519:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7553:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7576:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7558:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7553:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7598:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7601:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7594:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7587:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7627:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7629:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7629:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7629:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7619:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7622:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7616:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:10:3"
															},
															"nodeType": "YulIf",
															"src": "7613:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7496:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7499:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7505:3:3",
														"type": ""
													}
												],
												"src": "7465:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$219_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$219_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$219_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$219__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$219_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens for stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638b0e9f3f116100665780638b0e9f3f14610110578063b69ef8a81461012e578063cb82cc8f1461014c578063d1af0c7d14610168578063d3aceae21461018657610093565b80630fb5a6b4146100985780632c4e722e146100b657806372f702f3146100d457806374958e35146100f2575b600080fd5b6100a06101b6565b6040516100ad9190610514565b60405180910390f35b6100be6101bc565b6040516100cb9190610514565b60405180910390f35b6100dc6101c2565b6040516100e991906105ae565b60405180910390f35b6100fa6101e6565b6040516101079190610514565b60405180910390f35b6101186101ec565b6040516101259190610514565b60405180910390f35b6101366101f2565b6040516101439190610514565b60405180910390f35b610166600480360381019061016191906105fa565b610239565b005b6101706104a7565b60405161017d91906105ae565b60405180910390f35b6101a0600480360381019061019b9190610665565b6104cd565b6040516101ad9190610514565b60405180910390f35b60045481565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161029391906106a1565b602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906106d1565b1015610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c9061075b565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103729392919061077b565b6020604051808303816000875af1158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b591906107ea565b6103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90610863565b60405180910390fd5b61044681600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e590919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061049e816002546104e590919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b600081836104f391906108b2565b905092915050565b6000819050919050565b61050e816104fb565b82525050565b60006020820190506105296000830184610505565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061057461056f61056a8461052f565b61054f565b61052f565b9050919050565b600061058682610559565b9050919050565b60006105988261057b565b9050919050565b6105a88161058d565b82525050565b60006020820190506105c3600083018461059f565b92915050565b600080fd5b6105d7816104fb565b81146105e257600080fd5b50565b6000813590506105f4816105ce565b92915050565b6000602082840312156106105761060f6105c9565b5b600061061e848285016105e5565b91505092915050565b60006106328261052f565b9050919050565b61064281610627565b811461064d57600080fd5b50565b60008135905061065f81610639565b92915050565b60006020828403121561067b5761067a6105c9565b5b600061068984828501610650565b91505092915050565b61069b81610627565b82525050565b60006020820190506106b66000830184610692565b92915050565b6000815190506106cb816105ce565b92915050565b6000602082840312156106e7576106e66105c9565b5b60006106f5848285016106bc565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610745601b836106fe565b91506107508261070f565b602082019050919050565b6000602082019050818103600083015261077481610738565b9050919050565b60006060820190506107906000830186610692565b61079d6020830185610692565b6107aa6040830184610505565b949350505050565b60008115159050919050565b6107c7816107b2565b81146107d257600080fd5b50565b6000815190506107e4816107be565b92915050565b600060208284031215610800576107ff6105c9565b5b600061080e848285016107d5565b91505092915050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b600061084d6015836106fe565b915061085882610817565b602082019050919050565b6000602082019050818103600083015261087c81610840565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108bd826104fb565b91506108c8836104fb565b92508282019050808211156108e0576108df610883565b5b9291505056fea2646970667358221220873b382c3e435836b82bf85db55ca560ef8096aadf8e8a0616f54f9c400f470a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x186 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x74958E35 EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30C SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x446 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x49E DUP2 PUSH1 0x2 SLOAD PUSH2 0x4E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50E DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x529 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x505 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x574 PUSH2 0x56F PUSH2 0x56A DUP5 PUSH2 0x52F JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 DUP3 PUSH2 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x598 DUP3 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A8 DUP2 PUSH2 0x58D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D7 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F4 DUP2 PUSH2 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x610 JUMPI PUSH2 0x60F PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x632 DUP3 PUSH2 0x52F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0x627 JUMP JUMPDEST DUP2 EQ PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65F DUP2 PUSH2 0x639 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP5 DUP3 DUP6 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69B DUP2 PUSH2 0x627 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x692 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6CB DUP2 PUSH2 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP3 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH1 0x1B DUP4 PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP PUSH2 0x750 DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x790 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x79D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x7AA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x505 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E4 DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x5C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80E DUP5 DUP3 DUP6 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH1 0x15 DUP4 PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP PUSH2 0x858 DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87C DUP2 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8BD DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP2 POP PUSH2 0x8C8 DUP4 PUSH2 0x4FB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0x883 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 EXTCODESIZE CODESIZE 0x2C RETURNDATACOPY NUMBER PC CALLDATASIZE 0xB8 0x2B 0xF8 0x5D 0xB5 0x5C 0xA5 PUSH1 0xEF DUP1 SWAP7 0xAA 0xDF DUP15 DUP11 MOD AND CREATE2 0x4F SWAP13 BLOCKHASH 0xF SELFBALANCE EXP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "617:1060:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1523:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1158:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;832:20;;;;:::o;876:16::-;;;;:::o;700:26::-;;;;;;;;;;;;:::o;793:28::-;;;;:::o;765:22::-;;;;:::o;1523:94::-;1565:7;1590:8;:20;1599:10;1590:20;;;;;;;;;;;;;;;;1583:27;;1523:94;:::o;1158:360::-;1259:6;1221:12;;;;;;;;;;:22;;;1244:10;1221:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;1213:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1315:12;;;;;;;;;;:25;;;1341:10;1361:4;1368:6;1315:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1307:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1434:32;1459:6;1434:8;:20;1443:10;1434:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1411:8;:20;1420:10;1411:20;;;;;;;;;;;;;;;:55;;;;1489:22;1504:6;1489:10;;:14;;:22;;;;:::i;:::-;1476:10;:35;;;;1158:360;:::o;732:26::-;;;;;;;;;;;;;:::o;912:41::-;;;;;;;;;;;;;;;;;:::o;2755:96:2:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:122;1887:24;1905:5;1887:24;:::i;:::-;1880:5;1877:35;1867:63;;1926:1;1923;1916:12;1867:63;1814:122;:::o;1942:139::-;1988:5;2026:6;2013:20;2004:29;;2042:33;2069:5;2042:33;:::i;:::-;1942:139;;;;:::o;2087:329::-;2146:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:119;;;2201:79;;:::i;:::-;2163:119;2321:1;2346:53;2391:7;2382:6;2371:9;2367:22;2346:53;:::i;:::-;2336:63;;2292:117;2087:329;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:143::-;3541:5;3572:6;3566:13;3557:22;;3588:33;3615:5;3588:33;:::i;:::-;3484:143;;;;:::o;3633:351::-;3703:6;3752:2;3740:9;3731:7;3727:23;3723:32;3720:119;;;3758:79;;:::i;:::-;3720:119;3878:1;3903:64;3959:7;3950:6;3939:9;3935:22;3903:64;:::i;:::-;3893:74;;3849:128;3633:351;;;;:::o;3990:169::-;4074:11;4108:6;4103:3;4096:19;4148:4;4143:3;4139:14;4124:29;;3990:169;;;;:::o;4165:177::-;4305:29;4301:1;4293:6;4289:14;4282:53;4165:177;:::o;4348:366::-;4490:3;4511:67;4575:2;4570:3;4511:67;:::i;:::-;4504:74;;4587:93;4676:3;4587:93;:::i;:::-;4705:2;4700:3;4696:12;4689:19;;4348:366;;;:::o;4720:419::-;4886:4;4924:2;4913:9;4909:18;4901:26;;4973:9;4967:4;4963:20;4959:1;4948:9;4944:17;4937:47;5001:131;5127:4;5001:131;:::i;:::-;4993:139;;4720:419;;;:::o;5145:442::-;5294:4;5332:2;5321:9;5317:18;5309:26;;5345:71;5413:1;5402:9;5398:17;5389:6;5345:71;:::i;:::-;5426:72;5494:2;5483:9;5479:18;5470:6;5426:72;:::i;:::-;5508;5576:2;5565:9;5561:18;5552:6;5508:72;:::i;:::-;5145:442;;;;;;:::o;5593:90::-;5627:7;5670:5;5663:13;5656:21;5645:32;;5593:90;;;:::o;5689:116::-;5759:21;5774:5;5759:21;:::i;:::-;5752:5;5749:32;5739:60;;5795:1;5792;5785:12;5739:60;5689:116;:::o;5811:137::-;5865:5;5896:6;5890:13;5881:22;;5912:30;5936:5;5912:30;:::i;:::-;5811:137;;;;:::o;5954:345::-;6021:6;6070:2;6058:9;6049:7;6045:23;6041:32;6038:119;;;6076:79;;:::i;:::-;6038:119;6196:1;6221:61;6274:7;6265:6;6254:9;6250:22;6221:61;:::i;:::-;6211:71;;6167:125;5954:345;;;;:::o;6305:171::-;6445:23;6441:1;6433:6;6429:14;6422:47;6305:171;:::o;6482:366::-;6624:3;6645:67;6709:2;6704:3;6645:67;:::i;:::-;6638:74;;6721:93;6810:3;6721:93;:::i;:::-;6839:2;6834:3;6830:12;6823:19;;6482:366;;;:::o;6854:419::-;7020:4;7058:2;7047:9;7043:18;7035:26;;7107:9;7101:4;7097:20;7093:1;7082:9;7078:17;7071:47;7135:131;7261:4;7135:131;:::i;:::-;7127:139;;6854:419;;;:::o;7279:180::-;7327:77;7324:1;7317:88;7424:4;7421:1;7414:15;7448:4;7445:1;7438:15;7465:191;7505:3;7524:20;7542:1;7524:20;:::i;:::-;7519:25;;7558:20;7576:1;7558:20;:::i;:::-;7553:25;;7601:1;7598;7594:9;7587:16;;7622:3;7619:1;7616:10;7613:36;;;7629:18;;:::i;:::-;7613:36;7465:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "466400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2902",
								"balance()": "2548",
								"depositStake(uint256)": "infinite",
								"duration()": "2430",
								"rate()": "2452",
								"rewardsToken()": "infinite",
								"stakingToken()": "infinite",
								"totalRewardsPaid()": "2496",
								"totalStake()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1000,
									"end": 1152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1077,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1065,
									"end": 1077,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1131,
									"end": 1144,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1109,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1109,
									"end": 1145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1000,
									"end": 1152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 1677,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220873b382c3e435836b82bf85db55ca560ef8096aadf8e8a0616f54f9c400f470a64736f6c63430008120033",
									".code": [
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "D3ACEAE2"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "74958E35"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 1677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 876,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 876,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1523,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1523,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1158,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1158,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 912,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 912,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 912,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 876,
											"end": 892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1598,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1244,
											"end": 1254,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1221,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1221,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1213,
											"end": 1297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1340,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1341,
											"end": 1351,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1365,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1315,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1315,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1315,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1307,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1307,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1442,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1453,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1434,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1489,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1489,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1887,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1912,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2042,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2201,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2346,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3588,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3755,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3758,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 3957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3903,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4096,
											"end": 4115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4139,
											"end": 4153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3990,
											"end": 4159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4342,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4165,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4334,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000"
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4289,
											"end": 4303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4714,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4348,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 4570,
											"end": 4573,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4511,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4578,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4511,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4578,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4587,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4680,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4587,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4714,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4714,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 5139,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4720,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4983,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4959,
											"end": 4960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4984,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5001,
											"end": 5132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5132,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5001,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4993,
											"end": 5132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4993,
											"end": 5132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 5139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 5139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 5139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4720,
											"end": 5139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5334,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5309,
											"end": 5335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5411,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5345,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5345,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5426,
											"end": 5498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5498,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5426,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5574,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5508,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5580,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5508,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5645,
											"end": 5677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5805,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5689,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5774,
											"end": 5779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5759,
											"end": 5780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5759,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5781,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5739,
											"end": 5799,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5799,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5739,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 5903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5936,
											"end": 5941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5912,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 5942,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5912,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6056,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6068,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6073,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6076,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6076,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6038,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6254,
											"end": 6263,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6221,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6221,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6221,
											"end": 6282,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6221,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6167,
											"end": 6292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 6299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6305,
											"end": 6476,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 6305,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6468,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F207374616B6520746F6B656E0000000000000000000000"
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6429,
											"end": 6443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6305,
											"end": 6476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6305,
											"end": 6476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6848,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6482,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6709,
											"end": 6711,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6704,
											"end": 6707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6645,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6712,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6645,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6638,
											"end": 6712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6638,
											"end": 6712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 6721,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6814,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6721,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6482,
											"end": 6848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 7273,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6854,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7020,
											"end": 7024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7043,
											"end": 7061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7035,
											"end": 7061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7035,
											"end": 7061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7117,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7078,
											"end": 7095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7135,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7135,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7135,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7135,
											"end": 7266,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7135,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 7273,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 7273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 7273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7459,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7279,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7404,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7428,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7421,
											"end": 7422,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7414,
											"end": 7429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7448,
											"end": 7452,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7453,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7524,
											"end": 7544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7544,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7524,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7576,
											"end": 7577,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 7558,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7587,
											"end": 7603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7587,
											"end": 7603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7622,
											"end": 7625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7616,
											"end": 7626,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7629,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"balance()": "b69ef8a8",
							"depositStake(uint256)": "cb82cc8f",
							"duration()": "0fb5a6b4",
							"rate()": "2c4e722e",
							"rewardsToken()": "d1af0c7d",
							"stakingToken()": "72f702f3",
							"totalRewardsPaid()": "74958e35",
							"totalStake()": "8b0e9f3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0x8689dd2a34baf5ced14234327a745bd91cd0bd5dc6d0f3386793771a320b5b88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5da37aef1ea725dff2e0c604228a748876ddd7c026cbeae04b703abc4847a0\",\"dweb:/ipfs/QmPhP4HdvEqTyqcEAouxfyZU7q5QCvYtCypju9w2nYeWoY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "contracts/staking.sol:Staking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)219"
							},
							{
								"astId": 46,
								"contract": "contracts/staking.sol:Staking",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)219"
							},
							{
								"astId": 48,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 50,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalRewardsPaid",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/staking.sol:Staking",
								"label": "duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/staking.sol:Staking",
								"label": "rate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "contracts/staking.sol:Staking",
								"label": "_balance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)219": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"IERC20": [
							219
						],
						"IStake": [
							34
						],
						"SafeMath": [
							531
						],
						"Staking": [
							141
						]
					},
					"id": 142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "31:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 220,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 142,
							"sourceUnit": 532,
							"src": "168:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStake",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "IStake",
							"nameLocation": "290:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb82cc8f",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "311:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 34,
									"src": "302:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25d5971f",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:13:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 34,
									"src": "352:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6be71d1",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "412:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "429:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 34,
									"src": "403:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7e284b8",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeLeft",
									"nameLocation": "463:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:0"
									},
									"scope": 34,
									"src": "454:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "523:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "539:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:13:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:0"
									},
									"scope": 34,
									"src": "514:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "523a3f08",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawReward",
									"nameLocation": "575:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "590:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:13:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 34,
									"src": "566:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 142,
							"src": "280:335:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "Staking",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 37,
									"libraryName": {
										"id": 35,
										"name": "SafeMath",
										"nameLocations": [
											"645:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 531,
										"src": "645:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "639:27:0",
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 40,
									"libraryName": {
										"id": 38,
										"name": "SafeMath",
										"nameLocations": [
											"677:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 531,
										"src": "677:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "671:24:0",
									"typeName": {
										"id": 39,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "690:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 43,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "714:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "700:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$219",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 42,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 41,
											"name": "IERC20",
											"nameLocations": [
												"700:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 219,
											"src": "700:6:0"
										},
										"referencedDeclaration": 219,
										"src": "700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$219",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 46,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "746:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "732:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$219",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 45,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 44,
											"name": "IERC20",
											"nameLocations": [
												"732:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 219,
											"src": "732:6:0"
										},
										"referencedDeclaration": 219,
										"src": "732:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$219",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 48,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "777:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "765:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "765:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74958e35",
									"id": 50,
									"mutability": "mutable",
									"name": "totalRewardsPaid",
									"nameLocation": "805:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "793:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 52,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "844:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "832:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "832:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 54,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "888:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "876:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 58,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "945:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 141,
									"src": "912:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 57,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 55,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "921:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "912:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 56,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "932:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1055:97:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1065:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$219",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 67,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1087:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 66,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$219_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1080:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$219",
															"typeString": "contract IERC20"
														}
													},
													"src": "1065:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1065:34:0"
											},
											{
												"expression": {
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 71,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1109:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$219",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 73,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1131:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 72,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1124:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$219_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1124:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$219",
															"typeString": "contract IERC20"
														}
													},
													"src": "1109:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$219",
														"typeString": "contract IERC20"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1109:36:0"
											}
										]
									},
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "1020:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1012:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1041:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1033:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:44:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 141,
									"src": "1000:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1203:315:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 86,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1244:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1248:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1244:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 84,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "1221:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$219",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1234:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 176,
																	"src": "1221:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1221:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 89,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1259:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1221:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															},
															"value": "Not enough tokens for stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1213:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1213:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 97,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1341:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1345:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1341:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 101,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1361:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$141",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$141",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1353:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 99,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1353:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1353:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 103,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1368:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 95,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "1315:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$219",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1328:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 218,
																"src": "1315:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1315:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207374616b6520746f6b656e",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															},
															"value": "Failed to stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1307:93:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 108,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1411:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 111,
														"indexExpression": {
															"expression": {
																"id": 109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1420:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1424:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1420:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1411:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 117,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 112,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "1434:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 115,
																"indexExpression": {
																	"expression": {
																		"id": 113,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1443:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1447:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1443:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1434:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1455:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 395,
															"src": "1434:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1434:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1411:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1411:55:0"
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1476:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1504:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 122,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1489:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1500:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 395,
															"src": "1489:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1489:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1476:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1476:35:0"
											}
										]
									},
									"functionSelector": "cb82cc8f",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "1167:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1186:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1181:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:13:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:0"
									},
									"scope": 141,
									"src": "1158:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1573:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 134,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1590:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 137,
													"indexExpression": {
														"expression": {
															"id": 135,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1599:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1603:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1590:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 138,
												"nodeType": "Return",
												"src": "1583:27:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "1532:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:9:0"
									},
									"scope": 141,
									"src": "1523:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 142,
							"src": "617:1060:0",
							"usedErrors": []
						}
					],
					"src": "31:1647:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							219
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 153,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 162,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 219,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 219,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 219,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 219,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 219,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 219,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 220,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 252,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															235
														],
														"declarations": [
															{
																"constant": false,
																"id": 235,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 252,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 234,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 239,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 237,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 247,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 233,
															"id": 246,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 249,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 250,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 233,
														"id": 251,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 531,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 266,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 267,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 273,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 265,
															"id": 272,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 275,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 276,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 265,
														"id": 279,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 531,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 322,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 300,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															303
														],
														"declarations": [
															{
																"constant": false,
																"id": 303,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 322,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 307,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 308,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 309,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 317,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 315,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 316,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 319,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 320,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 293,
														"id": 321,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 531,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 350,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 343,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 335,
															"id": 342,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 345,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 346,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 335,
														"id": 349,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 531,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 371,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 363,
															"id": 370,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 374,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 363,
														"id": 377,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 531,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 391,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 389,
												"id": 393,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 531,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 406,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 408,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 531,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 420,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 421,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 423,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 531,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 435,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 436,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 434,
												"id": 438,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 531,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 450,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 451,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 453,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 531,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 478,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 468,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 469,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 471,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 467,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 473,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 475,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 466,
														"id": 477,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 531,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 503,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 493,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 496,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 492,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 498,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 500,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 491,
														"id": 502,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 531,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 528,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 518,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 521,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 517,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 525,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 516,
														"id": 527,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 531,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 532,
							"src": "482:6210:2",
							"usedErrors": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			}
		}
	}
}