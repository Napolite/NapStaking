{
	"id": "57aef3a5b2ddf8460c6e11810b6ca823",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.1 ;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ninterface IStake{\n    function depositStake( uint amount) external;\n    function withdrawStake(uint amount) external;\n\n    function setDuration(uint duration) external;\n\n    function getTimeLeft() external view returns(uint256);\n\n    function calculateReward(uint amount) external;\n    function withdrawReward(uint amount) external;\n\n}\n\ncontract Staking{\n    using SafeMath for uint256;\n    using SafeMath for uint;\n    IERC20 public stakingToken;\n    IERC20 public rewardsToken;\n\n    uint public totalStake;\n    uint public totalStakeRewards;\n    \n    uint public duration; // stake duration\n    uint public finishAt;\n    uint public updatedAt;\n\n    uint public rate; //stake rate\n\n    mapping (address => uint) public _balance;\n    mapping (address => uint) public _rewards;\n\n    //modifiers\n\n    // contract methods\n    constructor(address _stakeToken, address _rewardsToken){\n        stakingToken = IERC20(_stakeToken);\n        rewardsToken = IERC20(_rewardsToken);\n    }\n\n    function depositStake (uint amount) external {\n        require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\");\n\n        _balance[msg.sender] = _balance[msg.sender].add(amount);\n        totalStake = totalStake.add(amount);\n    }\n    function balance() external view returns (uint256){\n        return _balance[msg.sender];\n    }\n\n    function setDuration(uint256 _duration) external{\n        require(finishAt < block.timestamp, \"can't set date to a previous timestamp\");\n\n        duration = _duration;\n        finishAt = finishAt.add(_duration);\n        updatedAt = block.timestamp;\n    }\n\n    function getDuration() view external returns(uint256){\n        return duration;\n    }\n\n    function setRewardRate(uint256 _rate) external{\n        require(finishAt < block.timestamp, \"Staking still in progress\");\n\n        rate = _rate;\n    }\n\n    function calculateRewards() view external returns(uint256){\n        require(_balance[msg.sender] > 0, \"You have not staked any tokens\");\n\n        return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt );\n    }\n \n    \n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/staking.sol": {
				"IStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTimeLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"depositStake(uint256)": "cb82cc8f",
							"getTimeLeft()": "c7e284b8",
							"setDuration(uint256)": "f6be71d1",
							"withdrawReward(uint256)": "523a3f08",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"IStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0xcd7a6c68217f408a77e7e55cbefd7e3ae6515b95b9ee64e8fff75854d6af8683\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee553570aecba13e8aed715ced800831b6a6fc1aa039316d239209fe8739043e\",\"dweb:/ipfs/QmdhejwAkQK8DCyx2SYVMtkojz8dZEfK7i6cXNxZ52YmaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakeRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":617:2468  contract Staking{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking.sol\":1103:1255  constructor(address _stakeToken, address _rewardsToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking.sol\":1190:1201  _stakeToken */\n  dup2\n    /* \"contracts/staking.sol\":1168:1180  stakingToken */\n  0x00\n  dup1\n    /* \"contracts/staking.sol\":1168:1202  stakingToken = IERC20(_stakeToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1234:1247  _rewardsToken */\n  dup1\n    /* \"contracts/staking.sol\":1212:1224  rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/staking.sol\":1212:1248  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1103:1255  constructor(address _stakeToken, address _rewardsToken){... */\n  pop\n  pop\n    /* \"contracts/staking.sol\":617:2468  contract Staking{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/staking.sol\":617:2468  contract Staking{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":617:2468  contract Staking{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b0e9f3f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xcb82cc8f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xcb82cc8f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf6be71d1\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xad2e8c9b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x67d3b488\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7519ab50\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7d6dfb7e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x327bcac5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3e50de30\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking.sol\":833:853  uint public duration */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":931:947  uint public rate */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":793:822  uint public totalStakeRewards */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2233:2459  function calculateRewards() view external returns(uint256){... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":877:897  uint public finishAt */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":903:924  uint public updatedAt */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1014:1055  mapping (address => uint) public _rewards */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2077:2227  function setRewardRate(uint256 _rate) external{... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/staking.sol\":1986:2071  function getDuration() view external returns(uint256){... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1626:1720  function balance() external view returns (uint256){... */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1261:1621  function depositStake (uint amount) external {... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":967:1008  mapping (address => uint) public _balance */\n    tag_17:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1726:1980  function setDuration(uint256 _duration) external{... */\n    tag_18:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/staking.sol\":833:853  uint public duration */\n    tag_23:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":931:947  uint public rate */\n    tag_27:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":793:822  uint public totalStakeRewards */\n    tag_30:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2233:2459  function calculateRewards() view external returns(uint256){... */\n    tag_33:\n        /* \"contracts/staking.sol\":2283:2290  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2332:2333  0 */\n      dup1\n        /* \"contracts/staking.sol\":2309:2317  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2309:2329  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2318:2328  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2309:2329  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2309:2333  _balance[msg.sender] > 0 */\n      gt\n        /* \"contracts/staking.sol\":2301:2368  require(_balance[msg.sender] > 0, \"You have not staked any tokens\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/staking.sol\":2441:2450  updatedAt */\n      sload(0x06)\n        /* \"contracts/staking.sol\":2423:2438  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2423:2450  block.timestamp - updatedAt */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/staking.sol\":2415:2418  100 */\n      0x64\n        /* \"contracts/staking.sol\":2410:2414  rate */\n      sload(0x07)\n        /* \"contracts/staking.sol\":2410:2418  rate/100 */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/staking.sol\":2386:2394  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2386:2406  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2395:2405  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2386:2406  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2386:2419  _balance[msg.sender] * (rate/100) */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/staking.sol\":2386:2452  _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      tag_86\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n        /* \"contracts/staking.sol\":2379:2452  return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":2233:2459  function calculateRewards() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":877:897  uint public finishAt */\n    tag_36:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_39:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":903:924  uint public updatedAt */\n    tag_43:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1014:1055  mapping (address => uint) public _rewards */\n    tag_48:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_51:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2077:2227  function setRewardRate(uint256 _rate) external{... */\n    tag_56:\n        /* \"contracts/staking.sol\":2152:2167  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2141:2149  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":2141:2167  finishAt < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":2133:2197  require(finishAt < block.timestamp, \"Staking still in progress\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/staking.sol\":2215:2220  _rate */\n      dup1\n        /* \"contracts/staking.sol\":2208:2212  rate */\n      0x07\n        /* \"contracts/staking.sol\":2208:2220  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2077:2227  function setRewardRate(uint256 _rate) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":1986:2071  function getDuration() view external returns(uint256){... */\n    tag_58:\n        /* \"contracts/staking.sol\":2031:2038  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2056:2064  duration */\n      sload(0x04)\n        /* \"contracts/staking.sol\":2049:2064  return duration */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1986:2071  function getDuration() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1626:1720  function balance() external view returns (uint256){... */\n    tag_61:\n        /* \"contracts/staking.sol\":1668:1675  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":1693:1701  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1693:1713  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1702:1712  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1693:1713  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1686:1713  return _balance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1626:1720  function balance() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1261:1621  function depositStake (uint amount) external {... */\n    tag_65:\n        /* \"contracts/staking.sol\":1362:1368  amount */\n      dup1\n        /* \"contracts/staking.sol\":1324:1336  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1324:1346  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/staking.sol\":1347:1357  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1324:1358  stakingToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/staking.sol\":1324:1368  stakingToken.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/staking.sol\":1316:1400  require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/staking.sol\":1418:1430  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1418:1443  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking.sol\":1444:1454  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1464:1468  this */\n      address\n        /* \"contracts/staking.sol\":1471:1477  amount */\n      dup5\n        /* \"contracts/staking.sol\":1418:1478  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/staking.sol\":1410:1503  require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/staking.sol\":1537:1569  _balance[msg.sender].add(amount) */\n      tag_112\n        /* \"contracts/staking.sol\":1562:1568  amount */\n      dup2\n        /* \"contracts/staking.sol\":1537:1545  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1537:1557  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1546:1556  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1537:1557  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1537:1561  _balance[msg.sender].add */\n      tag_113\n      swap1\n        /* \"contracts/staking.sol\":1537:1569  _balance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/staking.sol\":1514:1522  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1514:1534  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1523:1533  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1514:1534  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1514:1569  _balance[msg.sender] = _balance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1592:1614  totalStake.add(amount) */\n      tag_114\n        /* \"contracts/staking.sol\":1607:1613  amount */\n      dup2\n        /* \"contracts/staking.sol\":1592:1602  totalStake */\n      sload(0x02)\n        /* \"contracts/staking.sol\":1592:1606  totalStake.add */\n      tag_113\n      swap1\n        /* \"contracts/staking.sol\":1592:1614  totalStake.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/staking.sol\":1579:1589  totalStake */\n      0x02\n        /* \"contracts/staking.sol\":1579:1614  totalStake = totalStake.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1261:1621  function depositStake (uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_67:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":967:1008  mapping (address => uint) public _balance */\n    tag_71:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1726:1980  function setDuration(uint256 _duration) external{... */\n    tag_75:\n        /* \"contracts/staking.sol\":1803:1818  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1792:1800  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1792:1818  finishAt < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":1784:1861  require(finishAt < block.timestamp, \"can't set date to a previous timestamp\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/staking.sol\":1883:1892  _duration */\n      dup1\n        /* \"contracts/staking.sol\":1872:1880  duration */\n      0x04\n        /* \"contracts/staking.sol\":1872:1892  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1913:1936  finishAt.add(_duration) */\n      tag_119\n        /* \"contracts/staking.sol\":1926:1935  _duration */\n      dup2\n        /* \"contracts/staking.sol\":1913:1921  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1913:1925  finishAt.add */\n      tag_113\n      swap1\n        /* \"contracts/staking.sol\":1913:1936  finishAt.add(_duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/staking.sol\":1902:1910  finishAt */\n      0x05\n        /* \"contracts/staking.sol\":1902:1936  finishAt = finishAt.add(_duration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1958:1973  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1946:1955  updatedAt */\n      0x06\n        /* \"contracts/staking.sol\":1946:1973  updatedAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1726:1980  function setDuration(uint256 _duration) external{... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_123:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_124:\n        /* \"#utility.yul\":177:201   */\n      tag_160\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_123\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_162\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_124\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_125:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_126:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_127:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_166\n        /* \"#utility.yul\":741:775   */\n      tag_167\n        /* \"#utility.yul\":750:774   */\n      tag_168\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_125\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":741:775   */\n      tag_126\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":723:776   */\n      tag_125\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_128:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_170\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_127\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_129:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_172\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_128\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_130:\n        /* \"#utility.yul\":1167:1218   */\n      tag_174\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_129\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_41:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_176\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_130\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_132:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1910   */\n    tag_134:\n        /* \"#utility.yul\":1851:1858   */\n      0x00\n        /* \"#utility.yul\":1880:1904   */\n      tag_181\n        /* \"#utility.yul\":1898:1903   */\n      dup3\n        /* \"#utility.yul\":1880:1904   */\n      tag_125\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1869:1904   */\n      swap1\n      pop\n        /* \"#utility.yul\":1814:1910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2038   */\n    tag_135:\n        /* \"#utility.yul\":1989:2013   */\n      tag_183\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1989:2013   */\n      tag_134\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1982:1987   */\n      dup2\n        /* \"#utility.yul\":1979:2014   */\n      eq\n        /* \"#utility.yul\":1969:2032   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1969:2032   */\n    tag_184:\n        /* \"#utility.yul\":1916:2038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2183   */\n    tag_136:\n        /* \"#utility.yul\":2090:2095   */\n      0x00\n        /* \"#utility.yul\":2128:2134   */\n      dup2\n        /* \"#utility.yul\":2115:2135   */\n      calldataload\n        /* \"#utility.yul\":2106:2135   */\n      swap1\n      pop\n        /* \"#utility.yul\":2144:2177   */\n      tag_186\n        /* \"#utility.yul\":2171:2176   */\n      dup2\n        /* \"#utility.yul\":2144:2177   */\n      tag_135\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2044:2183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2518   */\n    tag_47:\n        /* \"#utility.yul\":2248:2254   */\n      0x00\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2285:2294   */\n      dup3\n        /* \"#utility.yul\":2276:2283   */\n      dup5\n        /* \"#utility.yul\":2272:2295   */\n      sub\n        /* \"#utility.yul\":2268:2300   */\n      slt\n        /* \"#utility.yul\":2265:2384   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2303:2382   */\n      tag_189\n      tag_132\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2265:2384   */\n    tag_188:\n        /* \"#utility.yul\":2423:2424   */\n      0x00\n        /* \"#utility.yul\":2448:2501   */\n      tag_190\n        /* \"#utility.yul\":2493:2500   */\n      dup5\n        /* \"#utility.yul\":2484:2490   */\n      dup3\n        /* \"#utility.yul\":2473:2482   */\n      dup6\n        /* \"#utility.yul\":2469:2491   */\n      add\n        /* \"#utility.yul\":2448:2501   */\n      tag_136\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2438:2501   */\n      swap2\n      pop\n        /* \"#utility.yul\":2394:2511   */\n      pop\n        /* \"#utility.yul\":2189:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_137:\n        /* \"#utility.yul\":2597:2621   */\n      tag_192\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_123\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_193:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_138:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_195\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_137\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_55:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_198\n      tag_132\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2873:2992   */\n    tag_197:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_199\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_138\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3301   */\n    tag_139:\n        /* \"#utility.yul\":3216:3227   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup3\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3257   */\n      mstore\n        /* \"#utility.yul\":3290:3294   */\n      0x20\n        /* \"#utility.yul\":3285:3288   */\n      dup3\n        /* \"#utility.yul\":3281:3295   */\n      add\n        /* \"#utility.yul\":3266:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3307:3487   */\n    tag_140:\n        /* \"#utility.yul\":3447:3479   */\n      0x596f752068617665206e6f74207374616b656420616e7920746f6b656e730000\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3435:3441   */\n      dup3\n        /* \"#utility.yul\":3431:3445   */\n      add\n        /* \"#utility.yul\":3424:3480   */\n      mstore\n        /* \"#utility.yul\":3307:3487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3859   */\n    tag_141:\n        /* \"#utility.yul\":3635:3638   */\n      0x00\n        /* \"#utility.yul\":3656:3723   */\n      tag_203\n        /* \"#utility.yul\":3720:3722   */\n      0x1e\n        /* \"#utility.yul\":3715:3718   */\n      dup4\n        /* \"#utility.yul\":3656:3723   */\n      tag_139\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3649:3723   */\n      swap2\n      pop\n        /* \"#utility.yul\":3732:3825   */\n      tag_204\n        /* \"#utility.yul\":3821:3824   */\n      dup3\n        /* \"#utility.yul\":3732:3825   */\n      tag_140\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3850:3852   */\n      0x20\n        /* \"#utility.yul\":3845:3848   */\n      dup3\n        /* \"#utility.yul\":3841:3853   */\n      add\n        /* \"#utility.yul\":3834:3853   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4284   */\n    tag_79:\n        /* \"#utility.yul\":4031:4035   */\n      0x00\n        /* \"#utility.yul\":4069:4071   */\n      0x20\n        /* \"#utility.yul\":4058:4067   */\n      dup3\n        /* \"#utility.yul\":4054:4072   */\n      add\n        /* \"#utility.yul\":4046:4072   */\n      swap1\n      pop\n        /* \"#utility.yul\":4118:4127   */\n      dup2\n        /* \"#utility.yul\":4112:4116   */\n      dup2\n        /* \"#utility.yul\":4108:4128   */\n      sub\n        /* \"#utility.yul\":4104:4105   */\n      0x00\n        /* \"#utility.yul\":4093:4102   */\n      dup4\n        /* \"#utility.yul\":4089:4106   */\n      add\n        /* \"#utility.yul\":4082:4129   */\n      mstore\n        /* \"#utility.yul\":4146:4277   */\n      tag_206\n        /* \"#utility.yul\":4272:4276   */\n      dup2\n        /* \"#utility.yul\":4146:4277   */\n      tag_141\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4138:4277   */\n      swap1\n      pop\n        /* \"#utility.yul\":3865:4284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4290:4470   */\n    tag_142:\n        /* \"#utility.yul\":4338:4415   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4328:4416   */\n      mstore\n        /* \"#utility.yul\":4435:4439   */\n      0x11\n        /* \"#utility.yul\":4432:4433   */\n      0x04\n        /* \"#utility.yul\":4425:4440   */\n      mstore\n        /* \"#utility.yul\":4459:4463   */\n      0x24\n        /* \"#utility.yul\":4456:4457   */\n      0x00\n        /* \"#utility.yul\":4449:4464   */\n      revert\n        /* \"#utility.yul\":4476:4670   */\n    tag_81:\n        /* \"#utility.yul\":4516:4520   */\n      0x00\n        /* \"#utility.yul\":4536:4556   */\n      tag_209\n        /* \"#utility.yul\":4554:4555   */\n      dup3\n        /* \"#utility.yul\":4536:4556   */\n      tag_123\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4531:4556   */\n      swap2\n      pop\n        /* \"#utility.yul\":4570:4590   */\n      tag_210\n        /* \"#utility.yul\":4588:4589   */\n      dup4\n        /* \"#utility.yul\":4570:4590   */\n      tag_123\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4565:4590   */\n      swap3\n      pop\n        /* \"#utility.yul\":4614:4615   */\n      dup3\n        /* \"#utility.yul\":4611:4612   */\n      dup3\n        /* \"#utility.yul\":4607:4616   */\n      sub\n        /* \"#utility.yul\":4599:4616   */\n      swap1\n      pop\n        /* \"#utility.yul\":4638:4639   */\n      dup2\n        /* \"#utility.yul\":4632:4636   */\n      dup2\n        /* \"#utility.yul\":4629:4640   */\n      gt\n        /* \"#utility.yul\":4626:4663   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":4643:4661   */\n      tag_212\n      tag_142\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4626:4663   */\n    tag_211:\n        /* \"#utility.yul\":4476:4670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4676:4856   */\n    tag_143:\n        /* \"#utility.yul\":4724:4801   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4721:4722   */\n      0x00\n        /* \"#utility.yul\":4714:4802   */\n      mstore\n        /* \"#utility.yul\":4821:4825   */\n      0x12\n        /* \"#utility.yul\":4818:4819   */\n      0x04\n        /* \"#utility.yul\":4811:4826   */\n      mstore\n        /* \"#utility.yul\":4845:4849   */\n      0x24\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4835:4850   */\n      revert\n        /* \"#utility.yul\":4862:5047   */\n    tag_83:\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4919:4939   */\n      tag_215\n        /* \"#utility.yul\":4937:4938   */\n      dup3\n        /* \"#utility.yul\":4919:4939   */\n      tag_123\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4914:4939   */\n      swap2\n      pop\n        /* \"#utility.yul\":4953:4973   */\n      tag_216\n        /* \"#utility.yul\":4971:4972   */\n      dup4\n        /* \"#utility.yul\":4953:4973   */\n      tag_123\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4948:4973   */\n      swap3\n      pop\n        /* \"#utility.yul\":4992:4993   */\n      dup3\n        /* \"#utility.yul\":4982:5017   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4997:5015   */\n      tag_218\n      tag_143\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4982:5017   */\n    tag_217:\n        /* \"#utility.yul\":5039:5040   */\n      dup3\n        /* \"#utility.yul\":5036:5037   */\n      dup3\n        /* \"#utility.yul\":5032:5041   */\n      div\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      pop\n        /* \"#utility.yul\":4862:5047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5053:5463   */\n    tag_85:\n        /* \"#utility.yul\":5093:5100   */\n      0x00\n        /* \"#utility.yul\":5116:5136   */\n      tag_220\n        /* \"#utility.yul\":5134:5135   */\n      dup3\n        /* \"#utility.yul\":5116:5136   */\n      tag_123\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5111:5136   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5170   */\n      tag_221\n        /* \"#utility.yul\":5168:5169   */\n      dup4\n        /* \"#utility.yul\":5150:5170   */\n      tag_123\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5145:5170   */\n      swap3\n      pop\n        /* \"#utility.yul\":5205:5206   */\n      dup3\n        /* \"#utility.yul\":5202:5203   */\n      dup3\n        /* \"#utility.yul\":5198:5207   */\n      mul\n        /* \"#utility.yul\":5227:5257   */\n      tag_222\n        /* \"#utility.yul\":5245:5256   */\n      dup2\n        /* \"#utility.yul\":5227:5257   */\n      tag_123\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5216:5257   */\n      swap2\n      pop\n        /* \"#utility.yul\":5406:5407   */\n      dup3\n        /* \"#utility.yul\":5397:5404   */\n      dup3\n        /* \"#utility.yul\":5393:5408   */\n      div\n        /* \"#utility.yul\":5390:5391   */\n      dup5\n        /* \"#utility.yul\":5387:5409   */\n      eq\n        /* \"#utility.yul\":5367:5368   */\n      dup4\n        /* \"#utility.yul\":5360:5369   */\n      iszero\n        /* \"#utility.yul\":5340:5423   */\n      or\n        /* \"#utility.yul\":5317:5456   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5436:5454   */\n      tag_224\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5317:5456   */\n    tag_223:\n        /* \"#utility.yul\":5101:5463   */\n      pop\n        /* \"#utility.yul\":5053:5463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5644   */\n    tag_144:\n        /* \"#utility.yul\":5609:5636   */\n      0x5374616b696e67207374696c6c20696e2070726f677265737300000000000000\n        /* \"#utility.yul\":5605:5606   */\n      0x00\n        /* \"#utility.yul\":5597:5603   */\n      dup3\n        /* \"#utility.yul\":5593:5607   */\n      add\n        /* \"#utility.yul\":5586:5637   */\n      mstore\n        /* \"#utility.yul\":5469:5644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5650:6016   */\n    tag_145:\n        /* \"#utility.yul\":5792:5795   */\n      0x00\n        /* \"#utility.yul\":5813:5880   */\n      tag_227\n        /* \"#utility.yul\":5877:5879   */\n      0x19\n        /* \"#utility.yul\":5872:5875   */\n      dup4\n        /* \"#utility.yul\":5813:5880   */\n      tag_139\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5806:5880   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:5982   */\n      tag_228\n        /* \"#utility.yul\":5978:5981   */\n      dup3\n        /* \"#utility.yul\":5889:5982   */\n      tag_144\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6007:6009   */\n      0x20\n        /* \"#utility.yul\":6002:6005   */\n      dup3\n        /* \"#utility.yul\":5998:6010   */\n      add\n        /* \"#utility.yul\":5991:6010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5650:6016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6441   */\n    tag_90:\n        /* \"#utility.yul\":6188:6192   */\n      0x00\n        /* \"#utility.yul\":6226:6228   */\n      0x20\n        /* \"#utility.yul\":6215:6224   */\n      dup3\n        /* \"#utility.yul\":6211:6229   */\n      add\n        /* \"#utility.yul\":6203:6229   */\n      swap1\n      pop\n        /* \"#utility.yul\":6275:6284   */\n      dup2\n        /* \"#utility.yul\":6269:6273   */\n      dup2\n        /* \"#utility.yul\":6265:6285   */\n      sub\n        /* \"#utility.yul\":6261:6262   */\n      0x00\n        /* \"#utility.yul\":6250:6259   */\n      dup4\n        /* \"#utility.yul\":6246:6263   */\n      add\n        /* \"#utility.yul\":6239:6286   */\n      mstore\n        /* \"#utility.yul\":6303:6434   */\n      tag_230\n        /* \"#utility.yul\":6429:6433   */\n      dup2\n        /* \"#utility.yul\":6303:6434   */\n      tag_145\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6295:6434   */\n      swap1\n      pop\n        /* \"#utility.yul\":6022:6441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6447:6565   */\n    tag_146:\n        /* \"#utility.yul\":6534:6558   */\n      tag_232\n        /* \"#utility.yul\":6552:6557   */\n      dup2\n        /* \"#utility.yul\":6534:6558   */\n      tag_134\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6529:6532   */\n      dup3\n        /* \"#utility.yul\":6522:6559   */\n      mstore\n        /* \"#utility.yul\":6447:6565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6571:6793   */\n    tag_95:\n        /* \"#utility.yul\":6664:6668   */\n      0x00\n        /* \"#utility.yul\":6702:6704   */\n      0x20\n        /* \"#utility.yul\":6691:6700   */\n      dup3\n        /* \"#utility.yul\":6687:6705   */\n      add\n        /* \"#utility.yul\":6679:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6715:6786   */\n      tag_234\n        /* \"#utility.yul\":6783:6784   */\n      0x00\n        /* \"#utility.yul\":6772:6781   */\n      dup4\n        /* \"#utility.yul\":6768:6785   */\n      add\n        /* \"#utility.yul\":6759:6765   */\n      dup5\n        /* \"#utility.yul\":6715:6786   */\n      tag_146\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6571:6793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6799:6942   */\n    tag_147:\n        /* \"#utility.yul\":6856:6861   */\n      0x00\n        /* \"#utility.yul\":6887:6893   */\n      dup2\n        /* \"#utility.yul\":6881:6894   */\n      mload\n        /* \"#utility.yul\":6872:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6903:6936   */\n      tag_236\n        /* \"#utility.yul\":6930:6935   */\n      dup2\n        /* \"#utility.yul\":6903:6936   */\n      tag_137\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6799:6942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6948:7299   */\n    tag_99:\n        /* \"#utility.yul\":7018:7024   */\n      0x00\n        /* \"#utility.yul\":7067:7069   */\n      0x20\n        /* \"#utility.yul\":7055:7064   */\n      dup3\n        /* \"#utility.yul\":7046:7053   */\n      dup5\n        /* \"#utility.yul\":7042:7065   */\n      sub\n        /* \"#utility.yul\":7038:7070   */\n      slt\n        /* \"#utility.yul\":7035:7154   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":7073:7152   */\n      tag_239\n      tag_132\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7035:7154   */\n    tag_238:\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7218:7282   */\n      tag_240\n        /* \"#utility.yul\":7274:7281   */\n      dup5\n        /* \"#utility.yul\":7265:7271   */\n      dup3\n        /* \"#utility.yul\":7254:7263   */\n      dup6\n        /* \"#utility.yul\":7250:7272   */\n      add\n        /* \"#utility.yul\":7218:7282   */\n      tag_147\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7208:7282   */\n      swap2\n      pop\n        /* \"#utility.yul\":7164:7292   */\n      pop\n        /* \"#utility.yul\":6948:7299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7482   */\n    tag_148:\n        /* \"#utility.yul\":7445:7474   */\n      0x4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000\n        /* \"#utility.yul\":7441:7442   */\n      0x00\n        /* \"#utility.yul\":7433:7439   */\n      dup3\n        /* \"#utility.yul\":7429:7443   */\n      add\n        /* \"#utility.yul\":7422:7475   */\n      mstore\n        /* \"#utility.yul\":7305:7482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7488:7854   */\n    tag_149:\n        /* \"#utility.yul\":7630:7633   */\n      0x00\n        /* \"#utility.yul\":7651:7718   */\n      tag_243\n        /* \"#utility.yul\":7715:7717   */\n      0x1b\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7651:7718   */\n      tag_139\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7644:7718   */\n      swap2\n      pop\n        /* \"#utility.yul\":7727:7820   */\n      tag_244\n        /* \"#utility.yul\":7816:7819   */\n      dup3\n        /* \"#utility.yul\":7727:7820   */\n      tag_148\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7845:7847   */\n      0x20\n        /* \"#utility.yul\":7840:7843   */\n      dup3\n        /* \"#utility.yul\":7836:7848   */\n      add\n        /* \"#utility.yul\":7829:7848   */\n      swap1\n      pop\n        /* \"#utility.yul\":7488:7854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7860:8279   */\n    tag_102:\n        /* \"#utility.yul\":8026:8030   */\n      0x00\n        /* \"#utility.yul\":8064:8066   */\n      0x20\n        /* \"#utility.yul\":8053:8062   */\n      dup3\n        /* \"#utility.yul\":8049:8067   */\n      add\n        /* \"#utility.yul\":8041:8067   */\n      swap1\n      pop\n        /* \"#utility.yul\":8113:8122   */\n      dup2\n        /* \"#utility.yul\":8107:8111   */\n      dup2\n        /* \"#utility.yul\":8103:8123   */\n      sub\n        /* \"#utility.yul\":8099:8100   */\n      0x00\n        /* \"#utility.yul\":8088:8097   */\n      dup4\n        /* \"#utility.yul\":8084:8101   */\n      add\n        /* \"#utility.yul\":8077:8124   */\n      mstore\n        /* \"#utility.yul\":8141:8272   */\n      tag_246\n        /* \"#utility.yul\":8267:8271   */\n      dup2\n        /* \"#utility.yul\":8141:8272   */\n      tag_149\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8133:8272   */\n      swap1\n      pop\n        /* \"#utility.yul\":7860:8279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8285:8727   */\n    tag_104:\n        /* \"#utility.yul\":8434:8438   */\n      0x00\n        /* \"#utility.yul\":8472:8474   */\n      0x60\n        /* \"#utility.yul\":8461:8470   */\n      dup3\n        /* \"#utility.yul\":8457:8475   */\n      add\n        /* \"#utility.yul\":8449:8475   */\n      swap1\n      pop\n        /* \"#utility.yul\":8485:8556   */\n      tag_248\n        /* \"#utility.yul\":8553:8554   */\n      0x00\n        /* \"#utility.yul\":8542:8551   */\n      dup4\n        /* \"#utility.yul\":8538:8555   */\n      add\n        /* \"#utility.yul\":8529:8535   */\n      dup7\n        /* \"#utility.yul\":8485:8556   */\n      tag_146\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8566:8638   */\n      tag_249\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"#utility.yul\":8623:8632   */\n      dup4\n        /* \"#utility.yul\":8619:8637   */\n      add\n        /* \"#utility.yul\":8610:8616   */\n      dup6\n        /* \"#utility.yul\":8566:8638   */\n      tag_146\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8648:8720   */\n      tag_250\n        /* \"#utility.yul\":8716:8718   */\n      0x40\n        /* \"#utility.yul\":8705:8714   */\n      dup4\n        /* \"#utility.yul\":8701:8719   */\n      add\n        /* \"#utility.yul\":8692:8698   */\n      dup5\n        /* \"#utility.yul\":8648:8720   */\n      tag_124\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8285:8727   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8733:8823   */\n    tag_150:\n        /* \"#utility.yul\":8767:8774   */\n      0x00\n        /* \"#utility.yul\":8810:8815   */\n      dup2\n        /* \"#utility.yul\":8803:8816   */\n      iszero\n        /* \"#utility.yul\":8796:8817   */\n      iszero\n        /* \"#utility.yul\":8785:8817   */\n      swap1\n      pop\n        /* \"#utility.yul\":8733:8823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8829:8945   */\n    tag_151:\n        /* \"#utility.yul\":8899:8920   */\n      tag_253\n        /* \"#utility.yul\":8914:8919   */\n      dup2\n        /* \"#utility.yul\":8899:8920   */\n      tag_150\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8892:8897   */\n      dup2\n        /* \"#utility.yul\":8889:8921   */\n      eq\n        /* \"#utility.yul\":8879:8939   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":8935:8936   */\n      0x00\n        /* \"#utility.yul\":8932:8933   */\n      dup1\n        /* \"#utility.yul\":8925:8937   */\n      revert\n        /* \"#utility.yul\":8879:8939   */\n    tag_254:\n        /* \"#utility.yul\":8829:8945   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8951:9088   */\n    tag_152:\n        /* \"#utility.yul\":9005:9010   */\n      0x00\n        /* \"#utility.yul\":9036:9042   */\n      dup2\n        /* \"#utility.yul\":9030:9043   */\n      mload\n        /* \"#utility.yul\":9021:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9052:9082   */\n      tag_256\n        /* \"#utility.yul\":9076:9081   */\n      dup2\n        /* \"#utility.yul\":9052:9082   */\n      tag_151\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8951:9088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9094:9439   */\n    tag_108:\n        /* \"#utility.yul\":9161:9167   */\n      0x00\n        /* \"#utility.yul\":9210:9212   */\n      0x20\n        /* \"#utility.yul\":9198:9207   */\n      dup3\n        /* \"#utility.yul\":9189:9196   */\n      dup5\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9213   */\n      slt\n        /* \"#utility.yul\":9178:9297   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9216:9295   */\n      tag_259\n      tag_132\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9178:9297   */\n    tag_258:\n        /* \"#utility.yul\":9336:9337   */\n      0x00\n        /* \"#utility.yul\":9361:9422   */\n      tag_260\n        /* \"#utility.yul\":9414:9421   */\n      dup5\n        /* \"#utility.yul\":9405:9411   */\n      dup3\n        /* \"#utility.yul\":9394:9403   */\n      dup6\n        /* \"#utility.yul\":9390:9412   */\n      add\n        /* \"#utility.yul\":9361:9422   */\n      tag_152\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9351:9422   */\n      swap2\n      pop\n        /* \"#utility.yul\":9307:9432   */\n      pop\n        /* \"#utility.yul\":9094:9439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9445:9616   */\n    tag_153:\n        /* \"#utility.yul\":9585:9608   */\n      0x4661696c656420746f207374616b6520746f6b656e0000000000000000000000\n        /* \"#utility.yul\":9581:9582   */\n      0x00\n        /* \"#utility.yul\":9573:9579   */\n      dup3\n        /* \"#utility.yul\":9569:9583   */\n      add\n        /* \"#utility.yul\":9562:9609   */\n      mstore\n        /* \"#utility.yul\":9445:9616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9622:9988   */\n    tag_154:\n        /* \"#utility.yul\":9764:9767   */\n      0x00\n        /* \"#utility.yul\":9785:9852   */\n      tag_263\n        /* \"#utility.yul\":9849:9851   */\n      0x15\n        /* \"#utility.yul\":9844:9847   */\n      dup4\n        /* \"#utility.yul\":9785:9852   */\n      tag_139\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9778:9852   */\n      swap2\n      pop\n        /* \"#utility.yul\":9861:9954   */\n      tag_264\n        /* \"#utility.yul\":9950:9953   */\n      dup3\n        /* \"#utility.yul\":9861:9954   */\n      tag_153\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9979:9981   */\n      0x20\n        /* \"#utility.yul\":9974:9977   */\n      dup3\n        /* \"#utility.yul\":9970:9982   */\n      add\n        /* \"#utility.yul\":9963:9982   */\n      swap1\n      pop\n        /* \"#utility.yul\":9622:9988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9994:10413   */\n    tag_111:\n        /* \"#utility.yul\":10160:10164   */\n      0x00\n        /* \"#utility.yul\":10198:10200   */\n      0x20\n        /* \"#utility.yul\":10187:10196   */\n      dup3\n        /* \"#utility.yul\":10183:10201   */\n      add\n        /* \"#utility.yul\":10175:10201   */\n      swap1\n      pop\n        /* \"#utility.yul\":10247:10256   */\n      dup2\n        /* \"#utility.yul\":10241:10245   */\n      dup2\n        /* \"#utility.yul\":10237:10257   */\n      sub\n        /* \"#utility.yul\":10233:10234   */\n      0x00\n        /* \"#utility.yul\":10222:10231   */\n      dup4\n        /* \"#utility.yul\":10218:10235   */\n      add\n        /* \"#utility.yul\":10211:10258   */\n      mstore\n        /* \"#utility.yul\":10275:10406   */\n      tag_266\n        /* \"#utility.yul\":10401:10405   */\n      dup2\n        /* \"#utility.yul\":10275:10406   */\n      tag_154\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10267:10406   */\n      swap1\n      pop\n        /* \"#utility.yul\":9994:10413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10419:10644   */\n    tag_155:\n        /* \"#utility.yul\":10559:10593   */\n      0x63616e277420736574206461746520746f20612070726576696f75732074696d\n        /* \"#utility.yul\":10555:10556   */\n      0x00\n        /* \"#utility.yul\":10547:10553   */\n      dup3\n        /* \"#utility.yul\":10543:10557   */\n      add\n        /* \"#utility.yul\":10536:10594   */\n      mstore\n        /* \"#utility.yul\":10628:10636   */\n      0x657374616d700000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10623:10625   */\n      0x20\n        /* \"#utility.yul\":10615:10621   */\n      dup3\n        /* \"#utility.yul\":10611:10626   */\n      add\n        /* \"#utility.yul\":10604:10637   */\n      mstore\n        /* \"#utility.yul\":10419:10644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10650:11016   */\n    tag_156:\n        /* \"#utility.yul\":10792:10795   */\n      0x00\n        /* \"#utility.yul\":10813:10880   */\n      tag_269\n        /* \"#utility.yul\":10877:10879   */\n      0x26\n        /* \"#utility.yul\":10872:10875   */\n      dup4\n        /* \"#utility.yul\":10813:10880   */\n      tag_139\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10806:10880   */\n      swap2\n      pop\n        /* \"#utility.yul\":10889:10982   */\n      tag_270\n        /* \"#utility.yul\":10978:10981   */\n      dup3\n        /* \"#utility.yul\":10889:10982   */\n      tag_155\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":11007:11009   */\n      0x40\n        /* \"#utility.yul\":11002:11005   */\n      dup3\n        /* \"#utility.yul\":10998:11010   */\n      add\n        /* \"#utility.yul\":10991:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":10650:11016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11022:11441   */\n    tag_118:\n        /* \"#utility.yul\":11188:11192   */\n      0x00\n        /* \"#utility.yul\":11226:11228   */\n      0x20\n        /* \"#utility.yul\":11215:11224   */\n      dup3\n        /* \"#utility.yul\":11211:11229   */\n      add\n        /* \"#utility.yul\":11203:11229   */\n      swap1\n      pop\n        /* \"#utility.yul\":11275:11284   */\n      dup2\n        /* \"#utility.yul\":11269:11273   */\n      dup2\n        /* \"#utility.yul\":11265:11285   */\n      sub\n        /* \"#utility.yul\":11261:11262   */\n      0x00\n        /* \"#utility.yul\":11250:11259   */\n      dup4\n        /* \"#utility.yul\":11246:11263   */\n      add\n        /* \"#utility.yul\":11239:11286   */\n      mstore\n        /* \"#utility.yul\":11303:11434   */\n      tag_272\n        /* \"#utility.yul\":11429:11433   */\n      dup2\n        /* \"#utility.yul\":11303:11434   */\n      tag_156\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11295:11434   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11447:11638   */\n    tag_122:\n        /* \"#utility.yul\":11487:11490   */\n      0x00\n        /* \"#utility.yul\":11506:11526   */\n      tag_274\n        /* \"#utility.yul\":11524:11525   */\n      dup3\n        /* \"#utility.yul\":11506:11526   */\n      tag_123\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11501:11526   */\n      swap2\n      pop\n        /* \"#utility.yul\":11540:11560   */\n      tag_275\n        /* \"#utility.yul\":11558:11559   */\n      dup4\n        /* \"#utility.yul\":11540:11560   */\n      tag_123\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11535:11560   */\n      swap3\n      pop\n        /* \"#utility.yul\":11583:11584   */\n      dup3\n        /* \"#utility.yul\":11580:11581   */\n      dup3\n        /* \"#utility.yul\":11576:11585   */\n      add\n        /* \"#utility.yul\":11569:11585   */\n      swap1\n      pop\n        /* \"#utility.yul\":11604:11607   */\n      dup1\n        /* \"#utility.yul\":11601:11602   */\n      dup3\n        /* \"#utility.yul\":11598:11608   */\n      gt\n        /* \"#utility.yul\":11595:11631   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":11611:11629   */\n      tag_277\n      tag_142\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11595:11631   */\n    tag_276:\n        /* \"#utility.yul\":11447:11638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122040ac17087ac7df14721bed8ba8eae01fb27ac8be98f2cdf03c237a646d77082c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x100F CODESIZE SUB DUP1 PUSH3 0x100F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x171 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF2 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x104 DUP2 PUSH3 0xE5 JUMP JUMPDEST DUP2 EQ PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x144 JUMPI PUSH3 0x143 PUSH3 0xC0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x154 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x167 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE8E DUP1 PUSH3 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCB82CC8F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2E7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x25F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x67D3B488 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x1D7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x327BCAC5 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x3E50DE30 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x409 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x760 DUP2 PUSH1 0x2 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x807 DUP2 PUSH1 0x5 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x82D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x8A1 PUSH2 0x89C DUP5 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DA DUP2 PUSH2 0x8BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP3 PUSH2 0x861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x900 JUMP JUMPDEST DUP2 EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x938 DUP2 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x962 DUP5 DUP3 DUP6 ADD PUSH2 0x929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x974 DUP2 PUSH2 0x82D JUMP JUMPDEST DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x991 DUP2 PUSH2 0x96B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AD JUMPI PUSH2 0x9AC PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9BB DUP5 DUP3 DUP6 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0B PUSH1 0x1E DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA16 DUP3 PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA3A DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xA86 DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xAE9 DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAF9 JUMPI PUSH2 0xAF8 PUSH2 0xAA4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0F DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xB1A DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB28 DUP2 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB3F JUMPI PUSH2 0xB3E PUSH2 0xA41 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67207374696C6C20696E2070726F677265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7C PUSH1 0x19 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB87 DUP3 PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBAB DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0x900 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBEB DUP2 PUSH2 0x96B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC07 JUMPI PUSH2 0xC06 PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP5 DUP3 DUP6 ADD PUSH2 0xBDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 PUSH1 0x1B DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP3 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC83 DUP2 PUSH2 0xC47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC9F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xCAC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xCB9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x837 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCF3 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP5 DUP3 DUP6 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5C PUSH1 0x15 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD67 DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8B DUP2 PUSH2 0xD4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEE PUSH1 0x26 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF9 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1D DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xE3A DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE52 JUMPI PUSH2 0xE51 PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xAC OR ADDMOD PUSH27 0xC7DF14721BED8BA8EAE01FB27AC8BE98F2CDF03C237A646D77082C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "617:1851:0:-:0;;;1103:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:11;1168:12;;:34;;;;;;;;;;;;;;;;;;1234:13;1212:12;;:36;;;;;;;;;;;;;;;;;;1103:152;;617:1851;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;617:1851:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_62": {
									"entryPoint": 1935,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rewards_66": {
									"entryPoint": 1086,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_491": {
									"entryPoint": 2071,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balance_148": {
									"entryPoint": 1204,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateRewards_236": {
									"entryPoint": 789,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositStake_137": {
									"entryPoint": 1275,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@duration_52": {
									"entryPoint": 771,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finishAt_54": {
									"entryPoint": 1038,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDuration_186": {
									"entryPoint": 1194,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_58": {
									"entryPoint": 777,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_46": {
									"entryPoint": 1897,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDuration_178": {
									"entryPoint": 1959,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_204": {
									"entryPoint": 1116,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_43": {
									"entryPoint": 1044,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakeRewards_50": {
									"entryPoint": 783,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_48": {
									"entryPoint": 1110,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatedAt_56": {
									"entryPoint": 1080,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11641:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:3",
														"type": ""
													}
												],
												"src": "442:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "616:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "623:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "592:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "602:3:3",
														"type": ""
													}
												],
												"src": "574:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "690:9:3",
														"type": ""
													}
												],
												"src": "640:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "838:9:3",
														"type": ""
													}
												],
												"src": "788:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1004:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "974:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "984:9:3",
														"type": ""
													}
												],
												"src": "920:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1145:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1133:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1140:3:3",
														"type": ""
													}
												],
												"src": "1066:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1327:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1338:4:3",
														"type": ""
													}
												],
												"src": "1231:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1537:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1520:6:3",
														"type": ""
													}
												],
												"src": "1487:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1859:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1869:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1898:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1880:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1869:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1841:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1851:7:3",
														"type": ""
													}
												],
												"src": "1814:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1959:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1982:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2007:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1989:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1989:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1979:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:43:3"
															},
															"nodeType": "YulIf",
															"src": "1969:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1952:5:3",
														"type": ""
													}
												],
												"src": "1916:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2096:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2106:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2128:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2115:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2106:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2171:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2144:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2144:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2074:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2082:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2090:5:3",
														"type": ""
													}
												],
												"src": "2044:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2255:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2301:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2303:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2303:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2276:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:32:3"
															},
															"nodeType": "YulIf",
															"src": "2265:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2394:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2409:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2413:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2438:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2473:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2484:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2469:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2469:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2493:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2448:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2438:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2225:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2236:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2248:6:3",
														"type": ""
													}
												],
												"src": "2189:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:3"
															},
															"nodeType": "YulIf",
															"src": "2577:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:3",
														"type": ""
													}
												],
												"src": "2524:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:3",
														"type": ""
													}
												],
												"src": "2652:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:32:3"
															},
															"nodeType": "YulIf",
															"src": "2873:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3002:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2844:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:3",
														"type": ""
													}
												],
												"src": "2797:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3266:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3216:11:3",
														"type": ""
													}
												],
												"src": "3132:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:14:3"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3447:32:3",
																		"type": "",
																		"value": "You have not staked any tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:56:3"
														}
													]
												},
												"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3405:6:3",
														"type": ""
													}
												],
												"src": "3307:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3639:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3649:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3720:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3656:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																	"nodeType": "YulIdentifier",
																	"src": "3732:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3834:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3845:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3834:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3627:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3635:3:3",
														"type": ""
													}
												],
												"src": "3493:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4058:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4069:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4054:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4046:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4112:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4118:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4108:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4082:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4138:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4272:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4146:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4146:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4138:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4016:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4031:4:3",
														"type": ""
													}
												],
												"src": "3865:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4318:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4338:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4328:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4290:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4521:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4531:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4554:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4536:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4531:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4565:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4570:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4565:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4599:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4611:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4614:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4599:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4641:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4643:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4643:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4643:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4632:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4638:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4629:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:11:3"
															},
															"nodeType": "YulIf",
															"src": "4626:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4507:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4510:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4516:4:3",
														"type": ""
													}
												],
												"src": "4476:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4721:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4676:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4904:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4914:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4937:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4919:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4919:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4914:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4948:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4971:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4953:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4948:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4995:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4997:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4997:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4997:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4992:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:9:3"
															},
															"nodeType": "YulIf",
															"src": "4982:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5039:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5027:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4893:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4896:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4902:1:3",
														"type": ""
													}
												],
												"src": "4862:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5101:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5111:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5134:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5116:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5111:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5145:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5150:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5145:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5179:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5202:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5205:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5183:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5216:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5245:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5227:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5216:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5434:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5436:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5436:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5436:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5367:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5360:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5360:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5390:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5397:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5406:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5393:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5393:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5387:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5387:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5340:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5340:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:113:3"
															},
															"nodeType": "YulIf",
															"src": "5317:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5084:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5087:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5093:7:3",
														"type": ""
													}
												],
												"src": "5053:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5597:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5605:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67207374696c6c20696e2070726f6772657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5609:27:3",
																		"type": "",
																		"value": "Staking still in progress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5567:6:3",
														"type": ""
													}
												],
												"src": "5469:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5796:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5806:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5872:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5877:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5813:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5813:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5806:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5978:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																	"nodeType": "YulIdentifier",
																	"src": "5889:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5889:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5991:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6002:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5998:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5784:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5792:3:3",
														"type": ""
													}
												],
												"src": "5650:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6193:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6203:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6215:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6226:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6211:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6203:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6250:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6261:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6269:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6275:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6265:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6265:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6295:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6429:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6303:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6295:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6173:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6188:4:3",
														"type": ""
													}
												],
												"src": "6022:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6512:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6529:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6552:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6534:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6522:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6500:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6507:3:3",
														"type": ""
													}
												],
												"src": "6447:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6679:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6691:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6702:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6687:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6679:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6759:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6772:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6783:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6768:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6768:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6715:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6641:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6653:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6664:4:3",
														"type": ""
													}
												],
												"src": "6571:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6862:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6872:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6887:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6881:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6872:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6930:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6903:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6903:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6840:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6848:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6856:5:3",
														"type": ""
													}
												],
												"src": "6799:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7025:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7071:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7073:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7073:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7073:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7046:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7042:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7042:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7067:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7038:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:32:3"
															},
															"nodeType": "YulIf",
															"src": "7035:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7164:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7179:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7193:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7183:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7208:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7254:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7250:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7250:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7274:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7218:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7218:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7208:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6995:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7006:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7018:6:3",
														"type": ""
													}
												],
												"src": "6948:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7411:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7433:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7441:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7429:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7429:14:3"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7445:29:3",
																		"type": "",
																		"value": "Not enough tokens for stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7422:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7422:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7422:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7403:6:3",
														"type": ""
													}
												],
												"src": "7305:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7634:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7644:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7715:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7651:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7651:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7644:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7816:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																	"nodeType": "YulIdentifier",
																	"src": "7727:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7727:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7829:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7840:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7829:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7622:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7630:3:3",
														"type": ""
													}
												],
												"src": "7488:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8041:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8053:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8064:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8049:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8049:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8041:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8088:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8099:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8084:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8107:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8103:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8103:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8077:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8133:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8267:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8141:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8141:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8133:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8011:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8026:4:3",
														"type": ""
													}
												],
												"src": "7860:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8439:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8449:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8461:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8449:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8529:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8553:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8538:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8485:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8485:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8485:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8610:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8623:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8634:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8566:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8566:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8566:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8692:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8705:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8716:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8701:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8648:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8648:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8648:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8395:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8407:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8415:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8423:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8434:4:3",
														"type": ""
													}
												],
												"src": "8285:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8775:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8785:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8810:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8803:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8785:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8757:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8767:7:3",
														"type": ""
													}
												],
												"src": "8733:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8869:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8923:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8932:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8935:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8925:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8925:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8925:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8892:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8914:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8899:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8899:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8889:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8889:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8882:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8882:40:3"
															},
															"nodeType": "YulIf",
															"src": "8879:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8862:5:3",
														"type": ""
													}
												],
												"src": "8829:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9011:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9021:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9036:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9030:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9030:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9021:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9052:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9052:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8989:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8997:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9005:5:3",
														"type": ""
													}
												],
												"src": "8951:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9214:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9216:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9216:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9216:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:32:3"
															},
															"nodeType": "YulIf",
															"src": "9178:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "9307:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9322:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9336:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9326:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9351:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9394:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9405:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9390:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9390:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9414:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9361:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9361:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9351:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9138:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9149:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9161:6:3",
														"type": ""
													}
												],
												"src": "9094:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9551:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9573:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9569:14:3"
																	},
																	{
																		"hexValue": "4661696c656420746f207374616b6520746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9585:23:3",
																		"type": "",
																		"value": "Failed to stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9562:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9562:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9562:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9543:6:3",
														"type": ""
													}
												],
												"src": "9445:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9768:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9778:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9844:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9849:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9785:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9785:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9778:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9950:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																	"nodeType": "YulIdentifier",
																	"src": "9861:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9861:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9963:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9974:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9979:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9970:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9963:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9756:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9764:3:3",
														"type": ""
													}
												],
												"src": "9622:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10165:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10175:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10187:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10198:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10183:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10183:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10175:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10222:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10233:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10218:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10218:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10241:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10247:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10237:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10237:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10211:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10211:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10267:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10401:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10275:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10267:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10145:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10160:4:3",
														"type": ""
													}
												],
												"src": "9994:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10525:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10547:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10555:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10543:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10543:14:3"
																	},
																	{
																		"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10559:34:3",
																		"type": "",
																		"value": "can't set date to a previous tim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10536:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10615:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10611:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10611:15:3"
																	},
																	{
																		"hexValue": "657374616d70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10628:8:3",
																		"type": "",
																		"value": "estamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10604:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10604:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10604:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10517:6:3",
														"type": ""
													}
												],
												"src": "10419:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10796:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10806:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10872:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10877:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10813:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10806:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10978:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																	"nodeType": "YulIdentifier",
																	"src": "10889:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10889:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10889:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10991:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11002:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10991:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10784:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10792:3:3",
														"type": ""
													}
												],
												"src": "10650:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11193:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11203:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11215:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11226:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11211:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11203:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11250:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11261:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11246:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11246:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11269:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11275:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11265:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11265:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11239:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11239:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11295:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11429:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11303:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11303:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11295:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11173:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11188:4:3",
														"type": ""
													}
												],
												"src": "11022:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11491:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11501:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11524:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11506:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11501:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11535:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11558:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11540:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11540:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11535:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11569:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11580:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11583:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11576:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11609:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11611:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11611:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11611:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11601:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11604:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11598:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11598:10:3"
															},
															"nodeType": "YulIf",
															"src": "11595:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11478:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11481:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11487:3:3",
														"type": ""
													}
												],
												"src": "11447:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not staked any tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking still in progress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens for stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't set date to a previous tim\")\n\n        mstore(add(memPtr, 32), \"estamp\")\n\n    }\n\n    function abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638b0e9f3f11610097578063cb82cc8f11610066578063cb82cc8f1461027d578063d1af0c7d14610299578063d3aceae2146102b7578063f6be71d1146102e757610100565b80638b0e9f3f146102075780639e447fc614610225578063ad2e8c9b14610241578063b69ef8a81461025f57610100565b806367d3b488116100d357806367d3b4881461017d57806372f702f31461019b5780637519ab50146101b95780637d6dfb7e146101d757610100565b80630fb5a6b4146101055780632c4e722e14610123578063327bcac5146101415780633e50de301461015f575b600080fd5b61010d610303565b60405161011a9190610846565b60405180910390f35b61012b610309565b6040516101389190610846565b60405180910390f35b61014961030f565b6040516101569190610846565b60405180910390f35b610167610315565b6040516101749190610846565b60405180910390f35b61018561040e565b6040516101929190610846565b60405180910390f35b6101a3610414565b6040516101b091906108e0565b60405180910390f35b6101c1610438565b6040516101ce9190610846565b60405180910390f35b6101f160048036038101906101ec919061093e565b61043e565b6040516101fe9190610846565b60405180910390f35b61020f610456565b60405161021c9190610846565b60405180910390f35b61023f600480360381019061023a9190610997565b61045c565b005b6102496104aa565b6040516102569190610846565b60405180910390f35b6102676104b4565b6040516102749190610846565b60405180910390f35b61029760048036038101906102929190610997565b6104fb565b005b6102a1610769565b6040516102ae91906108e0565b60405180910390f35b6102d160048036038101906102cc919061093e565b61078f565b6040516102de9190610846565b60405180910390f35b61030160048036038101906102fc9190610997565b6107a7565b005b60045481565b60075481565b60035481565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610a21565b60405180910390fd5b600654426103a69190610a70565b60646007546103b59190610ad3565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ff9190610b04565b6104099190610b04565b905090565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60096020528060005260406000206000915090505481565b60025481565b42600554106104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790610b92565b60405180910390fd5b8060078190555050565b6000600454905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105559190610bc1565b602060405180830381865afa158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190610bf1565b10156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90610c6a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161063493929190610c8a565b6020604051808303816000875af1158015610653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106779190610cf9565b6106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90610d72565b60405180910390fd5b61070881600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081790919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107608160025461081790919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b42600554106107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290610e04565b60405180910390fd5b806004819055506108078160055461081790919063ffffffff16565b6005819055504260068190555050565b600081836108259190610e24565b905092915050565b6000819050919050565b6108408161082d565b82525050565b600060208201905061085b6000830184610837565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108a66108a161089c84610861565b610881565b610861565b9050919050565b60006108b88261088b565b9050919050565b60006108ca826108ad565b9050919050565b6108da816108bf565b82525050565b60006020820190506108f560008301846108d1565b92915050565b600080fd5b600061090b82610861565b9050919050565b61091b81610900565b811461092657600080fd5b50565b60008135905061093881610912565b92915050565b600060208284031215610954576109536108fb565b5b600061096284828501610929565b91505092915050565b6109748161082d565b811461097f57600080fd5b50565b6000813590506109918161096b565b92915050565b6000602082840312156109ad576109ac6108fb565b5b60006109bb84828501610982565b91505092915050565b600082825260208201905092915050565b7f596f752068617665206e6f74207374616b656420616e7920746f6b656e730000600082015250565b6000610a0b601e836109c4565b9150610a16826109d5565b602082019050919050565b60006020820190508181036000830152610a3a816109fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7b8261082d565b9150610a868361082d565b9250828203905081811115610a9e57610a9d610a41565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ade8261082d565b9150610ae98361082d565b925082610af957610af8610aa4565b5b828204905092915050565b6000610b0f8261082d565b9150610b1a8361082d565b9250828202610b288161082d565b91508282048414831517610b3f57610b3e610a41565b5b5092915050565b7f5374616b696e67207374696c6c20696e2070726f677265737300000000000000600082015250565b6000610b7c6019836109c4565b9150610b8782610b46565b602082019050919050565b60006020820190508181036000830152610bab81610b6f565b9050919050565b610bbb81610900565b82525050565b6000602082019050610bd66000830184610bb2565b92915050565b600081519050610beb8161096b565b92915050565b600060208284031215610c0757610c066108fb565b5b6000610c1584828501610bdc565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610c54601b836109c4565b9150610c5f82610c1e565b602082019050919050565b60006020820190508181036000830152610c8381610c47565b9050919050565b6000606082019050610c9f6000830186610bb2565b610cac6020830185610bb2565b610cb96040830184610837565b949350505050565b60008115159050919050565b610cd681610cc1565b8114610ce157600080fd5b50565b600081519050610cf381610ccd565b92915050565b600060208284031215610d0f57610d0e6108fb565b5b6000610d1d84828501610ce4565b91505092915050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b6000610d5c6015836109c4565b9150610d6782610d26565b602082019050919050565b60006020820190508181036000830152610d8b81610d4f565b9050919050565b7f63616e277420736574206461746520746f20612070726576696f75732074696d60008201527f657374616d700000000000000000000000000000000000000000000000000000602082015250565b6000610dee6026836109c4565b9150610df982610d92565b604082019050919050565b60006020820190508181036000830152610e1d81610de1565b9050919050565b6000610e2f8261082d565b9150610e3a8361082d565b9250828201905080821115610e5257610e51610a41565b5b9291505056fea264697066735822122040ac17087ac7df14721bed8ba8eae01fb27ac8be98f2cdf03c237a646d77082c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCB82CC8F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2E7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x25F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x67D3B488 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x1D7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x327BCAC5 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x3E50DE30 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x409 SWAP2 SWAP1 PUSH2 0xB04 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x555 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AD SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x760 DUP2 PUSH1 0x2 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x807 DUP2 PUSH1 0x5 SLOAD PUSH2 0x817 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x840 DUP2 PUSH2 0x82D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x8A1 PUSH2 0x89C DUP5 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP3 PUSH2 0x88B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8DA DUP2 PUSH2 0x8BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x90B DUP3 PUSH2 0x861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x900 JUMP JUMPDEST DUP2 EQ PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x938 DUP2 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x962 DUP5 DUP3 DUP6 ADD PUSH2 0x929 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x974 DUP2 PUSH2 0x82D JUMP JUMPDEST DUP2 EQ PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x991 DUP2 PUSH2 0x96B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AD JUMPI PUSH2 0x9AC PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9BB DUP5 DUP3 DUP6 ADD PUSH2 0x982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0B PUSH1 0x1E DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xA16 DUP3 PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA3A DUP2 PUSH2 0x9FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xA86 DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xAE9 DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAF9 JUMPI PUSH2 0xAF8 PUSH2 0xAA4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0F DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xB1A DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB28 DUP2 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB3F JUMPI PUSH2 0xB3E PUSH2 0xA41 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67207374696C6C20696E2070726F677265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7C PUSH1 0x19 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB87 DUP3 PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBAB DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0x900 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBEB DUP2 PUSH2 0x96B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC07 JUMPI PUSH2 0xC06 PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP5 DUP3 DUP6 ADD PUSH2 0xBDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC54 PUSH1 0x1B DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP3 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC83 DUP2 PUSH2 0xC47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC9F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xCAC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xCB9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x837 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCF3 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP5 DUP3 DUP6 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5C PUSH1 0x15 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD67 DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8B DUP2 PUSH2 0xD4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEE PUSH1 0x26 DUP4 PUSH2 0x9C4 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF9 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1D DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP3 PUSH2 0x82D JUMP JUMPDEST SWAP2 POP PUSH2 0xE3A DUP4 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE52 JUMPI PUSH2 0xE51 PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xAC OR ADDMOD PUSH27 0xC7DF14721BED8BA8EAE01FB27AC8BE98F2CDF03C237A646D77082C PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "617:1851:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2233:226;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;903:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1014:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1986:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1626:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;833:20;;;;:::o;931:16::-;;;;:::o;793:29::-;;;;:::o;2233:226::-;2283:7;2332:1;2309:8;:20;2318:10;2309:20;;;;;;;;;;;;;;;;:24;2301:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2441:9;;2423:15;:27;;;;:::i;:::-;2415:3;2410:4;;:8;;;;:::i;:::-;2386;:20;2395:10;2386:20;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:66;;;;:::i;:::-;2379:73;;2233:226;:::o;877:20::-;;;;:::o;700:26::-;;;;;;;;;;;;:::o;903:21::-;;;;:::o;1014:41::-;;;;;;;;;;;;;;;;;:::o;765:22::-;;;;:::o;2077:150::-;2152:15;2141:8;;:26;2133:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2215:5;2208:4;:12;;;;2077:150;:::o;1986:85::-;2031:7;2056:8;;2049:15;;1986:85;:::o;1626:94::-;1668:7;1693:8;:20;1702:10;1693:20;;;;;;;;;;;;;;;;1686:27;;1626:94;:::o;1261:360::-;1362:6;1324:12;;;;;;;;;;:22;;;1347:10;1324:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;1316:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1418:12;;;;;;;;;;:25;;;1444:10;1464:4;1471:6;1418:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1410:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1537:32;1562:6;1537:8;:20;1546:10;1537:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1514:8;:20;1523:10;1514:20;;;;;;;;;;;;;;;:55;;;;1592:22;1607:6;1592:10;;:14;;:22;;;;:::i;:::-;1579:10;:35;;;;1261:360;:::o;732:26::-;;;;;;;;;;;;;:::o;967:41::-;;;;;;;;;;;;;;;;;:::o;1726:254::-;1803:15;1792:8;;:26;1784:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1883:9;1872:8;:20;;;;1913:23;1926:9;1913:8;;:12;;:23;;;;:::i;:::-;1902:8;:34;;;;1958:15;1946:9;:27;;;;1726:254;:::o;2755:96:2:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:96;1851:7;1880:24;1898:5;1880:24;:::i;:::-;1869:35;;1814:96;;;:::o;1916:122::-;1989:24;2007:5;1989:24;:::i;:::-;1982:5;1979:35;1969:63;;2028:1;2025;2018:12;1969:63;1916:122;:::o;2044:139::-;2090:5;2128:6;2115:20;2106:29;;2144:33;2171:5;2144:33;:::i;:::-;2044:139;;;;:::o;2189:329::-;2248:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:119;;;2303:79;;:::i;:::-;2265:119;2423:1;2448:53;2493:7;2484:6;2473:9;2469:22;2448:53;:::i;:::-;2438:63;;2394:117;2189:329;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:169::-;3216:11;3250:6;3245:3;3238:19;3290:4;3285:3;3281:14;3266:29;;3132:169;;;;:::o;3307:180::-;3447:32;3443:1;3435:6;3431:14;3424:56;3307:180;:::o;3493:366::-;3635:3;3656:67;3720:2;3715:3;3656:67;:::i;:::-;3649:74;;3732:93;3821:3;3732:93;:::i;:::-;3850:2;3845:3;3841:12;3834:19;;3493:366;;;:::o;3865:419::-;4031:4;4069:2;4058:9;4054:18;4046:26;;4118:9;4112:4;4108:20;4104:1;4093:9;4089:17;4082:47;4146:131;4272:4;4146:131;:::i;:::-;4138:139;;3865:419;;;:::o;4290:180::-;4338:77;4335:1;4328:88;4435:4;4432:1;4425:15;4459:4;4456:1;4449:15;4476:194;4516:4;4536:20;4554:1;4536:20;:::i;:::-;4531:25;;4570:20;4588:1;4570:20;:::i;:::-;4565:25;;4614:1;4611;4607:9;4599:17;;4638:1;4632:4;4629:11;4626:37;;;4643:18;;:::i;:::-;4626:37;4476:194;;;;:::o;4676:180::-;4724:77;4721:1;4714:88;4821:4;4818:1;4811:15;4845:4;4842:1;4835:15;4862:185;4902:1;4919:20;4937:1;4919:20;:::i;:::-;4914:25;;4953:20;4971:1;4953:20;:::i;:::-;4948:25;;4992:1;4982:35;;4997:18;;:::i;:::-;4982:35;5039:1;5036;5032:9;5027:14;;4862:185;;;;:::o;5053:410::-;5093:7;5116:20;5134:1;5116:20;:::i;:::-;5111:25;;5150:20;5168:1;5150:20;:::i;:::-;5145:25;;5205:1;5202;5198:9;5227:30;5245:11;5227:30;:::i;:::-;5216:41;;5406:1;5397:7;5393:15;5390:1;5387:22;5367:1;5360:9;5340:83;5317:139;;5436:18;;:::i;:::-;5317:139;5101:362;5053:410;;;;:::o;5469:175::-;5609:27;5605:1;5597:6;5593:14;5586:51;5469:175;:::o;5650:366::-;5792:3;5813:67;5877:2;5872:3;5813:67;:::i;:::-;5806:74;;5889:93;5978:3;5889:93;:::i;:::-;6007:2;6002:3;5998:12;5991:19;;5650:366;;;:::o;6022:419::-;6188:4;6226:2;6215:9;6211:18;6203:26;;6275:9;6269:4;6265:20;6261:1;6250:9;6246:17;6239:47;6303:131;6429:4;6303:131;:::i;:::-;6295:139;;6022:419;;;:::o;6447:118::-;6534:24;6552:5;6534:24;:::i;:::-;6529:3;6522:37;6447:118;;:::o;6571:222::-;6664:4;6702:2;6691:9;6687:18;6679:26;;6715:71;6783:1;6772:9;6768:17;6759:6;6715:71;:::i;:::-;6571:222;;;;:::o;6799:143::-;6856:5;6887:6;6881:13;6872:22;;6903:33;6930:5;6903:33;:::i;:::-;6799:143;;;;:::o;6948:351::-;7018:6;7067:2;7055:9;7046:7;7042:23;7038:32;7035:119;;;7073:79;;:::i;:::-;7035:119;7193:1;7218:64;7274:7;7265:6;7254:9;7250:22;7218:64;:::i;:::-;7208:74;;7164:128;6948:351;;;;:::o;7305:177::-;7445:29;7441:1;7433:6;7429:14;7422:53;7305:177;:::o;7488:366::-;7630:3;7651:67;7715:2;7710:3;7651:67;:::i;:::-;7644:74;;7727:93;7816:3;7727:93;:::i;:::-;7845:2;7840:3;7836:12;7829:19;;7488:366;;;:::o;7860:419::-;8026:4;8064:2;8053:9;8049:18;8041:26;;8113:9;8107:4;8103:20;8099:1;8088:9;8084:17;8077:47;8141:131;8267:4;8141:131;:::i;:::-;8133:139;;7860:419;;;:::o;8285:442::-;8434:4;8472:2;8461:9;8457:18;8449:26;;8485:71;8553:1;8542:9;8538:17;8529:6;8485:71;:::i;:::-;8566:72;8634:2;8623:9;8619:18;8610:6;8566:72;:::i;:::-;8648;8716:2;8705:9;8701:18;8692:6;8648:72;:::i;:::-;8285:442;;;;;;:::o;8733:90::-;8767:7;8810:5;8803:13;8796:21;8785:32;;8733:90;;;:::o;8829:116::-;8899:21;8914:5;8899:21;:::i;:::-;8892:5;8889:32;8879:60;;8935:1;8932;8925:12;8879:60;8829:116;:::o;8951:137::-;9005:5;9036:6;9030:13;9021:22;;9052:30;9076:5;9052:30;:::i;:::-;8951:137;;;;:::o;9094:345::-;9161:6;9210:2;9198:9;9189:7;9185:23;9181:32;9178:119;;;9216:79;;:::i;:::-;9178:119;9336:1;9361:61;9414:7;9405:6;9394:9;9390:22;9361:61;:::i;:::-;9351:71;;9307:125;9094:345;;;;:::o;9445:171::-;9585:23;9581:1;9573:6;9569:14;9562:47;9445:171;:::o;9622:366::-;9764:3;9785:67;9849:2;9844:3;9785:67;:::i;:::-;9778:74;;9861:93;9950:3;9861:93;:::i;:::-;9979:2;9974:3;9970:12;9963:19;;9622:366;;;:::o;9994:419::-;10160:4;10198:2;10187:9;10183:18;10175:26;;10247:9;10241:4;10237:20;10233:1;10222:9;10218:17;10211:47;10275:131;10401:4;10275:131;:::i;:::-;10267:139;;9994:419;;;:::o;10419:225::-;10559:34;10555:1;10547:6;10543:14;10536:58;10628:8;10623:2;10615:6;10611:15;10604:33;10419:225;:::o;10650:366::-;10792:3;10813:67;10877:2;10872:3;10813:67;:::i;:::-;10806:74;;10889:93;10978:3;10889:93;:::i;:::-;11007:2;11002:3;10998:12;10991:19;;10650:366;;;:::o;11022:419::-;11188:4;11226:2;11215:9;11211:18;11203:26;;11275:9;11269:4;11265:20;11261:1;11250:9;11246:17;11239:47;11303:131;11429:4;11303:131;:::i;:::-;11295:139;;11022:419;;;:::o;11447:191::-;11487:3;11506:20;11524:1;11506:20;:::i;:::-;11501:25;;11540:20;11558:1;11540:20;:::i;:::-;11535:25;;11583:1;11580;11576:9;11569:16;;11604:3;11601:1;11598:10;11595:36;;;11611:18;;:::i;:::-;11595:36;11447:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "745200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2880",
								"_rewards(address)": "2903",
								"balance()": "2615",
								"calculateRewards()": "infinite",
								"depositStake(uint256)": "infinite",
								"duration()": "2453",
								"finishAt()": "2452",
								"getDuration()": "2504",
								"rate()": "2475",
								"rewardsToken()": "infinite",
								"setDuration(uint256)": "infinite",
								"setRewardRate(uint256)": "24687",
								"stakingToken()": "infinite",
								"totalStake()": "2452",
								"totalStakeRewards()": "2497",
								"updatedAt()": "2496"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1103,
									"end": 1255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1190,
									"end": 1201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1234,
									"end": 1247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1212,
									"end": 1224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1255,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2468,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040ac17087ac7df14721bed8ba8eae01fb27ac8be98f2cdf03c237a646d77082c64736f6c63430008120033",
									".code": [
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "D3ACEAE2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "F6BE71D1"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "9E447FC6"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "AD2E8C9B"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "67D3B488"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "67D3B488"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "7519AB50"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "7D6DFB7E"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "327BCAC5"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "3E50DE30"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2233,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2233,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1014,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1014,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1014,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2077,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2077,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1986,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1986,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1626,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1626,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1261,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1261,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1726,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1726,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2301,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2301,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2438,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2423,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2410,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2410,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2386,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2386,
											"end": 2452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2386,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2167,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2133,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2133,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2208,
											"end": 2220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2220,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1701,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1346,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1346,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1347,
											"end": 1357,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1316,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1444,
											"end": 1454,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 1468,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1418,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1418,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1418,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1410,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1410,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1545,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1537,
											"end": 1561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1537,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1533,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1607,
											"end": 1613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1592,
											"end": 1602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1592,
											"end": 1606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1592,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1589,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 1614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 1614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1818,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1784,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1784,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1913,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1910,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1958,
											"end": 1973,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1946,
											"end": 1973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1973,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 1973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1880,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1989,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1989,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 2014,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1969,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2144,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2283,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2295,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2300,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2303,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2265,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2448,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2448,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F74207374616B656420616E7920746F6B656E730000"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3720,
											"end": 3722,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3656,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3732,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4146,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4290,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4415,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4439,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4425,
											"end": 4440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4456,
											"end": 4457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4536,
											"end": 4556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4570,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4643,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4856,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4676,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4801,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4849,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4850,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4919,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4953,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4997,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5116,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5168,
											"end": 5169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5150,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5245,
											"end": 5256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5227,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5409,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5423,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5436,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5644,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5469,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5636,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67207374696C6C20696E2070726F677265737300000000000000"
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 6016,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5650,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5872,
											"end": 5875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5813,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5880,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5813,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5889,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 5982,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5889,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5998,
											"end": 6010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 6016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 6016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 6016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 6016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6022,
											"end": 6441,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6022,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6228,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6203,
											"end": 6229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6203,
											"end": 6229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6246,
											"end": 6263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6303,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6434,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6303,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6022,
											"end": 6441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6022,
											"end": 6441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6022,
											"end": 6441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6022,
											"end": 6441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6565,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6447,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6534,
											"end": 6558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6558,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6534,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6529,
											"end": 6532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 6715,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6786,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6715,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6881,
											"end": 6894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 6903,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 6936,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6903,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6799,
											"end": 6942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7065,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7070,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 7035,
											"end": 7154,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7035,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7035,
											"end": 7154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7073,
											"end": 7152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7073,
											"end": 7152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7152,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7073,
											"end": 7152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7035,
											"end": 7154,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7035,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 7218,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7282,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7218,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7482,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7305,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7474,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000"
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7429,
											"end": 7443,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7854,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7488,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7715,
											"end": 7717,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7651,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7718,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7651,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7727,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7820,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7727,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7845,
											"end": 7847,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7843,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 8279,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7860,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8026,
											"end": 8030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8053,
											"end": 8062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8041,
											"end": 8067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8107,
											"end": 8111,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8084,
											"end": 8101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8141,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8141,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 8141,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8141,
											"end": 8272,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8141,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 8279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 8279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 8279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 8279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8434,
											"end": 8438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8457,
											"end": 8475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8449,
											"end": 8475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8449,
											"end": 8475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 8553,
											"end": 8554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8538,
											"end": 8555,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8535,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8485,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8556,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 8485,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8566,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8638,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 8566,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8648,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 8716,
											"end": 8718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8714,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8692,
											"end": 8698,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8648,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 8648,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8648,
											"end": 8720,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 8648,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8823,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8733,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8767,
											"end": 8774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8810,
											"end": 8815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8785,
											"end": 8817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8785,
											"end": 8817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 8945,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8829,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8914,
											"end": 8919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 8899,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8920,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8899,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8892,
											"end": 8897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8889,
											"end": 8921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 8879,
											"end": 8939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8935,
											"end": 8936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8933,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8925,
											"end": 8937,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8939,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 8879,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 8945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 8945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9005,
											"end": 9010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9030,
											"end": 9043,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9021,
											"end": 9043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9021,
											"end": 9043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9076,
											"end": 9081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9052,
											"end": 9082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9082,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9052,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9210,
											"end": 9212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9181,
											"end": 9213,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9178,
											"end": 9297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9178,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 9178,
											"end": 9297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 9216,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9178,
											"end": 9297,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 9178,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 9414,
											"end": 9421,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9394,
											"end": 9403,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9361,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 9361,
											"end": 9422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9361,
											"end": 9422,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 9361,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9351,
											"end": 9422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9351,
											"end": 9422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9094,
											"end": 9439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9616,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9445,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9585,
											"end": 9608,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F207374616B6520746F6B656E0000000000000000000000"
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9569,
											"end": 9583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9562,
											"end": 9609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9988,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 9622,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9849,
											"end": 9851,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 9844,
											"end": 9847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9785,
											"end": 9852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9852,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9785,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9852,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9861,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 9950,
											"end": 9953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9861,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9861,
											"end": 9954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9861,
											"end": 9954,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 9861,
											"end": 9954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9979,
											"end": 9981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9974,
											"end": 9977,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9963,
											"end": 9982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10413,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9994,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10198,
											"end": 10200,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10175,
											"end": 10201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10175,
											"end": 10201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10247,
											"end": 10256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10241,
											"end": 10245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10233,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10218,
											"end": 10235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10211,
											"end": 10258,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10401,
											"end": 10405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10275,
											"end": 10406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10406,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10275,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10267,
											"end": 10406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10267,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10413,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10413,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10644,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10419,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10593,
											"name": "PUSH",
											"source": 3,
											"value": "63616E277420736574206461746520746F20612070726576696F75732074696D"
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10543,
											"end": 10557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10536,
											"end": 10594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10628,
											"end": 10636,
											"name": "PUSH",
											"source": 3,
											"value": "657374616D700000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10621,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10611,
											"end": 10626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10604,
											"end": 10637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10650,
											"end": 11016,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10650,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10792,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10813,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10872,
											"end": 10875,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10813,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 10813,
											"end": 10880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10813,
											"end": 10880,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10813,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10889,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10978,
											"end": 10981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10889,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10889,
											"end": 10982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10889,
											"end": 10982,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10889,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11002,
											"end": 11005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10998,
											"end": 11010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10991,
											"end": 11010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10650,
											"end": 11016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10650,
											"end": 11016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10650,
											"end": 11016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10650,
											"end": 11016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11441,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 11022,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11226,
											"end": 11228,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11211,
											"end": 11229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11203,
											"end": 11229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11203,
											"end": 11229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11269,
											"end": 11273,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11265,
											"end": 11285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11246,
											"end": 11263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11303,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11429,
											"end": 11433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11303,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 11303,
											"end": 11434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11303,
											"end": 11434,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11303,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 11524,
											"end": 11525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11506,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 11506,
											"end": 11526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11506,
											"end": 11526,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 11506,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 11558,
											"end": 11559,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 11540,
											"end": 11560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 11540,
											"end": 11560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11535,
											"end": 11560,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11535,
											"end": 11560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11580,
											"end": 11581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11576,
											"end": 11585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11569,
											"end": 11585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11569,
											"end": 11585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11604,
											"end": 11607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11598,
											"end": 11608,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11595,
											"end": 11631,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11595,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 11595,
											"end": 11631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 11611,
											"end": 11629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 11611,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11595,
											"end": 11631,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 11595,
											"end": 11631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11447,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"_rewards(address)": "7d6dfb7e",
							"balance()": "b69ef8a8",
							"calculateRewards()": "3e50de30",
							"depositStake(uint256)": "cb82cc8f",
							"duration()": "0fb5a6b4",
							"finishAt()": "67d3b488",
							"getDuration()": "ad2e8c9b",
							"rate()": "2c4e722e",
							"rewardsToken()": "d1af0c7d",
							"setDuration(uint256)": "f6be71d1",
							"setRewardRate(uint256)": "9e447fc6",
							"stakingToken()": "72f702f3",
							"totalStake()": "8b0e9f3f",
							"totalStakeRewards()": "327bcac5",
							"updatedAt()": "7519ab50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0xcd7a6c68217f408a77e7e55cbefd7e3ae6515b95b9ee64e8fff75854d6af8683\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee553570aecba13e8aed715ced800831b6a6fc1aa039316d239209fe8739043e\",\"dweb:/ipfs/QmdhejwAkQK8DCyx2SYVMtkojz8dZEfK7i6cXNxZ52YmaB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "contracts/staking.sol:Staking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 46,
								"contract": "contracts/staking.sol:Staking",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 48,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 50,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStakeRewards",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/staking.sol:Staking",
								"label": "duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/staking.sol:Staking",
								"label": "finishAt",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "contracts/staking.sol:Staking",
								"label": "updatedAt",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "contracts/staking.sol:Staking",
								"label": "rate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "contracts/staking.sol:Staking",
								"label": "_balance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 66,
								"contract": "contracts/staking.sol:Staking",
								"label": "_rewards",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						],
						"IStake": [
							34
						],
						"SafeMath": [
							627
						],
						"Staking": [
							237
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "31:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 628,
							"src": "168:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStake",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "IStake",
							"nameLocation": "290:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb82cc8f",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "311:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 34,
									"src": "302:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25d5971f",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:13:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 34,
									"src": "352:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6be71d1",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "412:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "429:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 34,
									"src": "403:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7e284b8",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeLeft",
									"nameLocation": "463:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:0"
									},
									"scope": 34,
									"src": "454:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "523:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "539:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:13:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:0"
									},
									"scope": 34,
									"src": "514:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "523a3f08",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawReward",
									"nameLocation": "575:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "590:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:13:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 34,
									"src": "566:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 238,
							"src": "280:335:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "Staking",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 37,
									"libraryName": {
										"id": 35,
										"name": "SafeMath",
										"nameLocations": [
											"645:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "645:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "639:27:0",
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 40,
									"libraryName": {
										"id": 38,
										"name": "SafeMath",
										"nameLocations": [
											"677:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "677:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "671:24:0",
									"typeName": {
										"id": 39,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "690:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 43,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "714:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "700:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 42,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 41,
											"name": "IERC20",
											"nameLocations": [
												"700:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "700:6:0"
										},
										"referencedDeclaration": 315,
										"src": "700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 46,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "746:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "732:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 45,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 44,
											"name": "IERC20",
											"nameLocations": [
												"732:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "732:6:0"
										},
										"referencedDeclaration": 315,
										"src": "732:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 48,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "777:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "765:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "765:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "327bcac5",
									"id": 50,
									"mutability": "mutable",
									"name": "totalStakeRewards",
									"nameLocation": "805:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "793:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 52,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "845:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "833:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "833:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 54,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "889:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "877:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "877:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7519ab50",
									"id": 56,
									"mutability": "mutable",
									"name": "updatedAt",
									"nameLocation": "915:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "903:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "903:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 58,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "943:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "931:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "931:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 62,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "1000:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "967:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 61,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "976:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "967:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 60,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "987:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d6dfb7e",
									"id": 66,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "1047:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 237,
									"src": "1014:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 65,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1023:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1014:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 64,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1034:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1158:97:0",
										"statements": [
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1168:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 75,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1190:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 74,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1183:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1168:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1168:34:0"
											},
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1212:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 81,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1234:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 80,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1227:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1212:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1212:36:0"
											}
										]
									},
									"id": 86,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "1123:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1115:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1144:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1136:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:44:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:0"
									},
									"scope": 237,
									"src": "1103:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1306:315:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 94,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1347:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1351:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1347:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 92,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "1324:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1337:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "1324:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1324:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 97,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1362:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1324:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1370:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															},
															"value": "Not enough tokens for stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1316:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 105,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1444:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1448:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1444:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 109,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1464:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$237",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$237",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 107,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1456:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1456:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 111,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1471:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 103,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "1418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1431:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "1418:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1418:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207374616b6520746f6b656e",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1479:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															},
															"value": "Failed to stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1410:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1410:93:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 116,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1514:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"expression": {
																"id": 117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1523:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1527:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1523:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1514:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1562:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 120,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1537:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 123,
																"indexExpression": {
																	"expression": {
																		"id": 121,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1546:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1550:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1546:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1537:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 491,
															"src": "1537:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1537:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1514:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1514:55:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1579:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 132,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1607:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 130,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1592:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1603:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 491,
															"src": "1592:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1592:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1579:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1579:35:0"
											}
										]
									},
									"functionSelector": "cb82cc8f",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "1270:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1284:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:13:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:0"
									},
									"scope": 237,
									"src": "1261:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1676:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 142,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 145,
													"indexExpression": {
														"expression": {
															"id": 143,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1702:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1702:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1693:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 146,
												"nodeType": "Return",
												"src": "1686:27:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "1635:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1668:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:9:0"
									},
									"scope": 237,
									"src": "1626:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1774:206:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 154,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1792:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 155,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1803:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1809:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1803:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1792:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d657374616d70",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1820:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															},
															"value": "can't set date to a previous timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1784:77:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1872:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1883:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1872:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1872:20:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1902:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 168,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "1926:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 166,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1913:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1922:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 491,
															"src": "1913:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1913:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1902:34:0"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1946:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 173,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1964:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1958:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1946:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1946:27:0"
											}
										]
									},
									"functionSelector": "f6be71d1",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "1735:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1755:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1747:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:19:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:0:0"
									},
									"scope": 237,
									"src": "1726:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2039:32:0",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2056:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "2049:15:0"
											}
										]
									},
									"functionSelector": "ad2e8c9b",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "1995:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:9:0"
									},
									"scope": 237,
									"src": "1986:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2123:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "2141:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 193,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2152:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2158:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2152:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2141:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67207374696c6c20696e2070726f6772657373",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2169:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																"typeString": "literal_string \"Staking still in progress\""
															},
															"value": "Staking still in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																"typeString": "literal_string \"Staking still in progress\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2133:64:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2208:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 200,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2215:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2208:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2208:12:0"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRewardRate",
									"nameLocation": "2086:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2099:15:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2123:0:0"
									},
									"scope": 237,
									"src": "2077:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2291:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 210,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2309:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"expression": {
																		"id": 211,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2318:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2322:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2318:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2309:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2332:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2309:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2335:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															},
															"value": "You have not staked any tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2301:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2301:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 219,
																"name": "_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2386:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 222,
															"indexExpression": {
																"expression": {
																	"id": 220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2395:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2395:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2386:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 223,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "2410:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2415:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2410:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 226,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2409:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2386:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 228,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2423:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2429:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2423:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 230,
																	"name": "updatedAt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2441:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2423:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2422:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 234,
												"nodeType": "Return",
												"src": "2379:73:0"
											}
										]
									},
									"functionSelector": "3e50de30",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "2242:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2258:2:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:9:0"
									},
									"scope": 237,
									"src": "2233:226:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 238,
							"src": "617:1851:0",
							"usedErrors": []
						}
					],
					"src": "31:2438:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 315,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 315,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 315,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 315,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 315,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 315,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 348,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 348,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 335,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 343,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 329,
															"id": 342,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 345,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 346,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 329,
														"id": 347,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 627,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 376,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 369,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 361,
															"id": 368,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 372,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 374,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 361,
														"id": 375,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 627,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 397,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 389,
															"id": 396,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															399
														],
														"declarations": [
															{
																"constant": false,
																"id": 399,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 418,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 398,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 403,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 400,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 401,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 404,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 405,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 413,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 389,
															"id": 412,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 415,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 416,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 389,
														"id": 417,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 627,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 446,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 439,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 431,
															"id": 438,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 441,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 442,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 444,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 431,
														"id": 445,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 627,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 474,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 467,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 459,
															"id": 466,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 469,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 470,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 472,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 459,
														"id": 473,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 627,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 485,
												"id": 489,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 627,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 502,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 500,
												"id": 504,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 627,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 516,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 517,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 519,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 627,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 532,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 530,
												"id": 534,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 627,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 547,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 627,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 574,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 564,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 565,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 567,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 563,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 569,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 570,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 571,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 562,
														"id": 573,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 627,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 599,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 589,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 592,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 588,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 594,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 595,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 596,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 587,
														"id": 598,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 627,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 624,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 614,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 617,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 613,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 619,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 612,
														"id": 623,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 627,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 628,
							"src": "482:6210:2",
							"usedErrors": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			}
		}
	}
}