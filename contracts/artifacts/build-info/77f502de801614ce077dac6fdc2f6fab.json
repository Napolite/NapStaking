{
	"id": "77f502de801614ce077dac6fdc2f6fab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.1 ;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ninterface IStake{\n    function depositStake( uint amount) external;\n    function withdrawStake(uint amount) external;\n\n    function setDuration(uint duration) external;\n\n    function getTimeLeft() external view returns(uint256);\n\n    function calculateReward(uint amount) external;\n    function withdrawReward(uint amount) external;\n\n}\n\ncontract Staking{\n    using SafeMath for uint256;\n    using SafeMath for uint;\n    IERC20 public stakingToken;\n    IERC20 public rewardsToken;\n\n    uint public totalStake;\n    uint public totalRewardsPaid;\n    \n    uint public duration; // stake duration\n    uint public finishAt;\n    uint public updatedAt;\n\n    uint public rate; //stake rate\n\n    mapping (address => uint) public _balance;\n\n    //modifiers\n\n    // contract methods\n    constructor(address _stakeToken, address _rewardsToken){\n        stakingToken = IERC20(_stakeToken);\n        rewardsToken = IERC20(_rewardsToken);\n    }\n\n    function depositStake (uint amount) external {\n        require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\");\n\n        _balance[msg.sender] = _balance[msg.sender].add(amount);\n        totalStake = totalStake.add(amount);\n    }\n    function balance() external view returns (uint256){\n        return _balance[msg.sender];\n    }\n\n    function setDuration(uint256 _duration) external{\n        require(finishAt < block.timestamp, \"can't set date to a previous timestamp\");\n\n        duration = _duration;\n        finishAt = finishAt.add(_duration);\n        updatedAt = block.timestamp;\n    }\n\n    function getDuration() view external returns(uint256){\n        return duration;\n    }\n\n    // function setRewardRate(uint256 _rate) external{\n    //     require(finishAt < block.timestamp, \"Staking still in progress\");\n\n    //     rate = _rate;\n    // }\n\n    function calculateReward() view external returns(uint256){\n        require(_balance[msg.sender] > 0, \"You have not staked any tokens\");\n\n        return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt );\n    }\n \n    \n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/staking.sol": {
				"IStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTimeLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"depositStake(uint256)": "cb82cc8f",
							"getTimeLeft()": "c7e284b8",
							"setDuration(uint256)": "f6be71d1",
							"withdrawReward(uint256)": "523a3f08",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"IStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0xdafb47775d779116b0e7c08e52cc2e1fd3eb26a67eaa03c1a795f31e77b3f751\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3166226e82805ea1990e704101b07b16e552e5094bd7cb953c0038ab0aa969ae\",\"dweb:/ipfs/QmdFkctATANJEY62pcgK33ZK36Zk3RHizg6WN8TxHaNtk7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardsPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":617:2431  contract Staking{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking.sol\":1055:1207  constructor(address _stakeToken, address _rewardsToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking.sol\":1142:1153  _stakeToken */\n  dup2\n    /* \"contracts/staking.sol\":1120:1132  stakingToken */\n  0x00\n  dup1\n    /* \"contracts/staking.sol\":1120:1154  stakingToken = IERC20(_stakeToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1186:1199  _rewardsToken */\n  dup1\n    /* \"contracts/staking.sol\":1164:1176  rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/staking.sol\":1164:1200  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1055:1207  constructor(address _stakeToken, address _rewardsToken){... */\n  pop\n  pop\n    /* \"contracts/staking.sol\":617:2431  contract Staking{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/staking.sol\":617:2431  contract Staking{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":617:2431  contract Staking{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b0e9f3f\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xcb82cc8f\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcb82cc8f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf6be71d1\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xad2e8c9b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x725cedd3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x725cedd3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x74958e35\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7519ab50\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking.sol\":832:852  uint public duration */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":930:946  uint public rate */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":876:896  uint public finishAt */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2197:2422  function calculateReward() view external returns(uint256){... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":793:821  uint public totalRewardsPaid */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":902:923  uint public updatedAt */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1938:2023  function getDuration() view external returns(uint256){... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1578:1672  function balance() external view returns (uint256){... */\n    tag_12:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1213:1573  function depositStake (uint amount) external {... */\n    tag_13:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":966:1007  mapping (address => uint) public _balance */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1678:1932  function setDuration(uint256 _duration) external{... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/staking.sol\":832:852  uint public duration */\n    tag_21:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":930:946  uint public rate */\n    tag_25:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":876:896  uint public finishAt */\n    tag_28:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2197:2422  function calculateReward() view external returns(uint256){... */\n    tag_31:\n        /* \"contracts/staking.sol\":2246:2253  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2295:2296  0 */\n      dup1\n        /* \"contracts/staking.sol\":2272:2280  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2272:2292  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2281:2291  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2272:2292  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2272:2296  _balance[msg.sender] > 0 */\n      gt\n        /* \"contracts/staking.sol\":2264:2331  require(_balance[msg.sender] > 0, \"You have not staked any tokens\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/staking.sol\":2404:2413  updatedAt */\n      sload(0x06)\n        /* \"contracts/staking.sol\":2386:2401  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2386:2413  block.timestamp - updatedAt */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/staking.sol\":2378:2381  100 */\n      0x64\n        /* \"contracts/staking.sol\":2373:2377  rate */\n      sload(0x07)\n        /* \"contracts/staking.sol\":2373:2381  rate/100 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/staking.sol\":2349:2357  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2349:2369  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2358:2368  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2349:2369  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2349:2382  _balance[msg.sender] * (rate/100) */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/staking.sol\":2349:2415  _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      tag_77\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n        /* \"contracts/staking.sol\":2342:2415  return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":2197:2422  function calculateReward() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_34:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":793:821  uint public totalRewardsPaid */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":902:923  uint public updatedAt */\n    tag_41:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_44:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1938:2023  function getDuration() view external returns(uint256){... */\n    tag_47:\n        /* \"contracts/staking.sol\":1983:1990  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2008:2016  duration */\n      sload(0x04)\n        /* \"contracts/staking.sol\":2001:2016  return duration */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1938:2023  function getDuration() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1578:1672  function balance() external view returns (uint256){... */\n    tag_50:\n        /* \"contracts/staking.sol\":1620:1627  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":1645:1653  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1645:1665  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1654:1664  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1645:1665  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1638:1665  return _balance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1578:1672  function balance() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1213:1573  function depositStake (uint amount) external {... */\n    tag_55:\n        /* \"contracts/staking.sol\":1314:1320  amount */\n      dup1\n        /* \"contracts/staking.sol\":1276:1288  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1276:1298  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/staking.sol\":1299:1309  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1276:1310  stakingToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/staking.sol\":1276:1320  stakingToken.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/staking.sol\":1268:1352  require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/staking.sol\":1370:1382  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1370:1395  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking.sol\":1396:1406  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1416:1420  this */\n      address\n        /* \"contracts/staking.sol\":1423:1429  amount */\n      dup5\n        /* \"contracts/staking.sol\":1370:1430  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/staking.sol\":1362:1455  require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/staking.sol\":1489:1521  _balance[msg.sender].add(amount) */\n      tag_99\n        /* \"contracts/staking.sol\":1514:1520  amount */\n      dup2\n        /* \"contracts/staking.sol\":1489:1497  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1489:1509  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1498:1508  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1489:1509  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1489:1513  _balance[msg.sender].add */\n      tag_100\n      swap1\n        /* \"contracts/staking.sol\":1489:1521  _balance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"contracts/staking.sol\":1466:1474  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1466:1486  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1475:1485  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1466:1486  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1466:1521  _balance[msg.sender] = _balance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1544:1566  totalStake.add(amount) */\n      tag_101\n        /* \"contracts/staking.sol\":1559:1565  amount */\n      dup2\n        /* \"contracts/staking.sol\":1544:1554  totalStake */\n      sload(0x02)\n        /* \"contracts/staking.sol\":1544:1558  totalStake.add */\n      tag_100\n      swap1\n        /* \"contracts/staking.sol\":1544:1566  totalStake.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/staking.sol\":1531:1541  totalStake */\n      0x02\n        /* \"contracts/staking.sol\":1531:1566  totalStake = totalStake.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1213:1573  function depositStake (uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_57:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":966:1007  mapping (address => uint) public _balance */\n    tag_62:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":1678:1932  function setDuration(uint256 _duration) external{... */\n    tag_66:\n        /* \"contracts/staking.sol\":1755:1770  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1744:1752  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1744:1770  finishAt < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":1736:1813  require(finishAt < block.timestamp, \"can't set date to a previous timestamp\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/staking.sol\":1835:1844  _duration */\n      dup1\n        /* \"contracts/staking.sol\":1824:1832  duration */\n      0x04\n        /* \"contracts/staking.sol\":1824:1844  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1865:1888  finishAt.add(_duration) */\n      tag_106\n        /* \"contracts/staking.sol\":1878:1887  _duration */\n      dup2\n        /* \"contracts/staking.sol\":1865:1873  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1865:1877  finishAt.add */\n      tag_100\n      swap1\n        /* \"contracts/staking.sol\":1865:1888  finishAt.add(_duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/staking.sol\":1854:1862  finishAt */\n      0x05\n        /* \"contracts/staking.sol\":1854:1888  finishAt = finishAt.add(_duration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1910:1925  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1898:1907  updatedAt */\n      0x06\n        /* \"contracts/staking.sol\":1898:1925  updatedAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1678:1932  function setDuration(uint256 _duration) external{... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_110:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_111:\n        /* \"#utility.yul\":177:201   */\n      tag_145\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_110\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_23:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_147\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_111\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_112:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_113:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_114:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_151\n        /* \"#utility.yul\":741:775   */\n      tag_152\n        /* \"#utility.yul\":750:774   */\n      tag_153\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_112\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":741:775   */\n      tag_113\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":723:776   */\n      tag_112\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_115:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_155\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_114\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_116:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_157\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_115\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_117:\n        /* \"#utility.yul\":1167:1218   */\n      tag_159\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_116\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_36:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_161\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_117\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_119:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1936   */\n    tag_121:\n        /* \"#utility.yul\":1887:1911   */\n      tag_166\n        /* \"#utility.yul\":1905:1910   */\n      dup2\n        /* \"#utility.yul\":1887:1911   */\n      tag_110\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1912   */\n      eq\n        /* \"#utility.yul\":1867:1930   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1923:1924   */\n      dup1\n        /* \"#utility.yul\":1916:1928   */\n      revert\n        /* \"#utility.yul\":1867:1930   */\n    tag_167:\n        /* \"#utility.yul\":1814:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2081   */\n    tag_122:\n        /* \"#utility.yul\":1988:1993   */\n      0x00\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2013:2033   */\n      calldataload\n        /* \"#utility.yul\":2004:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2075   */\n      tag_169\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2042:2075   */\n      tag_121\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1942:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2416   */\n    tag_54:\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x20\n        /* \"#utility.yul\":2183:2192   */\n      dup3\n        /* \"#utility.yul\":2174:2181   */\n      dup5\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2282   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2201:2280   */\n      tag_172\n      tag_119\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2163:2282   */\n    tag_171:\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2346:2399   */\n      tag_173\n        /* \"#utility.yul\":2391:2398   */\n      dup5\n        /* \"#utility.yul\":2382:2388   */\n      dup3\n        /* \"#utility.yul\":2371:2380   */\n      dup6\n        /* \"#utility.yul\":2367:2389   */\n      add\n        /* \"#utility.yul\":2346:2399   */\n      tag_122\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2336:2399   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2409   */\n      pop\n        /* \"#utility.yul\":2087:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_123:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_175\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_112\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_124:\n        /* \"#utility.yul\":2597:2621   */\n      tag_177\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_123\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_178:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_125:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_180\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_124\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_61:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_183\n      tag_119\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2873:2992   */\n    tag_182:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_184\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_125\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3301   */\n    tag_126:\n        /* \"#utility.yul\":3216:3227   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup3\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3257   */\n      mstore\n        /* \"#utility.yul\":3290:3294   */\n      0x20\n        /* \"#utility.yul\":3285:3288   */\n      dup3\n        /* \"#utility.yul\":3281:3295   */\n      add\n        /* \"#utility.yul\":3266:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3307:3487   */\n    tag_127:\n        /* \"#utility.yul\":3447:3479   */\n      0x596f752068617665206e6f74207374616b656420616e7920746f6b656e730000\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3435:3441   */\n      dup3\n        /* \"#utility.yul\":3431:3445   */\n      add\n        /* \"#utility.yul\":3424:3480   */\n      mstore\n        /* \"#utility.yul\":3307:3487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3859   */\n    tag_128:\n        /* \"#utility.yul\":3635:3638   */\n      0x00\n        /* \"#utility.yul\":3656:3723   */\n      tag_188\n        /* \"#utility.yul\":3720:3722   */\n      0x1e\n        /* \"#utility.yul\":3715:3718   */\n      dup4\n        /* \"#utility.yul\":3656:3723   */\n      tag_126\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3649:3723   */\n      swap2\n      pop\n        /* \"#utility.yul\":3732:3825   */\n      tag_189\n        /* \"#utility.yul\":3821:3824   */\n      dup3\n        /* \"#utility.yul\":3732:3825   */\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3850:3852   */\n      0x20\n        /* \"#utility.yul\":3845:3848   */\n      dup3\n        /* \"#utility.yul\":3841:3853   */\n      add\n        /* \"#utility.yul\":3834:3853   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4284   */\n    tag_70:\n        /* \"#utility.yul\":4031:4035   */\n      0x00\n        /* \"#utility.yul\":4069:4071   */\n      0x20\n        /* \"#utility.yul\":4058:4067   */\n      dup3\n        /* \"#utility.yul\":4054:4072   */\n      add\n        /* \"#utility.yul\":4046:4072   */\n      swap1\n      pop\n        /* \"#utility.yul\":4118:4127   */\n      dup2\n        /* \"#utility.yul\":4112:4116   */\n      dup2\n        /* \"#utility.yul\":4108:4128   */\n      sub\n        /* \"#utility.yul\":4104:4105   */\n      0x00\n        /* \"#utility.yul\":4093:4102   */\n      dup4\n        /* \"#utility.yul\":4089:4106   */\n      add\n        /* \"#utility.yul\":4082:4129   */\n      mstore\n        /* \"#utility.yul\":4146:4277   */\n      tag_191\n        /* \"#utility.yul\":4272:4276   */\n      dup2\n        /* \"#utility.yul\":4146:4277   */\n      tag_128\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4138:4277   */\n      swap1\n      pop\n        /* \"#utility.yul\":3865:4284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4290:4470   */\n    tag_129:\n        /* \"#utility.yul\":4338:4415   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4328:4416   */\n      mstore\n        /* \"#utility.yul\":4435:4439   */\n      0x11\n        /* \"#utility.yul\":4432:4433   */\n      0x04\n        /* \"#utility.yul\":4425:4440   */\n      mstore\n        /* \"#utility.yul\":4459:4463   */\n      0x24\n        /* \"#utility.yul\":4456:4457   */\n      0x00\n        /* \"#utility.yul\":4449:4464   */\n      revert\n        /* \"#utility.yul\":4476:4670   */\n    tag_72:\n        /* \"#utility.yul\":4516:4520   */\n      0x00\n        /* \"#utility.yul\":4536:4556   */\n      tag_194\n        /* \"#utility.yul\":4554:4555   */\n      dup3\n        /* \"#utility.yul\":4536:4556   */\n      tag_110\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4531:4556   */\n      swap2\n      pop\n        /* \"#utility.yul\":4570:4590   */\n      tag_195\n        /* \"#utility.yul\":4588:4589   */\n      dup4\n        /* \"#utility.yul\":4570:4590   */\n      tag_110\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4565:4590   */\n      swap3\n      pop\n        /* \"#utility.yul\":4614:4615   */\n      dup3\n        /* \"#utility.yul\":4611:4612   */\n      dup3\n        /* \"#utility.yul\":4607:4616   */\n      sub\n        /* \"#utility.yul\":4599:4616   */\n      swap1\n      pop\n        /* \"#utility.yul\":4638:4639   */\n      dup2\n        /* \"#utility.yul\":4632:4636   */\n      dup2\n        /* \"#utility.yul\":4629:4640   */\n      gt\n        /* \"#utility.yul\":4626:4663   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":4643:4661   */\n      tag_197\n      tag_129\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4626:4663   */\n    tag_196:\n        /* \"#utility.yul\":4476:4670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4676:4856   */\n    tag_130:\n        /* \"#utility.yul\":4724:4801   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4721:4722   */\n      0x00\n        /* \"#utility.yul\":4714:4802   */\n      mstore\n        /* \"#utility.yul\":4821:4825   */\n      0x12\n        /* \"#utility.yul\":4818:4819   */\n      0x04\n        /* \"#utility.yul\":4811:4826   */\n      mstore\n        /* \"#utility.yul\":4845:4849   */\n      0x24\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4835:4850   */\n      revert\n        /* \"#utility.yul\":4862:5047   */\n    tag_74:\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4919:4939   */\n      tag_200\n        /* \"#utility.yul\":4937:4938   */\n      dup3\n        /* \"#utility.yul\":4919:4939   */\n      tag_110\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4914:4939   */\n      swap2\n      pop\n        /* \"#utility.yul\":4953:4973   */\n      tag_201\n        /* \"#utility.yul\":4971:4972   */\n      dup4\n        /* \"#utility.yul\":4953:4973   */\n      tag_110\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4948:4973   */\n      swap3\n      pop\n        /* \"#utility.yul\":4992:4993   */\n      dup3\n        /* \"#utility.yul\":4982:5017   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4997:5015   */\n      tag_203\n      tag_130\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4982:5017   */\n    tag_202:\n        /* \"#utility.yul\":5039:5040   */\n      dup3\n        /* \"#utility.yul\":5036:5037   */\n      dup3\n        /* \"#utility.yul\":5032:5041   */\n      div\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      pop\n        /* \"#utility.yul\":4862:5047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5053:5463   */\n    tag_76:\n        /* \"#utility.yul\":5093:5100   */\n      0x00\n        /* \"#utility.yul\":5116:5136   */\n      tag_205\n        /* \"#utility.yul\":5134:5135   */\n      dup3\n        /* \"#utility.yul\":5116:5136   */\n      tag_110\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5111:5136   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5170   */\n      tag_206\n        /* \"#utility.yul\":5168:5169   */\n      dup4\n        /* \"#utility.yul\":5150:5170   */\n      tag_110\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5145:5170   */\n      swap3\n      pop\n        /* \"#utility.yul\":5205:5206   */\n      dup3\n        /* \"#utility.yul\":5202:5203   */\n      dup3\n        /* \"#utility.yul\":5198:5207   */\n      mul\n        /* \"#utility.yul\":5227:5257   */\n      tag_207\n        /* \"#utility.yul\":5245:5256   */\n      dup2\n        /* \"#utility.yul\":5227:5257   */\n      tag_110\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5216:5257   */\n      swap2\n      pop\n        /* \"#utility.yul\":5406:5407   */\n      dup3\n        /* \"#utility.yul\":5397:5404   */\n      dup3\n        /* \"#utility.yul\":5393:5408   */\n      div\n        /* \"#utility.yul\":5390:5391   */\n      dup5\n        /* \"#utility.yul\":5387:5409   */\n      eq\n        /* \"#utility.yul\":5367:5368   */\n      dup4\n        /* \"#utility.yul\":5360:5369   */\n      iszero\n        /* \"#utility.yul\":5340:5423   */\n      or\n        /* \"#utility.yul\":5317:5456   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":5436:5454   */\n      tag_209\n      tag_129\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5317:5456   */\n    tag_208:\n        /* \"#utility.yul\":5101:5463   */\n      pop\n        /* \"#utility.yul\":5053:5463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5587   */\n    tag_131:\n        /* \"#utility.yul\":5556:5580   */\n      tag_211\n        /* \"#utility.yul\":5574:5579   */\n      dup2\n        /* \"#utility.yul\":5556:5580   */\n      tag_123\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5551:5554   */\n      dup3\n        /* \"#utility.yul\":5544:5581   */\n      mstore\n        /* \"#utility.yul\":5469:5587   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5593:5815   */\n    tag_82:\n        /* \"#utility.yul\":5686:5690   */\n      0x00\n        /* \"#utility.yul\":5724:5726   */\n      0x20\n        /* \"#utility.yul\":5713:5722   */\n      dup3\n        /* \"#utility.yul\":5709:5727   */\n      add\n        /* \"#utility.yul\":5701:5727   */\n      swap1\n      pop\n        /* \"#utility.yul\":5737:5808   */\n      tag_213\n        /* \"#utility.yul\":5805:5806   */\n      0x00\n        /* \"#utility.yul\":5794:5803   */\n      dup4\n        /* \"#utility.yul\":5790:5807   */\n      add\n        /* \"#utility.yul\":5781:5787   */\n      dup5\n        /* \"#utility.yul\":5737:5808   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5593:5815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5821:5964   */\n    tag_132:\n        /* \"#utility.yul\":5878:5883   */\n      0x00\n        /* \"#utility.yul\":5909:5915   */\n      dup2\n        /* \"#utility.yul\":5903:5916   */\n      mload\n        /* \"#utility.yul\":5894:5916   */\n      swap1\n      pop\n        /* \"#utility.yul\":5925:5958   */\n      tag_215\n        /* \"#utility.yul\":5952:5957   */\n      dup2\n        /* \"#utility.yul\":5925:5958   */\n      tag_121\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5821:5964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5970:6321   */\n    tag_86:\n        /* \"#utility.yul\":6040:6046   */\n      0x00\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6077:6086   */\n      dup3\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6064:6087   */\n      sub\n        /* \"#utility.yul\":6060:6092   */\n      slt\n        /* \"#utility.yul\":6057:6176   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":6095:6174   */\n      tag_218\n      tag_119\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6057:6176   */\n    tag_217:\n        /* \"#utility.yul\":6215:6216   */\n      0x00\n        /* \"#utility.yul\":6240:6304   */\n      tag_219\n        /* \"#utility.yul\":6296:6303   */\n      dup5\n        /* \"#utility.yul\":6287:6293   */\n      dup3\n        /* \"#utility.yul\":6276:6285   */\n      dup6\n        /* \"#utility.yul\":6272:6294   */\n      add\n        /* \"#utility.yul\":6240:6304   */\n      tag_132\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6230:6304   */\n      swap2\n      pop\n        /* \"#utility.yul\":6186:6314   */\n      pop\n        /* \"#utility.yul\":5970:6321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6504   */\n    tag_133:\n        /* \"#utility.yul\":6467:6496   */\n      0x4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000\n        /* \"#utility.yul\":6463:6464   */\n      0x00\n        /* \"#utility.yul\":6455:6461   */\n      dup3\n        /* \"#utility.yul\":6451:6465   */\n      add\n        /* \"#utility.yul\":6444:6497   */\n      mstore\n        /* \"#utility.yul\":6327:6504   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6510:6876   */\n    tag_134:\n        /* \"#utility.yul\":6652:6655   */\n      0x00\n        /* \"#utility.yul\":6673:6740   */\n      tag_222\n        /* \"#utility.yul\":6737:6739   */\n      0x1b\n        /* \"#utility.yul\":6732:6735   */\n      dup4\n        /* \"#utility.yul\":6673:6740   */\n      tag_126\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6666:6740   */\n      swap2\n      pop\n        /* \"#utility.yul\":6749:6842   */\n      tag_223\n        /* \"#utility.yul\":6838:6841   */\n      dup3\n        /* \"#utility.yul\":6749:6842   */\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"#utility.yul\":6862:6865   */\n      dup3\n        /* \"#utility.yul\":6858:6870   */\n      add\n        /* \"#utility.yul\":6851:6870   */\n      swap1\n      pop\n        /* \"#utility.yul\":6510:6876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6882:7301   */\n    tag_89:\n        /* \"#utility.yul\":7048:7052   */\n      0x00\n        /* \"#utility.yul\":7086:7088   */\n      0x20\n        /* \"#utility.yul\":7075:7084   */\n      dup3\n        /* \"#utility.yul\":7071:7089   */\n      add\n        /* \"#utility.yul\":7063:7089   */\n      swap1\n      pop\n        /* \"#utility.yul\":7135:7144   */\n      dup2\n        /* \"#utility.yul\":7129:7133   */\n      dup2\n        /* \"#utility.yul\":7125:7145   */\n      sub\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7110:7119   */\n      dup4\n        /* \"#utility.yul\":7106:7123   */\n      add\n        /* \"#utility.yul\":7099:7146   */\n      mstore\n        /* \"#utility.yul\":7163:7294   */\n      tag_225\n        /* \"#utility.yul\":7289:7293   */\n      dup2\n        /* \"#utility.yul\":7163:7294   */\n      tag_134\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7155:7294   */\n      swap1\n      pop\n        /* \"#utility.yul\":6882:7301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7307:7749   */\n    tag_91:\n        /* \"#utility.yul\":7456:7460   */\n      0x00\n        /* \"#utility.yul\":7494:7496   */\n      0x60\n        /* \"#utility.yul\":7483:7492   */\n      dup3\n        /* \"#utility.yul\":7479:7497   */\n      add\n        /* \"#utility.yul\":7471:7497   */\n      swap1\n      pop\n        /* \"#utility.yul\":7507:7578   */\n      tag_227\n        /* \"#utility.yul\":7575:7576   */\n      0x00\n        /* \"#utility.yul\":7564:7573   */\n      dup4\n        /* \"#utility.yul\":7560:7577   */\n      add\n        /* \"#utility.yul\":7551:7557   */\n      dup7\n        /* \"#utility.yul\":7507:7578   */\n      tag_131\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7588:7660   */\n      tag_228\n        /* \"#utility.yul\":7656:7658   */\n      0x20\n        /* \"#utility.yul\":7645:7654   */\n      dup4\n        /* \"#utility.yul\":7641:7659   */\n      add\n        /* \"#utility.yul\":7632:7638   */\n      dup6\n        /* \"#utility.yul\":7588:7660   */\n      tag_131\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7670:7742   */\n      tag_229\n        /* \"#utility.yul\":7738:7740   */\n      0x40\n        /* \"#utility.yul\":7727:7736   */\n      dup4\n        /* \"#utility.yul\":7723:7741   */\n      add\n        /* \"#utility.yul\":7714:7720   */\n      dup5\n        /* \"#utility.yul\":7670:7742   */\n      tag_111\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7307:7749   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7755:7845   */\n    tag_135:\n        /* \"#utility.yul\":7789:7796   */\n      0x00\n        /* \"#utility.yul\":7832:7837   */\n      dup2\n        /* \"#utility.yul\":7825:7838   */\n      iszero\n        /* \"#utility.yul\":7818:7839   */\n      iszero\n        /* \"#utility.yul\":7807:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7755:7845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:7967   */\n    tag_136:\n        /* \"#utility.yul\":7921:7942   */\n      tag_232\n        /* \"#utility.yul\":7936:7941   */\n      dup2\n        /* \"#utility.yul\":7921:7942   */\n      tag_135\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7914:7919   */\n      dup2\n        /* \"#utility.yul\":7911:7943   */\n      eq\n        /* \"#utility.yul\":7901:7961   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":7957:7958   */\n      0x00\n        /* \"#utility.yul\":7954:7955   */\n      dup1\n        /* \"#utility.yul\":7947:7959   */\n      revert\n        /* \"#utility.yul\":7901:7961   */\n    tag_233:\n        /* \"#utility.yul\":7851:7967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8110   */\n    tag_137:\n        /* \"#utility.yul\":8027:8032   */\n      0x00\n        /* \"#utility.yul\":8058:8064   */\n      dup2\n        /* \"#utility.yul\":8052:8065   */\n      mload\n        /* \"#utility.yul\":8043:8065   */\n      swap1\n      pop\n        /* \"#utility.yul\":8074:8104   */\n      tag_235\n        /* \"#utility.yul\":8098:8103   */\n      dup2\n        /* \"#utility.yul\":8074:8104   */\n      tag_136\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7973:8110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8116:8461   */\n    tag_95:\n        /* \"#utility.yul\":8183:8189   */\n      0x00\n        /* \"#utility.yul\":8232:8234   */\n      0x20\n        /* \"#utility.yul\":8220:8229   */\n      dup3\n        /* \"#utility.yul\":8211:8218   */\n      dup5\n        /* \"#utility.yul\":8207:8230   */\n      sub\n        /* \"#utility.yul\":8203:8235   */\n      slt\n        /* \"#utility.yul\":8200:8319   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":8238:8317   */\n      tag_238\n      tag_119\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8200:8319   */\n    tag_237:\n        /* \"#utility.yul\":8358:8359   */\n      0x00\n        /* \"#utility.yul\":8383:8444   */\n      tag_239\n        /* \"#utility.yul\":8436:8443   */\n      dup5\n        /* \"#utility.yul\":8427:8433   */\n      dup3\n        /* \"#utility.yul\":8416:8425   */\n      dup6\n        /* \"#utility.yul\":8412:8434   */\n      add\n        /* \"#utility.yul\":8383:8444   */\n      tag_137\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8373:8444   */\n      swap2\n      pop\n        /* \"#utility.yul\":8329:8454   */\n      pop\n        /* \"#utility.yul\":8116:8461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8467:8638   */\n    tag_138:\n        /* \"#utility.yul\":8607:8630   */\n      0x4661696c656420746f207374616b6520746f6b656e0000000000000000000000\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8595:8601   */\n      dup3\n        /* \"#utility.yul\":8591:8605   */\n      add\n        /* \"#utility.yul\":8584:8631   */\n      mstore\n        /* \"#utility.yul\":8467:8638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8644:9010   */\n    tag_139:\n        /* \"#utility.yul\":8786:8789   */\n      0x00\n        /* \"#utility.yul\":8807:8874   */\n      tag_242\n        /* \"#utility.yul\":8871:8873   */\n      0x15\n        /* \"#utility.yul\":8866:8869   */\n      dup4\n        /* \"#utility.yul\":8807:8874   */\n      tag_126\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8800:8874   */\n      swap2\n      pop\n        /* \"#utility.yul\":8883:8976   */\n      tag_243\n        /* \"#utility.yul\":8972:8975   */\n      dup3\n        /* \"#utility.yul\":8883:8976   */\n      tag_138\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9001:9003   */\n      0x20\n        /* \"#utility.yul\":8996:8999   */\n      dup3\n        /* \"#utility.yul\":8992:9004   */\n      add\n        /* \"#utility.yul\":8985:9004   */\n      swap1\n      pop\n        /* \"#utility.yul\":8644:9010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9016:9435   */\n    tag_98:\n        /* \"#utility.yul\":9182:9186   */\n      0x00\n        /* \"#utility.yul\":9220:9222   */\n      0x20\n        /* \"#utility.yul\":9209:9218   */\n      dup3\n        /* \"#utility.yul\":9205:9223   */\n      add\n        /* \"#utility.yul\":9197:9223   */\n      swap1\n      pop\n        /* \"#utility.yul\":9269:9278   */\n      dup2\n        /* \"#utility.yul\":9263:9267   */\n      dup2\n        /* \"#utility.yul\":9259:9279   */\n      sub\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9244:9253   */\n      dup4\n        /* \"#utility.yul\":9240:9257   */\n      add\n        /* \"#utility.yul\":9233:9280   */\n      mstore\n        /* \"#utility.yul\":9297:9428   */\n      tag_245\n        /* \"#utility.yul\":9423:9427   */\n      dup2\n        /* \"#utility.yul\":9297:9428   */\n      tag_139\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9289:9428   */\n      swap1\n      pop\n        /* \"#utility.yul\":9016:9435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9441:9666   */\n    tag_140:\n        /* \"#utility.yul\":9581:9615   */\n      0x63616e277420736574206461746520746f20612070726576696f75732074696d\n        /* \"#utility.yul\":9577:9578   */\n      0x00\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9565:9579   */\n      add\n        /* \"#utility.yul\":9558:9616   */\n      mstore\n        /* \"#utility.yul\":9650:9658   */\n      0x657374616d700000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9645:9647   */\n      0x20\n        /* \"#utility.yul\":9637:9643   */\n      dup3\n        /* \"#utility.yul\":9633:9648   */\n      add\n        /* \"#utility.yul\":9626:9659   */\n      mstore\n        /* \"#utility.yul\":9441:9666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9672:10038   */\n    tag_141:\n        /* \"#utility.yul\":9814:9817   */\n      0x00\n        /* \"#utility.yul\":9835:9902   */\n      tag_248\n        /* \"#utility.yul\":9899:9901   */\n      0x26\n        /* \"#utility.yul\":9894:9897   */\n      dup4\n        /* \"#utility.yul\":9835:9902   */\n      tag_126\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9828:9902   */\n      swap2\n      pop\n        /* \"#utility.yul\":9911:10004   */\n      tag_249\n        /* \"#utility.yul\":10000:10003   */\n      dup3\n        /* \"#utility.yul\":9911:10004   */\n      tag_140\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10029:10031   */\n      0x40\n        /* \"#utility.yul\":10024:10027   */\n      dup3\n        /* \"#utility.yul\":10020:10032   */\n      add\n        /* \"#utility.yul\":10013:10032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9672:10038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10044:10463   */\n    tag_105:\n        /* \"#utility.yul\":10210:10214   */\n      0x00\n        /* \"#utility.yul\":10248:10250   */\n      0x20\n        /* \"#utility.yul\":10237:10246   */\n      dup3\n        /* \"#utility.yul\":10233:10251   */\n      add\n        /* \"#utility.yul\":10225:10251   */\n      swap1\n      pop\n        /* \"#utility.yul\":10297:10306   */\n      dup2\n        /* \"#utility.yul\":10291:10295   */\n      dup2\n        /* \"#utility.yul\":10287:10307   */\n      sub\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10272:10281   */\n      dup4\n        /* \"#utility.yul\":10268:10285   */\n      add\n        /* \"#utility.yul\":10261:10308   */\n      mstore\n        /* \"#utility.yul\":10325:10456   */\n      tag_251\n        /* \"#utility.yul\":10451:10455   */\n      dup2\n        /* \"#utility.yul\":10325:10456   */\n      tag_141\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10317:10456   */\n      swap1\n      pop\n        /* \"#utility.yul\":10044:10463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10469:10660   */\n    tag_109:\n        /* \"#utility.yul\":10509:10512   */\n      0x00\n        /* \"#utility.yul\":10528:10548   */\n      tag_253\n        /* \"#utility.yul\":10546:10547   */\n      dup3\n        /* \"#utility.yul\":10528:10548   */\n      tag_110\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":10523:10548   */\n      swap2\n      pop\n        /* \"#utility.yul\":10562:10582   */\n      tag_254\n        /* \"#utility.yul\":10580:10581   */\n      dup4\n        /* \"#utility.yul\":10562:10582   */\n      tag_110\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10557:10582   */\n      swap3\n      pop\n        /* \"#utility.yul\":10605:10606   */\n      dup3\n        /* \"#utility.yul\":10602:10603   */\n      dup3\n        /* \"#utility.yul\":10598:10607   */\n      add\n        /* \"#utility.yul\":10591:10607   */\n      swap1\n      pop\n        /* \"#utility.yul\":10626:10629   */\n      dup1\n        /* \"#utility.yul\":10623:10624   */\n      dup3\n        /* \"#utility.yul\":10620:10630   */\n      gt\n        /* \"#utility.yul\":10617:10653   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":10633:10651   */\n      tag_256\n      tag_129\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":10617:10653   */\n    tag_255:\n        /* \"#utility.yul\":10469:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202be73bb372d70173569065fca853de196c5144f5ca43c323435ce36c27277e9d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000ec938038062000ec98339818101604052810190610034919061011f565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b60008060408385031215610136576101356100bc565b5b60006101448582860161010a565b92505060206101558582860161010a565b9150509250929050565b610d5a806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638b0e9f3f1161008c578063cb82cc8f11610066578063cb82cc8f1461021b578063d1af0c7d14610237578063d3aceae214610255578063f6be71d114610285576100ea565b80638b0e9f3f146101c1578063ad2e8c9b146101df578063b69ef8a8146101fd576100ea565b8063725cedd3116100c8578063725cedd31461014957806372f702f31461016757806374958e35146101855780637519ab50146101a3576100ea565b80630fb5a6b4146100ef5780632c4e722e1461010d57806367d3b4881461012b575b600080fd5b6100f76102a1565b604051610104919061077e565b60405180910390f35b6101156102a7565b604051610122919061077e565b60405180910390f35b6101336102ad565b604051610140919061077e565b60405180910390f35b6101516102b3565b60405161015e919061077e565b60405180910390f35b61016f6103ac565b60405161017c9190610818565b60405180910390f35b61018d6103d0565b60405161019a919061077e565b60405180910390f35b6101ab6103d6565b6040516101b8919061077e565b60405180910390f35b6101c96103dc565b6040516101d6919061077e565b60405180910390f35b6101e76103e2565b6040516101f4919061077e565b60405180910390f35b6102056103ec565b604051610212919061077e565b60405180910390f35b61023560048036038101906102309190610864565b610433565b005b61023f6106a1565b60405161024c9190610818565b60405180910390f35b61026f600480360381019061026a91906108cf565b6106c7565b60405161027c919061077e565b60405180910390f35b61029f600480360381019061029a9190610864565b6106df565b005b60045481565b60075481565b60055481565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90610959565b60405180910390fd5b6006544261034491906109a8565b60646007546103539190610a0b565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461039d9190610a3c565b6103a79190610a3c565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60065481565b60025481565b6000600454905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161048d9190610a8d565b602060405180830381865afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190610abd565b101561050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610b36565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161056c93929190610b56565b6020604051808303816000875af115801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610bc5565b6105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590610c3e565b60405180910390fd5b61064081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461074f90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106988160025461074f90919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b4260055410610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a90610cd0565b60405180910390fd5b8060048190555061073f8160055461074f90919063ffffffff16565b6005819055504260068190555050565b6000818361075d9190610cf0565b905092915050565b6000819050919050565b61077881610765565b82525050565b6000602082019050610793600083018461076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107de6107d96107d484610799565b6107b9565b610799565b9050919050565b60006107f0826107c3565b9050919050565b6000610802826107e5565b9050919050565b610812816107f7565b82525050565b600060208201905061082d6000830184610809565b92915050565b600080fd5b61084181610765565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610833565b5b60006108888482850161084f565b91505092915050565b600061089c82610799565b9050919050565b6108ac81610891565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e4610833565b5b60006108f3848285016108ba565b91505092915050565b600082825260208201905092915050565b7f596f752068617665206e6f74207374616b656420616e7920746f6b656e730000600082015250565b6000610943601e836108fc565b915061094e8261090d565b602082019050919050565b6000602082019050818103600083015261097281610936565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b382610765565b91506109be83610765565b92508282039050818111156109d6576109d5610979565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a1682610765565b9150610a2183610765565b925082610a3157610a306109dc565b5b828204905092915050565b6000610a4782610765565b9150610a5283610765565b9250828202610a6081610765565b91508282048414831517610a7757610a76610979565b5b5092915050565b610a8781610891565b82525050565b6000602082019050610aa26000830184610a7e565b92915050565b600081519050610ab781610838565b92915050565b600060208284031215610ad357610ad2610833565b5b6000610ae184828501610aa8565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610b20601b836108fc565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b6000606082019050610b6b6000830186610a7e565b610b786020830185610a7e565b610b85604083018461076f565b949350505050565b60008115159050919050565b610ba281610b8d565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b600060208284031215610bdb57610bda610833565b5b6000610be984828501610bb0565b91505092915050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b6000610c286015836108fc565b9150610c3382610bf2565b602082019050919050565b60006020820190508181036000830152610c5781610c1b565b9050919050565b7f63616e277420736574206461746520746f20612070726576696f75732074696d60008201527f657374616d700000000000000000000000000000000000000000000000000000602082015250565b6000610cba6026836108fc565b9150610cc582610c5e565b604082019050919050565b60006020820190508181036000830152610ce981610cad565b9050919050565b6000610cfb82610765565b9150610d0683610765565b9250828201905080821115610d1e57610d1d610979565b5b9291505056fea26469706673582212202be73bb372d70173569065fca853de196c5144f5ca43c323435ce36c27277e9d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEC9 CODESIZE SUB DUP1 PUSH3 0xEC9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x34 SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x15F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC DUP3 PUSH2 0xC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC DUP2 PUSH2 0xE1 JUMP JUMPDEST DUP2 EQ PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x119 DUP2 PUSH2 0xF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136 JUMPI PUSH2 0x135 PUSH2 0xBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x144 DUP6 DUP3 DUP7 ADD PUSH2 0x10A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155 DUP6 DUP3 DUP7 ADD PUSH2 0x10A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5A DUP1 PUSH3 0x16F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCB82CC8F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x285 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x1FD JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x725CEDD3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x725CEDD3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x74958E35 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1A3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST LT ISZERO PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x640 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x698 DUP2 PUSH1 0x2 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x73F DUP2 PUSH1 0x5 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x75D SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH2 0x7D9 PUSH2 0x7D4 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 DUP3 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x841 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x85E DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89C DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0x891 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F3 DUP5 DUP3 DUP6 ADD PUSH2 0x8BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x1E DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x972 DUP2 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BE DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x979 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA16 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA47 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xA52 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA60 DUP2 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x979 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA87 DUP2 PUSH2 0x891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAB7 DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP5 DUP3 DUP6 ADD PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x1B DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB6B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xB78 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xB85 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA2 DUP2 PUSH2 0xB8D JUMP JUMPDEST DUP2 EQ PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBF DUP2 PUSH2 0xB99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDA PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP5 DUP3 DUP6 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 PUSH1 0x15 DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC57 DUP2 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA PUSH1 0x26 DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE9 DUP2 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xD06 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0x979 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE7 EXTCODESIZE 0xB3 PUSH19 0xD70173569065FCA853DE196C5144F5CA43C323 NUMBER 0x5C 0xE3 PUSH13 0x27277E9D64736F6C6343000812 STOP CALLER ",
							"sourceMap": "617:1814:0:-:0;;;1055:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1142:11;1120:12;;:34;;;;;;;;;;;;;;;;;;1186:13;1164:12;;:36;;;;;;;;;;;;;;;;;;1055:152;;617:1814;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;617:1814:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_62": {
									"entryPoint": 1735,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_469": {
									"entryPoint": 1871,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balance_144": {
									"entryPoint": 1004,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateReward_214": {
									"entryPoint": 691,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositStake_133": {
									"entryPoint": 1075,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@duration_52": {
									"entryPoint": 673,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finishAt_54": {
									"entryPoint": 685,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDuration_182": {
									"entryPoint": 994,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_58": {
									"entryPoint": 679,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_46": {
									"entryPoint": 1697,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDuration_174": {
									"entryPoint": 1759,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_43": {
									"entryPoint": 940,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewardsPaid_50": {
									"entryPoint": 976,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_48": {
									"entryPoint": 988,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatedAt_56": {
									"entryPoint": 982,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$293_to_t_address_fromStack": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$293__to_t_address__fromStack_reversed": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$293_to_t_address": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10663:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:3",
														"type": ""
													}
												],
												"src": "442:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "616:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "623:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "592:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "602:3:3",
														"type": ""
													}
												],
												"src": "574:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "710:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "723:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "690:9:3",
														"type": ""
													}
												],
												"src": "640:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "828:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "838:9:3",
														"type": ""
													}
												],
												"src": "788:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1004:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$293_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "974:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "984:9:3",
														"type": ""
													}
												],
												"src": "920:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1145:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$293_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$293_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1133:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1140:3:3",
														"type": ""
													}
												],
												"src": "1066:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$293_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$293__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1327:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1338:4:3",
														"type": ""
													}
												],
												"src": "1231:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1537:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1520:6:3",
														"type": ""
													}
												],
												"src": "1487:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1914:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1926:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1916:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1905:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1887:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1887:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1877:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:43:3"
															},
															"nodeType": "YulIf",
															"src": "1867:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1850:5:3",
														"type": ""
													}
												],
												"src": "1814:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2013:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2042:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1972:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1980:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1988:5:3",
														"type": ""
													}
												],
												"src": "1942:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2201:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:3"
															},
															"nodeType": "YulIf",
															"src": "2163:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2292:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2311:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2336:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2371:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2382:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2391:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2346:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2336:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2123:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2134:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2146:6:3",
														"type": ""
													}
												],
												"src": "2087:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2477:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2449:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2459:7:3",
														"type": ""
													}
												],
												"src": "2422:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:3"
															},
															"nodeType": "YulIf",
															"src": "2577:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:3",
														"type": ""
													}
												],
												"src": "2524:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:3",
														"type": ""
													}
												],
												"src": "2652:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:32:3"
															},
															"nodeType": "YulIf",
															"src": "2873:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3002:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2844:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:3",
														"type": ""
													}
												],
												"src": "2797:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3266:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3216:11:3",
														"type": ""
													}
												],
												"src": "3132:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:14:3"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3447:32:3",
																		"type": "",
																		"value": "You have not staked any tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:56:3"
														}
													]
												},
												"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3405:6:3",
														"type": ""
													}
												],
												"src": "3307:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3639:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3649:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3720:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3656:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																	"nodeType": "YulIdentifier",
																	"src": "3732:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3834:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3845:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3834:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3627:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3635:3:3",
														"type": ""
													}
												],
												"src": "3493:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4058:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4069:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4054:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4046:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4093:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4089:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4112:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4118:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4108:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4082:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4138:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4272:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4146:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4146:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4138:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4016:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4031:4:3",
														"type": ""
													}
												],
												"src": "3865:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4318:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4338:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4328:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4290:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4521:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4531:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4554:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4536:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4531:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4565:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4570:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4565:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4599:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4611:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4614:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4599:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4641:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4643:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4643:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4643:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4632:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4638:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4629:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:11:3"
															},
															"nodeType": "YulIf",
															"src": "4626:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4507:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4510:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4516:4:3",
														"type": ""
													}
												],
												"src": "4476:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4721:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4835:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4835:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4676:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4904:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4914:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4937:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4919:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4919:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4914:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4948:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4971:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4953:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4948:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4995:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4997:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4997:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4997:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4992:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:9:3"
															},
															"nodeType": "YulIf",
															"src": "4982:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5039:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5027:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4893:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4896:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4902:1:3",
														"type": ""
													}
												],
												"src": "4862:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5101:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5111:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5134:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5116:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5111:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5145:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5168:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5150:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5145:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5179:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5202:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5205:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5183:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5216:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5245:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5227:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5216:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5434:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5436:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5436:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5436:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5367:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5360:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5360:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5390:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5397:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5406:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5393:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5393:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5387:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5387:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5340:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5340:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:113:3"
															},
															"nodeType": "YulIf",
															"src": "5317:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5084:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5087:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5093:7:3",
														"type": ""
													}
												],
												"src": "5053:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5534:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5551:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5574:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5556:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5556:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5544:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5522:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5529:3:3",
														"type": ""
													}
												],
												"src": "5469:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5691:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5701:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5713:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5724:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5709:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5701:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5781:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5737:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5663:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5686:4:3",
														"type": ""
													}
												],
												"src": "5593:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5884:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5894:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5909:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5894:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5952:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5925:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5862:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5870:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5878:5:3",
														"type": ""
													}
												],
												"src": "5821:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6047:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6093:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6095:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6095:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6095:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6077:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6060:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:32:3"
															},
															"nodeType": "YulIf",
															"src": "6057:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6186:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6201:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6205:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6230:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6276:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6287:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6272:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6296:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6240:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6230:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6017:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6028:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6040:6:3",
														"type": ""
													}
												],
												"src": "5970:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6433:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6455:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6463:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:14:3"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6467:29:3",
																		"type": "",
																		"value": "Not enough tokens for stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6425:6:3",
														"type": ""
													}
												],
												"src": "6327:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6656:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6666:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6732:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6673:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6838:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																	"nodeType": "YulIdentifier",
																	"src": "6749:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6749:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6749:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6851:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6862:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6851:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6644:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6652:3:3",
														"type": ""
													}
												],
												"src": "6510:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7053:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7063:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7075:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7086:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7071:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7063:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7110:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7121:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7106:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7106:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7129:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7135:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7125:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7099:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7099:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7099:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7155:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7289:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7163:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7155:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7033:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7048:4:3",
														"type": ""
													}
												],
												"src": "6882:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7471:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7483:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7494:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7479:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7471:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7551:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7575:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7507:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7507:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7507:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7632:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7645:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7656:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7641:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7641:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7588:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7588:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7714:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7670:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7417:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7429:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7437:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7445:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7456:4:3",
														"type": ""
													}
												],
												"src": "7307:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7797:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7807:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7832:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7825:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7825:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7818:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7807:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7779:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7789:7:3",
														"type": ""
													}
												],
												"src": "7755:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7891:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7945:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7954:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7957:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7947:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7947:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7947:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7914:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7936:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7921:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7921:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7911:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7911:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7904:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:40:3"
															},
															"nodeType": "YulIf",
															"src": "7901:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7884:5:3",
														"type": ""
													}
												],
												"src": "7851:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8033:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8043:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8058:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8052:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8052:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8043:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8098:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8074:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8074:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8011:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8019:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8027:5:3",
														"type": ""
													}
												],
												"src": "7973:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8190:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8236:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8238:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8238:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8238:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8211:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8207:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8203:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8203:32:3"
															},
															"nodeType": "YulIf",
															"src": "8200:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "8329:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8344:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8348:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8373:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8416:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8427:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8412:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8412:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8436:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8383:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8383:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8373:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8160:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8171:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8183:6:3",
														"type": ""
													}
												],
												"src": "8116:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8573:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8595:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8603:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8591:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8591:14:3"
																	},
																	{
																		"hexValue": "4661696c656420746f207374616b6520746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8607:23:3",
																		"type": "",
																		"value": "Failed to stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8584:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8565:6:3",
														"type": ""
													}
												],
												"src": "8467:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8790:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8800:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8866:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8871:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8807:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8972:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																	"nodeType": "YulIdentifier",
																	"src": "8883:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8883:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8985:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8996:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9001:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8992:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8992:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8985:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8778:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8786:3:3",
														"type": ""
													}
												],
												"src": "8644:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9187:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9197:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9209:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9220:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9205:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9197:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9244:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9255:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9240:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9240:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9263:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9259:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9259:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9233:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9233:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9233:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9289:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9423:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9297:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9289:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9167:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9182:4:3",
														"type": ""
													}
												],
												"src": "9016:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9547:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9569:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9565:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9565:14:3"
																	},
																	{
																		"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9581:34:3",
																		"type": "",
																		"value": "can't set date to a previous tim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9558:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9637:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9645:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9633:15:3"
																	},
																	{
																		"hexValue": "657374616d70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9650:8:3",
																		"type": "",
																		"value": "estamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9626:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:3",
														"type": ""
													}
												],
												"src": "9441:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9818:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9828:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9894:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9899:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9835:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9828:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10000:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																	"nodeType": "YulIdentifier",
																	"src": "9911:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9911:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10013:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10024:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10029:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10020:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10020:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9806:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9814:3:3",
														"type": ""
													}
												],
												"src": "9672:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10215:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10225:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10237:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10248:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10233:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10225:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10272:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10283:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10268:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10291:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10297:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10287:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10261:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10261:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10317:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10451:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10325:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10325:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10317:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10195:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10210:4:3",
														"type": ""
													}
												],
												"src": "10044:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10513:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10523:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10546:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10528:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10523:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10557:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10580:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10562:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10557:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10591:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10602:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10605:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10598:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10591:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10631:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10633:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10633:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10633:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10623:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10626:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10620:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10620:10:3"
															},
															"nodeType": "YulIf",
															"src": "10617:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10500:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10503:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10509:3:3",
														"type": ""
													}
												],
												"src": "10469:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$293_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$293_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$293_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$293__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$293_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not staked any tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens for stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't set date to a previous tim\")\n\n        mstore(add(memPtr, 32), \"estamp\")\n\n    }\n\n    function abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638b0e9f3f1161008c578063cb82cc8f11610066578063cb82cc8f1461021b578063d1af0c7d14610237578063d3aceae214610255578063f6be71d114610285576100ea565b80638b0e9f3f146101c1578063ad2e8c9b146101df578063b69ef8a8146101fd576100ea565b8063725cedd3116100c8578063725cedd31461014957806372f702f31461016757806374958e35146101855780637519ab50146101a3576100ea565b80630fb5a6b4146100ef5780632c4e722e1461010d57806367d3b4881461012b575b600080fd5b6100f76102a1565b604051610104919061077e565b60405180910390f35b6101156102a7565b604051610122919061077e565b60405180910390f35b6101336102ad565b604051610140919061077e565b60405180910390f35b6101516102b3565b60405161015e919061077e565b60405180910390f35b61016f6103ac565b60405161017c9190610818565b60405180910390f35b61018d6103d0565b60405161019a919061077e565b60405180910390f35b6101ab6103d6565b6040516101b8919061077e565b60405180910390f35b6101c96103dc565b6040516101d6919061077e565b60405180910390f35b6101e76103e2565b6040516101f4919061077e565b60405180910390f35b6102056103ec565b604051610212919061077e565b60405180910390f35b61023560048036038101906102309190610864565b610433565b005b61023f6106a1565b60405161024c9190610818565b60405180910390f35b61026f600480360381019061026a91906108cf565b6106c7565b60405161027c919061077e565b60405180910390f35b61029f600480360381019061029a9190610864565b6106df565b005b60045481565b60075481565b60055481565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d90610959565b60405180910390fd5b6006544261034491906109a8565b60646007546103539190610a0b565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461039d9190610a3c565b6103a79190610a3c565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60065481565b60025481565b6000600454905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161048d9190610a8d565b602060405180830381865afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190610abd565b101561050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610b36565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161056c93929190610b56565b6020604051808303816000875af115801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610bc5565b6105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590610c3e565b60405180910390fd5b61064081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461074f90919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106988160025461074f90919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b4260055410610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a90610cd0565b60405180910390fd5b8060048190555061073f8160055461074f90919063ffffffff16565b6005819055504260068190555050565b6000818361075d9190610cf0565b905092915050565b6000819050919050565b61077881610765565b82525050565b6000602082019050610793600083018461076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107de6107d96107d484610799565b6107b9565b610799565b9050919050565b60006107f0826107c3565b9050919050565b6000610802826107e5565b9050919050565b610812816107f7565b82525050565b600060208201905061082d6000830184610809565b92915050565b600080fd5b61084181610765565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610833565b5b60006108888482850161084f565b91505092915050565b600061089c82610799565b9050919050565b6108ac81610891565b81146108b757600080fd5b50565b6000813590506108c9816108a3565b92915050565b6000602082840312156108e5576108e4610833565b5b60006108f3848285016108ba565b91505092915050565b600082825260208201905092915050565b7f596f752068617665206e6f74207374616b656420616e7920746f6b656e730000600082015250565b6000610943601e836108fc565b915061094e8261090d565b602082019050919050565b6000602082019050818103600083015261097281610936565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b382610765565b91506109be83610765565b92508282039050818111156109d6576109d5610979565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a1682610765565b9150610a2183610765565b925082610a3157610a306109dc565b5b828204905092915050565b6000610a4782610765565b9150610a5283610765565b9250828202610a6081610765565b91508282048414831517610a7757610a76610979565b5b5092915050565b610a8781610891565b82525050565b6000602082019050610aa26000830184610a7e565b92915050565b600081519050610ab781610838565b92915050565b600060208284031215610ad357610ad2610833565b5b6000610ae184828501610aa8565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610b20601b836108fc565b9150610b2b82610aea565b602082019050919050565b60006020820190508181036000830152610b4f81610b13565b9050919050565b6000606082019050610b6b6000830186610a7e565b610b786020830185610a7e565b610b85604083018461076f565b949350505050565b60008115159050919050565b610ba281610b8d565b8114610bad57600080fd5b50565b600081519050610bbf81610b99565b92915050565b600060208284031215610bdb57610bda610833565b5b6000610be984828501610bb0565b91505092915050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b6000610c286015836108fc565b9150610c3382610bf2565b602082019050919050565b60006020820190508181036000830152610c5781610c1b565b9050919050565b7f63616e277420736574206461746520746f20612070726576696f75732074696d60008201527f657374616d700000000000000000000000000000000000000000000000000000602082015250565b6000610cba6026836108fc565b9150610cc582610c5e565b604082019050919050565b60006020820190508181036000830152610ce981610cad565b9050919050565b6000610cfb82610765565b9150610d0683610765565b9250828201905080821115610d1e57610d1d610979565b5b9291505056fea26469706673582212202be73bb372d70173569065fca853de196c5144f5ca43c323435ce36c27277e9d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0E9F3F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCB82CC8F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x285 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x1FD JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x725CEDD3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x725CEDD3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x74958E35 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1A3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST LT ISZERO PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x640 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x698 DUP2 PUSH1 0x2 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x73F DUP2 PUSH1 0x5 SLOAD PUSH2 0x74F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x75D SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x793 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH2 0x7D9 PUSH2 0x7D4 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 DUP3 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x841 DUP2 PUSH2 0x765 JUMP JUMPDEST DUP2 EQ PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x85E DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89C DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0x891 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F3 DUP5 DUP3 DUP6 ADD PUSH2 0x8BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x943 PUSH1 0x1E DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0x94E DUP3 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x972 DUP2 PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BE DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x979 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA16 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA47 DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xA52 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA60 DUP2 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA77 JUMPI PUSH2 0xA76 PUSH2 0x979 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA87 DUP2 PUSH2 0x891 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAB7 DUP2 PUSH2 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP5 DUP3 DUP6 ADD PUSH2 0xAA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 PUSH1 0x1B DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB4F DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB6B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xB78 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xB85 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x76F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA2 DUP2 PUSH2 0xB8D JUMP JUMPDEST DUP2 EQ PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBBF DUP2 PUSH2 0xB99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDA PUSH2 0x833 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP5 DUP3 DUP6 ADD PUSH2 0xBB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 PUSH1 0x15 DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC57 DUP2 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA PUSH1 0x26 DUP4 PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE9 DUP2 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCFB DUP3 PUSH2 0x765 JUMP JUMPDEST SWAP2 POP PUSH2 0xD06 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0x979 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE7 EXTCODESIZE 0xB3 PUSH19 0xD70173569065FCA853DE196C5144F5CA43C323 NUMBER 0x5C 0xE3 PUSH13 0x27277E9D64736F6C6343000812 STOP CALLER ",
							"sourceMap": "617:1814:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;930:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2197:225;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;902:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1938:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1578:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1213:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;966:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1678:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;832:20;;;;:::o;930:16::-;;;;:::o;876:20::-;;;;:::o;2197:225::-;2246:7;2295:1;2272:8;:20;2281:10;2272:20;;;;;;;;;;;;;;;;:24;2264:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2404:9;;2386:15;:27;;;;:::i;:::-;2378:3;2373:4;;:8;;;;:::i;:::-;2349;:20;2358:10;2349:20;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:66;;;;:::i;:::-;2342:73;;2197:225;:::o;700:26::-;;;;;;;;;;;;:::o;793:28::-;;;;:::o;902:21::-;;;;:::o;765:22::-;;;;:::o;1938:85::-;1983:7;2008:8;;2001:15;;1938:85;:::o;1578:94::-;1620:7;1645:8;:20;1654:10;1645:20;;;;;;;;;;;;;;;;1638:27;;1578:94;:::o;1213:360::-;1314:6;1276:12;;;;;;;;;;:22;;;1299:10;1276:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;1268:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1370:12;;;;;;;;;;:25;;;1396:10;1416:4;1423:6;1370:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1489:32;1514:6;1489:8;:20;1498:10;1489:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1466:8;:20;1475:10;1466:20;;;;;;;;;;;;;;;:55;;;;1544:22;1559:6;1544:10;;:14;;:22;;;;:::i;:::-;1531:10;:35;;;;1213:360;:::o;732:26::-;;;;;;;;;;;;;:::o;966:41::-;;;;;;;;;;;;;;;;;:::o;1678:254::-;1755:15;1744:8;;:26;1736:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1835:9;1824:8;:20;;;;1865:23;1878:9;1865:8;;:12;;:23;;;;:::i;:::-;1854:8;:34;;;;1910:15;1898:9;:27;;;;1678:254;:::o;2755:96:2:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:122;1887:24;1905:5;1887:24;:::i;:::-;1880:5;1877:35;1867:63;;1926:1;1923;1916:12;1867:63;1814:122;:::o;1942:139::-;1988:5;2026:6;2013:20;2004:29;;2042:33;2069:5;2042:33;:::i;:::-;1942:139;;;;:::o;2087:329::-;2146:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:119;;;2201:79;;:::i;:::-;2163:119;2321:1;2346:53;2391:7;2382:6;2371:9;2367:22;2346:53;:::i;:::-;2336:63;;2292:117;2087:329;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:169::-;3216:11;3250:6;3245:3;3238:19;3290:4;3285:3;3281:14;3266:29;;3132:169;;;;:::o;3307:180::-;3447:32;3443:1;3435:6;3431:14;3424:56;3307:180;:::o;3493:366::-;3635:3;3656:67;3720:2;3715:3;3656:67;:::i;:::-;3649:74;;3732:93;3821:3;3732:93;:::i;:::-;3850:2;3845:3;3841:12;3834:19;;3493:366;;;:::o;3865:419::-;4031:4;4069:2;4058:9;4054:18;4046:26;;4118:9;4112:4;4108:20;4104:1;4093:9;4089:17;4082:47;4146:131;4272:4;4146:131;:::i;:::-;4138:139;;3865:419;;;:::o;4290:180::-;4338:77;4335:1;4328:88;4435:4;4432:1;4425:15;4459:4;4456:1;4449:15;4476:194;4516:4;4536:20;4554:1;4536:20;:::i;:::-;4531:25;;4570:20;4588:1;4570:20;:::i;:::-;4565:25;;4614:1;4611;4607:9;4599:17;;4638:1;4632:4;4629:11;4626:37;;;4643:18;;:::i;:::-;4626:37;4476:194;;;;:::o;4676:180::-;4724:77;4721:1;4714:88;4821:4;4818:1;4811:15;4845:4;4842:1;4835:15;4862:185;4902:1;4919:20;4937:1;4919:20;:::i;:::-;4914:25;;4953:20;4971:1;4953:20;:::i;:::-;4948:25;;4992:1;4982:35;;4997:18;;:::i;:::-;4982:35;5039:1;5036;5032:9;5027:14;;4862:185;;;;:::o;5053:410::-;5093:7;5116:20;5134:1;5116:20;:::i;:::-;5111:25;;5150:20;5168:1;5150:20;:::i;:::-;5145:25;;5205:1;5202;5198:9;5227:30;5245:11;5227:30;:::i;:::-;5216:41;;5406:1;5397:7;5393:15;5390:1;5387:22;5367:1;5360:9;5340:83;5317:139;;5436:18;;:::i;:::-;5317:139;5101:362;5053:410;;;;:::o;5469:118::-;5556:24;5574:5;5556:24;:::i;:::-;5551:3;5544:37;5469:118;;:::o;5593:222::-;5686:4;5724:2;5713:9;5709:18;5701:26;;5737:71;5805:1;5794:9;5790:17;5781:6;5737:71;:::i;:::-;5593:222;;;;:::o;5821:143::-;5878:5;5909:6;5903:13;5894:22;;5925:33;5952:5;5925:33;:::i;:::-;5821:143;;;;:::o;5970:351::-;6040:6;6089:2;6077:9;6068:7;6064:23;6060:32;6057:119;;;6095:79;;:::i;:::-;6057:119;6215:1;6240:64;6296:7;6287:6;6276:9;6272:22;6240:64;:::i;:::-;6230:74;;6186:128;5970:351;;;;:::o;6327:177::-;6467:29;6463:1;6455:6;6451:14;6444:53;6327:177;:::o;6510:366::-;6652:3;6673:67;6737:2;6732:3;6673:67;:::i;:::-;6666:74;;6749:93;6838:3;6749:93;:::i;:::-;6867:2;6862:3;6858:12;6851:19;;6510:366;;;:::o;6882:419::-;7048:4;7086:2;7075:9;7071:18;7063:26;;7135:9;7129:4;7125:20;7121:1;7110:9;7106:17;7099:47;7163:131;7289:4;7163:131;:::i;:::-;7155:139;;6882:419;;;:::o;7307:442::-;7456:4;7494:2;7483:9;7479:18;7471:26;;7507:71;7575:1;7564:9;7560:17;7551:6;7507:71;:::i;:::-;7588:72;7656:2;7645:9;7641:18;7632:6;7588:72;:::i;:::-;7670;7738:2;7727:9;7723:18;7714:6;7670:72;:::i;:::-;7307:442;;;;;;:::o;7755:90::-;7789:7;7832:5;7825:13;7818:21;7807:32;;7755:90;;;:::o;7851:116::-;7921:21;7936:5;7921:21;:::i;:::-;7914:5;7911:32;7901:60;;7957:1;7954;7947:12;7901:60;7851:116;:::o;7973:137::-;8027:5;8058:6;8052:13;8043:22;;8074:30;8098:5;8074:30;:::i;:::-;7973:137;;;;:::o;8116:345::-;8183:6;8232:2;8220:9;8211:7;8207:23;8203:32;8200:119;;;8238:79;;:::i;:::-;8200:119;8358:1;8383:61;8436:7;8427:6;8416:9;8412:22;8383:61;:::i;:::-;8373:71;;8329:125;8116:345;;;;:::o;8467:171::-;8607:23;8603:1;8595:6;8591:14;8584:47;8467:171;:::o;8644:366::-;8786:3;8807:67;8871:2;8866:3;8807:67;:::i;:::-;8800:74;;8883:93;8972:3;8883:93;:::i;:::-;9001:2;8996:3;8992:12;8985:19;;8644:366;;;:::o;9016:419::-;9182:4;9220:2;9209:9;9205:18;9197:26;;9269:9;9263:4;9259:20;9255:1;9244:9;9240:17;9233:47;9297:131;9423:4;9297:131;:::i;:::-;9289:139;;9016:419;;;:::o;9441:225::-;9581:34;9577:1;9569:6;9565:14;9558:58;9650:8;9645:2;9637:6;9633:15;9626:33;9441:225;:::o;9672:366::-;9814:3;9835:67;9899:2;9894:3;9835:67;:::i;:::-;9828:74;;9911:93;10000:3;9911:93;:::i;:::-;10029:2;10024:3;10020:12;10013:19;;9672:366;;;:::o;10044:419::-;10210:4;10248:2;10237:9;10233:18;10225:26;;10297:9;10291:4;10287:20;10283:1;10272:9;10268:17;10261:47;10325:131;10451:4;10325:131;:::i;:::-;10317:139;;10044:419;;;:::o;10469:191::-;10509:3;10528:20;10546:1;10528:20;:::i;:::-;10523:25;;10562:20;10580:1;10562:20;:::i;:::-;10557:25;;10605:1;10602;10598:9;10591:16;;10626:3;10623:1;10620:10;10617:36;;;10633:18;;:::i;:::-;10617:36;10469:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "683600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2880",
								"balance()": "2593",
								"calculateReward()": "infinite",
								"depositStake(uint256)": "infinite",
								"duration()": "2453",
								"finishAt()": "2497",
								"getDuration()": "2482",
								"rate()": "2475",
								"rewardsToken()": "infinite",
								"setDuration(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalRewardsPaid()": "2496",
								"totalStake()": "2452",
								"updatedAt()": "2518"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1055,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1142,
									"end": 1153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1132,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1186,
									"end": 1199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1176,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1164,
									"end": 1176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1164,
									"end": 1200,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1207,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2431,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202be73bb372d70173569065fca853de196c5144f5ca43c323435ce36c27277e9d64736f6c63430008120033",
									".code": [
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "D3ACEAE2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "F6BE71D1"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "AD2E8C9B"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "725CEDD3"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "725CEDD3"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "74958E35"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "7519AB50"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "67D3B488"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2431,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 930,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 930,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 876,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 876,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2197,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2197,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 902,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 902,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1938,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1938,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1578,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1578,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1213,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1213,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 966,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 966,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 966,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1678,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1678,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 832,
											"end": 852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 832,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 930,
											"end": 946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 876,
											"end": 896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 876,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2264,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2264,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2401,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2386,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2386,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2381,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2373,
											"end": 2381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2368,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 902,
											"end": 923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1298,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1276,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1276,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1276,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1268,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1370,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1370,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1370,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1362,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1362,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1485,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1521,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1554,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1544,
											"end": 1554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1752,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1744,
											"end": 1752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1736,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1736,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1878,
											"end": 1887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1865,
											"end": 1873,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1887,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1912,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1814,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2042,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2201,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2346,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3479,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F74207374616B656420616E7920746F6B656E730000"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3720,
											"end": 3722,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3656,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3656,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3732,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3732,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4146,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4146,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4138,
											"end": 4277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 4284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4290,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4415,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4416,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4439,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4425,
											"end": 4440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4456,
											"end": 4457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4536,
											"end": 4556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4536,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4570,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4616,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4643,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4643,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4626,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4856,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4676,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4801,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4849,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4850,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4919,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4919,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4953,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4997,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4982,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 5047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5116,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5116,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5168,
											"end": 5169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5150,
											"end": 5170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5245,
											"end": 5256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5227,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5227,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5409,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5423,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5436,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5317,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5053,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5587,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5469,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5574,
											"end": 5579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5556,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5805,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5737,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5808,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5737,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5903,
											"end": 5916,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5952,
											"end": 5957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5925,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6086,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6064,
											"end": 6087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6060,
											"end": 6092,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6176,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6057,
											"end": 6176,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6095,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6095,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6095,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6095,
											"end": 6174,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6095,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6176,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6057,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6293,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 6240,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6304,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6240,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6186,
											"end": 6314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6504,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6327,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6467,
											"end": 6496,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000"
										},
										{
											"begin": 6463,
											"end": 6464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6461,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6451,
											"end": 6465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6444,
											"end": 6497,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6876,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6510,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6673,
											"end": 6740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6740,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6673,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6666,
											"end": 6740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6666,
											"end": 6740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6838,
											"end": 6841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6749,
											"end": 6842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6842,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6749,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 6870,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6851,
											"end": 6870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6851,
											"end": 6870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 7301,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6882,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7088,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7125,
											"end": 7145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7119,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7123,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7099,
											"end": 7146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7289,
											"end": 7293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7163,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7294,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7163,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 7301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 7301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 7301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6882,
											"end": 7301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7456,
											"end": 7460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7496,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7483,
											"end": 7492,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7471,
											"end": 7497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7471,
											"end": 7497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7507,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7557,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7507,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7507,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7507,
											"end": 7578,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7507,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7588,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7656,
											"end": 7658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7588,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7588,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7588,
											"end": 7660,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7588,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7670,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7742,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7670,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7845,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7755,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7832,
											"end": 7837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 7838,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7807,
											"end": 7839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7845,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7967,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7851,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7936,
											"end": 7941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7921,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7943,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7901,
											"end": 7961,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7955,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7947,
											"end": 7959,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7901,
											"end": 7961,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7901,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8065,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8098,
											"end": 8103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8074,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 8110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8234,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8207,
											"end": 8230,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8203,
											"end": 8235,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 8238,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8238,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 8200,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8436,
											"end": 8443,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8427,
											"end": 8433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8416,
											"end": 8425,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8383,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8383,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8383,
											"end": 8444,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8383,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8467,
											"end": 8638,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 8467,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8607,
											"end": 8630,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F207374616B6520746F6B656E0000000000000000000000"
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8584,
											"end": 8631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8467,
											"end": 8638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8467,
											"end": 8638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 9010,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 8644,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 8807,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8874,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8807,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 8972,
											"end": 8975,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 8883,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 8976,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 8883,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8992,
											"end": 9004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8985,
											"end": 9004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8985,
											"end": 9004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 9010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 9010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 9010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8644,
											"end": 9010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9435,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 9016,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9182,
											"end": 9186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9220,
											"end": 9222,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9209,
											"end": 9218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9269,
											"end": 9278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9263,
											"end": 9267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9244,
											"end": 9253,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9240,
											"end": 9257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9233,
											"end": 9280,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9297,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9297,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9297,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9297,
											"end": 9428,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9297,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9289,
											"end": 9428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9289,
											"end": 9428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9016,
											"end": 9435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9441,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9581,
											"end": 9615,
											"name": "PUSH",
											"source": 3,
											"value": "63616E277420736574206461746520746F20612070726576696F75732074696D"
										},
										{
											"begin": 9577,
											"end": 9578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9565,
											"end": 9579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9616,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9650,
											"end": 9658,
											"name": "PUSH",
											"source": 3,
											"value": "657374616D700000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9645,
											"end": 9647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9633,
											"end": 9648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9626,
											"end": 9659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 10038,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 9672,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9814,
											"end": 9817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9899,
											"end": 9901,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 9894,
											"end": 9897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9835,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 9835,
											"end": 9902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9835,
											"end": 9902,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9835,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9828,
											"end": 9902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9828,
											"end": 9902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10000,
											"end": 10003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 9911,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 10004,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9911,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10029,
											"end": 10031,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 10038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 10038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 10038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 10038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10463,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 10044,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10210,
											"end": 10214,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10237,
											"end": 10246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10233,
											"end": 10251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10225,
											"end": 10251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10225,
											"end": 10251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10297,
											"end": 10306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10291,
											"end": 10295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10287,
											"end": 10307,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10272,
											"end": 10281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10261,
											"end": 10308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10451,
											"end": 10455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 10325,
											"end": 10456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10456,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10325,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10317,
											"end": 10456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10044,
											"end": 10463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10509,
											"end": 10512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 10528,
											"end": 10548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10523,
											"end": 10548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10523,
											"end": 10548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10580,
											"end": 10581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 10562,
											"end": 10582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10605,
											"end": 10606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10598,
											"end": 10607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10626,
											"end": 10629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10630,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10653,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10617,
											"end": 10653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 10633,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10653,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10617,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10469,
											"end": 10660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"balance()": "b69ef8a8",
							"calculateReward()": "725cedd3",
							"depositStake(uint256)": "cb82cc8f",
							"duration()": "0fb5a6b4",
							"finishAt()": "67d3b488",
							"getDuration()": "ad2e8c9b",
							"rate()": "2c4e722e",
							"rewardsToken()": "d1af0c7d",
							"setDuration(uint256)": "f6be71d1",
							"stakingToken()": "72f702f3",
							"totalRewardsPaid()": "74958e35",
							"totalStake()": "8b0e9f3f",
							"updatedAt()": "7519ab50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0xdafb47775d779116b0e7c08e52cc2e1fd3eb26a67eaa03c1a795f31e77b3f751\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3166226e82805ea1990e704101b07b16e552e5094bd7cb953c0038ab0aa969ae\",\"dweb:/ipfs/QmdFkctATANJEY62pcgK33ZK36Zk3RHizg6WN8TxHaNtk7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "contracts/staking.sol:Staking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)293"
							},
							{
								"astId": 46,
								"contract": "contracts/staking.sol:Staking",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)293"
							},
							{
								"astId": 48,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 50,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalRewardsPaid",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/staking.sol:Staking",
								"label": "duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/staking.sol:Staking",
								"label": "finishAt",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "contracts/staking.sol:Staking",
								"label": "updatedAt",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "contracts/staking.sol:Staking",
								"label": "rate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "contracts/staking.sol:Staking",
								"label": "_balance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)293": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"IERC20": [
							293
						],
						"IStake": [
							34
						],
						"SafeMath": [
							605
						],
						"Staking": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "31:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 294,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 606,
							"src": "168:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStake",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "IStake",
							"nameLocation": "290:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb82cc8f",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "311:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 34,
									"src": "302:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25d5971f",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:13:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 34,
									"src": "352:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6be71d1",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "412:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "429:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 34,
									"src": "403:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7e284b8",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeLeft",
									"nameLocation": "463:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:0"
									},
									"scope": 34,
									"src": "454:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "523:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "539:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:13:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:0"
									},
									"scope": 34,
									"src": "514:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "523a3f08",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawReward",
									"nameLocation": "575:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "590:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:13:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 34,
									"src": "566:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "280:335:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "Staking",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 37,
									"libraryName": {
										"id": 35,
										"name": "SafeMath",
										"nameLocations": [
											"645:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 605,
										"src": "645:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "639:27:0",
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 40,
									"libraryName": {
										"id": 38,
										"name": "SafeMath",
										"nameLocations": [
											"677:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 605,
										"src": "677:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "671:24:0",
									"typeName": {
										"id": 39,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "690:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 43,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "714:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "700:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$293",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 42,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 41,
											"name": "IERC20",
											"nameLocations": [
												"700:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 293,
											"src": "700:6:0"
										},
										"referencedDeclaration": 293,
										"src": "700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$293",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 46,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "746:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "732:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$293",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 45,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 44,
											"name": "IERC20",
											"nameLocations": [
												"732:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 293,
											"src": "732:6:0"
										},
										"referencedDeclaration": 293,
										"src": "732:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$293",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 48,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "777:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "765:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "765:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74958e35",
									"id": 50,
									"mutability": "mutable",
									"name": "totalRewardsPaid",
									"nameLocation": "805:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "793:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 52,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "844:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "832:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "832:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 54,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "888:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "876:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7519ab50",
									"id": 56,
									"mutability": "mutable",
									"name": "updatedAt",
									"nameLocation": "914:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "902:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "902:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 58,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "942:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "930:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "930:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 62,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "999:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "966:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 61,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "975:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "966:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 60,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "986:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1110:97:0",
										"statements": [
											{
												"expression": {
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1120:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$293",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 71,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1142:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 70,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1135:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$293_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1135:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$293",
															"typeString": "contract IERC20"
														}
													},
													"src": "1120:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$293",
														"typeString": "contract IERC20"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1120:34:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1164:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$293",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 77,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1186:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 76,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$293_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1179:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$293",
															"typeString": "contract IERC20"
														}
													},
													"src": "1164:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$293",
														"typeString": "contract IERC20"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1164:36:0"
											}
										]
									},
									"id": 82,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "1075:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1067:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1096:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1088:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:44:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:0"
									},
									"scope": 215,
									"src": "1055:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1258:315:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 90,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1299:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1303:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1299:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 88,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "1276:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$293",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1289:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 250,
																	"src": "1276:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1276:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 93,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "1314:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1276:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															},
															"value": "Not enough tokens for stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															}
														],
														"id": 87,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1268:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 101,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1396:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1400:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1396:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 105,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1416:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$215",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$215",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1408:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 103,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1408:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1408:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 107,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "1423:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 99,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "1370:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$293",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1383:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "1370:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1370:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207374616b6520746f6b656e",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1431:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															},
															"value": "Failed to stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1362:93:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 112,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1466:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 115,
														"indexExpression": {
															"expression": {
																"id": 113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1475:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1479:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1475:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1466:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 121,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "1514:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 116,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1489:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 119,
																"indexExpression": {
																	"expression": {
																		"id": 117,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1498:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1502:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1498:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1489:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1510:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 469,
															"src": "1489:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1489:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1466:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1466:55:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1531:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "1559:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 126,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1544:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1555:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 469,
															"src": "1544:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1531:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1531:35:0"
											}
										]
									},
									"functionSelector": "cb82cc8f",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "1222:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1236:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:13:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:0"
									},
									"scope": 215,
									"src": "1213:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1628:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 138,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1645:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 141,
													"indexExpression": {
														"expression": {
															"id": 139,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1654:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1658:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1654:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1645:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 137,
												"id": 142,
												"nodeType": "Return",
												"src": "1638:27:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "1587:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:2:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:9:0"
									},
									"scope": 215,
									"src": "1578:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1726:206:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 150,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1744:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 151,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1761:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1755:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1744:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d657374616d70",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															},
															"value": "can't set date to a previous timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1736:77:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1824:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1835:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1824:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1824:20:0"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 164,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1878:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 162,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1865:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 469,
															"src": "1865:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1865:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1854:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1854:34:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1898:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 169,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1916:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1910:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1898:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1898:27:0"
											}
										]
									},
									"functionSelector": "f6be71d1",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "1687:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1707:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1699:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:19:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:0:0"
									},
									"scope": 215,
									"src": "1678:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1991:32:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2008:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "2001:15:0"
											}
										]
									},
									"functionSelector": "ad2e8c9b",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "1947:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:0"
									},
									"scope": 215,
									"src": "1938:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2254:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 188,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2272:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 191,
																"indexExpression": {
																	"expression": {
																		"id": 189,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2281:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2285:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2281:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2272:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2272:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															},
															"value": "You have not staked any tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2264:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 197,
																"name": "_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2349:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 200,
															"indexExpression": {
																"expression": {
																	"id": 198,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2358:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2362:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2358:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2349:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 201,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "2373:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2378:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2373:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 204,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2372:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2349:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 206,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2386:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2392:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2386:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 208,
																	"name": "updatedAt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2404:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2386:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 210,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2385:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2349:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 186,
												"id": 212,
												"nodeType": "Return",
												"src": "2342:73:0"
											}
										]
									},
									"functionSelector": "725cedd3",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2206:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:9:0"
									},
									"scope": 215,
									"src": "2197:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "617:1814:0",
							"usedErrors": []
						}
					],
					"src": "31:2401:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							293
						]
					},
					"id": 294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 227,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 236,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 293,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 293,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 293,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 293,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 293,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 293,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 294,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							605
						]
					},
					"id": 606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 296,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															309
														],
														"declarations": [
															{
																"constant": false,
																"id": 309,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 326,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 313,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 315,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 321,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 307,
															"id": 320,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 323,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 324,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 307,
														"id": 325,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 605,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 347,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 339,
															"id": 346,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 349,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 350,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 339,
														"id": 353,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 605,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 396,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 375,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 367,
															"id": 374,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															377
														],
														"declarations": [
															{
																"constant": false,
																"id": 377,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 396,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 376,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 381,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 382,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 383,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 385,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 391,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 367,
															"id": 390,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 393,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 394,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 367,
														"id": 395,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 605,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 424,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 417,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 409,
															"id": 416,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 419,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 420,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 409,
														"id": 423,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 605,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 452,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 445,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 437,
															"id": 444,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 448,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 437,
														"id": 451,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 605,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 465,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 463,
												"id": 467,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 605,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 480,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 478,
												"id": 482,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 605,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 493,
												"id": 497,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 605,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 510,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 512,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 605,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 525,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 523,
												"id": 527,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 605,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 552,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 542,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 543,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 545,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 541,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 547,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 548,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 549,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 540,
														"id": 551,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 605,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 577,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 570,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 566,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 574,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 565,
														"id": 576,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 605,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 592,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 595,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 591,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 597,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 599,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 590,
														"id": 601,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 605,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 606,
							"src": "482:6210:2",
							"usedErrors": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			}
		}
	}
}