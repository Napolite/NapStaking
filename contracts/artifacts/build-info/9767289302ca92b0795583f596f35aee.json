{
	"id": "9767289302ca92b0795583f596f35aee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/staking.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.1 ;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ninterface IStake{\n    function depositStake( uint amount) external;\n    function withdrawStake(uint amount) external;\n\n    function setDuration(uint duration) external;\n\n    function getTimeLeft() external view returns(uint256);\n\n    function calculateReward(uint amount) external;\n    function withdrawReward(uint amount) external;\n\n}\n\ncontract Staking{\n    using SafeMath for uint256;\n    using SafeMath for uint;\n    IERC20 public stakingToken;\n    IERC20 public rewardsToken;\n\n    uint public totalStake;\n    uint public totalStakeRewards;\n    \n    uint public duration; // stake duration\n    uint public finishAt;\n    uint public updatedAt;\n\n    uint public rate; //stake rate\n\n    mapping (address => uint) public _balance;\n    mapping (address => uint) private _rewardsWithdrawals;\n\n    //modifiers\n\n\n    // contract methods\n    constructor(address _stakeToken, address _rewardsToken){\n        stakingToken = IERC20(_stakeToken);\n        rewardsToken = IERC20(_rewardsToken);\n    }\n\n    function depositStake (uint amount) external {\n        require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\");\n\n        _balance[msg.sender] = _balance[msg.sender].add(amount);\n        totalStake = totalStake.add(amount);\n    }\n    function balance() external view returns (uint256){\n        return _balance[msg.sender];\n    }\n\n    function setDuration(uint256 _duration) external{\n        require(finishAt < block.timestamp, \"can't set date to a previous timestamp\");\n\n        duration = _duration;\n        finishAt = finishAt.add(_duration);\n        updatedAt = block.timestamp;\n    }\n\n    function getDuration() view external returns(uint256){\n        return duration;\n    }\n\n    function setRewardRate(uint256 _rate) external{\n        require(finishAt < block.timestamp, \"Staking still in progress\");\n\n        rate = _rate;\n    }\n\n    function earned() view public returns(uint256){\n        require(_balance[msg.sender] > 0, \"You have not staked any tokens\");\n\n        return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt );\n    }\n\n    function withdrawReward(uint256 _amount) external{\n        require(earned() > 0, \"You have not earned any rewards\");\n        require(earned() - _rewardsWithdrawals[msg.sender] < _amount, \"You don't have enough to withdraw\");\n        require(rewardsToken.transfer(msg.sender, _amount), \"Failed to transfer tokens\");\n        _rewardsWithdrawals[msg.sender] += _amount;\n    }\n \n    \n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/staking.sol": {
				"IStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTimeLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"depositStake(uint256)": "cb82cc8f",
							"getTimeLeft()": "c7e284b8",
							"setDuration(uint256)": "f6be71d1",
							"withdrawReward(uint256)": "523a3f08",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"IStake\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0x81701a93bd8d7c28c35bc5df2c669a4f0b587b71078096a3158c5a55f2eb72d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5778e380979cf91f5ebecc533d0a1902f4a71de50aecdb6abdcbfd8ca3682b5c\",\"dweb:/ipfs/Qmcq2okvfsvssT2iVJz9sqFJitseDiFbPfj3QVuDMcJcMK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakeRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/staking.sol\":617:2847  contract Staking{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/staking.sol\":1116:1268  constructor(address _stakeToken, address _rewardsToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/staking.sol\":1203:1214  _stakeToken */\n  dup2\n    /* \"contracts/staking.sol\":1181:1193  stakingToken */\n  0x00\n  dup1\n    /* \"contracts/staking.sol\":1181:1215  stakingToken = IERC20(_stakeToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1247:1260  _rewardsToken */\n  dup1\n    /* \"contracts/staking.sol\":1225:1237  rewardsToken */\n  0x01\n  0x00\n    /* \"contracts/staking.sol\":1225:1261  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/staking.sol\":1116:1268  constructor(address _stakeToken, address _rewardsToken){... */\n  pop\n  pop\n    /* \"contracts/staking.sol\":617:2847  contract Staking{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/staking.sol\":617:2847  contract Staking{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/staking.sol\":617:2847  contract Staking{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e447fc6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd3aceae2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd6f19262\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf6be71d1\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x9e447fc6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad2e8c9b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcb82cc8f\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x67d3b488\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7519ab50\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x327bcac5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x523a3f08\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/staking.sol\":833:853  uint public duration */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":931:947  uint public rate */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":793:822  uint public totalStakeRewards */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2466:2838  function withdrawReward(uint256 _amount) external{... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/staking.sol\":877:897  uint public finishAt */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":903:924  uint public updatedAt */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2090:2240  function setRewardRate(uint256 _rate) external{... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/staking.sol\":1999:2084  function getDuration() view external returns(uint256){... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1639:1733  function balance() external view returns (uint256){... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1274:1634  function depositStake (uint amount) external {... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":967:1008  mapping (address => uint) public _balance */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":2246:2460  function earned() view public returns(uint256){... */\n    tag_17:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/staking.sol\":1739:1993  function setDuration(uint256 _duration) external{... */\n    tag_18:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/staking.sol\":833:853  uint public duration */\n    tag_23:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":931:947  uint public rate */\n    tag_27:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":793:822  uint public totalStakeRewards */\n    tag_30:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2466:2838  function withdrawReward(uint256 _amount) external{... */\n    tag_35:\n        /* \"contracts/staking.sol\":2544:2545  0 */\n      0x00\n        /* \"contracts/staking.sol\":2533:2541  earned() */\n      tag_76\n        /* \"contracts/staking.sol\":2533:2539  earned */\n      tag_70\n        /* \"contracts/staking.sol\":2533:2541  earned() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/staking.sol\":2533:2545  earned() > 0 */\n      gt\n        /* \"contracts/staking.sol\":2525:2581  require(earned() > 0, \"You have not earned any rewards\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/staking.sol\":2644:2651  _amount */\n      dup1\n        /* \"contracts/staking.sol\":2610:2629  _rewardsWithdrawals */\n      0x09\n        /* \"contracts/staking.sol\":2610:2641  _rewardsWithdrawals[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2630:2640  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2610:2641  _rewardsWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2599:2607  earned() */\n      tag_80\n        /* \"contracts/staking.sol\":2599:2605  earned */\n      tag_70\n        /* \"contracts/staking.sol\":2599:2607  earned() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/staking.sol\":2599:2641  earned() - _rewardsWithdrawals[msg.sender] */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/staking.sol\":2599:2651  earned() - _rewardsWithdrawals[msg.sender] < _amount */\n      lt\n        /* \"contracts/staking.sol\":2591:2689  require(earned() - _rewardsWithdrawals[msg.sender] < _amount, \"You don't have enough to withdraw\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/staking.sol\":2707:2719  rewardsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":2707:2728  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/staking.sol\":2729:2739  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2741:2748  _amount */\n      dup4\n        /* \"contracts/staking.sol\":2707:2749  rewardsToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/staking.sol\":2699:2779  require(rewardsToken.transfer(msg.sender, _amount), \"Failed to transfer tokens\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/staking.sol\":2824:2831  _amount */\n      dup1\n        /* \"contracts/staking.sol\":2789:2808  _rewardsWithdrawals */\n      0x09\n        /* \"contracts/staking.sol\":2789:2820  _rewardsWithdrawals[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2809:2819  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2789:2820  _rewardsWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/staking.sol\":2789:2831  _rewardsWithdrawals[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2466:2838  function withdrawReward(uint256 _amount) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":877:897  uint public finishAt */\n    tag_37:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":700:726  IERC20 public stakingToken */\n    tag_40:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":903:924  uint public updatedAt */\n    tag_44:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":765:787  uint public totalStake */\n    tag_47:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2090:2240  function setRewardRate(uint256 _rate) external{... */\n    tag_51:\n        /* \"contracts/staking.sol\":2165:2180  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2154:2162  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":2154:2180  finishAt < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":2146:2210  require(finishAt < block.timestamp, \"Staking still in progress\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/staking.sol\":2228:2233  _rate */\n      dup1\n        /* \"contracts/staking.sol\":2221:2225  rate */\n      0x07\n        /* \"contracts/staking.sol\":2221:2233  rate = _rate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":2090:2240  function setRewardRate(uint256 _rate) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":1999:2084  function getDuration() view external returns(uint256){... */\n    tag_53:\n        /* \"contracts/staking.sol\":2044:2051  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2069:2077  duration */\n      sload(0x04)\n        /* \"contracts/staking.sol\":2062:2077  return duration */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1999:2084  function getDuration() view external returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1639:1733  function balance() external view returns (uint256){... */\n    tag_56:\n        /* \"contracts/staking.sol\":1681:1688  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":1706:1714  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1706:1726  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1715:1725  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1706:1726  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1699:1726  return _balance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":1639:1733  function balance() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1274:1634  function depositStake (uint amount) external {... */\n    tag_60:\n        /* \"contracts/staking.sol\":1375:1381  amount */\n      dup1\n        /* \"contracts/staking.sol\":1337:1349  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1337:1359  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/staking.sol\":1360:1370  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1337:1371  stakingToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"contracts/staking.sol\":1337:1381  stakingToken.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/staking.sol\":1329:1413  require(stakingToken.balanceOf(msg.sender) >= amount, \"Not enough tokens for stake\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/staking.sol\":1431:1443  stakingToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/staking.sol\":1431:1456  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/staking.sol\":1457:1467  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1477:1481  this */\n      address\n        /* \"contracts/staking.sol\":1484:1490  amount */\n      dup5\n        /* \"contracts/staking.sol\":1431:1491  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_117:\n        /* \"contracts/staking.sol\":1423:1516  require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Failed to stake token\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/staking.sol\":1550:1582  _balance[msg.sender].add(amount) */\n      tag_121\n        /* \"contracts/staking.sol\":1575:1581  amount */\n      dup2\n        /* \"contracts/staking.sol\":1550:1558  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1550:1570  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1559:1569  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1550:1570  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":1550:1574  _balance[msg.sender].add */\n      tag_122\n      swap1\n        /* \"contracts/staking.sol\":1550:1582  _balance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/staking.sol\":1527:1535  _balance */\n      0x08\n        /* \"contracts/staking.sol\":1527:1547  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":1536:1546  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":1527:1547  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/staking.sol\":1527:1582  _balance[msg.sender] = _balance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1605:1627  totalStake.add(amount) */\n      tag_123\n        /* \"contracts/staking.sol\":1620:1626  amount */\n      dup2\n        /* \"contracts/staking.sol\":1605:1615  totalStake */\n      sload(0x02)\n        /* \"contracts/staking.sol\":1605:1619  totalStake.add */\n      tag_122\n      swap1\n        /* \"contracts/staking.sol\":1605:1627  totalStake.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/staking.sol\":1592:1602  totalStake */\n      0x02\n        /* \"contracts/staking.sol\":1592:1627  totalStake = totalStake.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1274:1634  function depositStake (uint amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/staking.sol\":732:758  IERC20 public rewardsToken */\n    tag_62:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":967:1008  mapping (address => uint) public _balance */\n    tag_67:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/staking.sol\":2246:2460  function earned() view public returns(uint256){... */\n    tag_70:\n        /* \"contracts/staking.sol\":2284:2291  uint256 */\n      0x00\n        /* \"contracts/staking.sol\":2333:2334  0 */\n      dup1\n        /* \"contracts/staking.sol\":2310:2318  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2310:2330  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2319:2329  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2310:2330  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2310:2334  _balance[msg.sender] > 0 */\n      gt\n        /* \"contracts/staking.sol\":2302:2369  require(_balance[msg.sender] > 0, \"You have not staked any tokens\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/staking.sol\":2442:2451  updatedAt */\n      sload(0x06)\n        /* \"contracts/staking.sol\":2424:2439  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":2424:2451  block.timestamp - updatedAt */\n      tag_128\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n        /* \"contracts/staking.sol\":2416:2419  100 */\n      0x64\n        /* \"contracts/staking.sol\":2411:2415  rate */\n      sload(0x07)\n        /* \"contracts/staking.sol\":2411:2419  rate/100 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/staking.sol\":2387:2395  _balance */\n      0x08\n        /* \"contracts/staking.sol\":2387:2407  _balance[msg.sender] */\n      0x00\n        /* \"contracts/staking.sol\":2396:2406  msg.sender */\n      caller\n        /* \"contracts/staking.sol\":2387:2407  _balance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/staking.sol\":2387:2420  _balance[msg.sender] * (rate/100) */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/staking.sol\":2387:2453  _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      tag_133\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n        /* \"contracts/staking.sol\":2380:2453  return _balance[msg.sender] * (rate/100) * (block.timestamp - updatedAt ) */\n      swap1\n      pop\n        /* \"contracts/staking.sol\":2246:2460  function earned() view public returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/staking.sol\":1739:1993  function setDuration(uint256 _duration) external{... */\n    tag_74:\n        /* \"contracts/staking.sol\":1816:1831  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1805:1813  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1805:1831  finishAt < block.timestamp */\n      lt\n        /* \"contracts/staking.sol\":1797:1874  require(finishAt < block.timestamp, \"can't set date to a previous timestamp\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/staking.sol\":1896:1905  _duration */\n      dup1\n        /* \"contracts/staking.sol\":1885:1893  duration */\n      0x04\n        /* \"contracts/staking.sol\":1885:1905  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1926:1949  finishAt.add(_duration) */\n      tag_138\n        /* \"contracts/staking.sol\":1939:1948  _duration */\n      dup2\n        /* \"contracts/staking.sol\":1926:1934  finishAt */\n      sload(0x05)\n        /* \"contracts/staking.sol\":1926:1938  finishAt.add */\n      tag_122\n      swap1\n        /* \"contracts/staking.sol\":1926:1949  finishAt.add(_duration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/staking.sol\":1915:1923  finishAt */\n      0x05\n        /* \"contracts/staking.sol\":1915:1949  finishAt = finishAt.add(_duration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1971:1986  block.timestamp */\n      timestamp\n        /* \"contracts/staking.sol\":1959:1968  updatedAt */\n      0x06\n        /* \"contracts/staking.sol\":1959:1986  updatedAt = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/staking.sol\":1739:1993  function setDuration(uint256 _duration) external{... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_140\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_141:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_142:\n        /* \"#utility.yul\":177:201   */\n      tag_184\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_141\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_186\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_142\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_144:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_146:\n        /* \"#utility.yul\":842:866   */\n      tag_191\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_141\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_192:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_147:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_194\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_146\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_34:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_197\n      tag_144\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1118:1237   */\n    tag_196:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_198\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_147\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_148:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_149:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_150:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_202\n        /* \"#utility.yul\":1676:1710   */\n      tag_203\n        /* \"#utility.yul\":1685:1709   */\n      tag_204\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1676:1710   */\n      tag_149\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1658:1711   */\n      tag_148\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_151:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_206\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_150\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_152:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_208\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_153:\n        /* \"#utility.yul\":2102:2153   */\n      tag_210\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_152\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2416   */\n    tag_42:\n        /* \"#utility.yul\":2273:2277   */\n      0x00\n        /* \"#utility.yul\":2311:2313   */\n      0x20\n        /* \"#utility.yul\":2300:2309   */\n      dup3\n        /* \"#utility.yul\":2296:2314   */\n      add\n        /* \"#utility.yul\":2288:2314   */\n      swap1\n      pop\n        /* \"#utility.yul\":2324:2409   */\n      tag_212\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2324:2409   */\n      tag_153\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2166:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_154:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_214\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_148\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_155:\n        /* \"#utility.yul\":2597:2621   */\n      tag_216\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_154\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_217:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_156:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_219\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_66:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_222\n      tag_144\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2873:2992   */\n    tag_221:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_223\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_156\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3301   */\n    tag_157:\n        /* \"#utility.yul\":3216:3227   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup3\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3257   */\n      mstore\n        /* \"#utility.yul\":3290:3294   */\n      0x20\n        /* \"#utility.yul\":3285:3288   */\n      dup3\n        /* \"#utility.yul\":3281:3295   */\n      add\n        /* \"#utility.yul\":3266:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3307:3488   */\n    tag_158:\n        /* \"#utility.yul\":3447:3480   */\n      0x596f752068617665206e6f74206561726e656420616e79207265776172647300\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3435:3441   */\n      dup3\n        /* \"#utility.yul\":3431:3445   */\n      add\n        /* \"#utility.yul\":3424:3481   */\n      mstore\n        /* \"#utility.yul\":3307:3488   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3860   */\n    tag_159:\n        /* \"#utility.yul\":3636:3639   */\n      0x00\n        /* \"#utility.yul\":3657:3724   */\n      tag_227\n        /* \"#utility.yul\":3721:3723   */\n      0x1f\n        /* \"#utility.yul\":3716:3719   */\n      dup4\n        /* \"#utility.yul\":3657:3724   */\n      tag_157\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3650:3724   */\n      swap2\n      pop\n        /* \"#utility.yul\":3733:3826   */\n      tag_228\n        /* \"#utility.yul\":3822:3825   */\n      dup3\n        /* \"#utility.yul\":3733:3826   */\n      tag_158\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3851:3853   */\n      0x20\n        /* \"#utility.yul\":3846:3849   */\n      dup3\n        /* \"#utility.yul\":3842:3854   */\n      add\n        /* \"#utility.yul\":3835:3854   */\n      swap1\n      pop\n        /* \"#utility.yul\":3494:3860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3866:4285   */\n    tag_79:\n        /* \"#utility.yul\":4032:4036   */\n      0x00\n        /* \"#utility.yul\":4070:4072   */\n      0x20\n        /* \"#utility.yul\":4059:4068   */\n      dup3\n        /* \"#utility.yul\":4055:4073   */\n      add\n        /* \"#utility.yul\":4047:4073   */\n      swap1\n      pop\n        /* \"#utility.yul\":4119:4128   */\n      dup2\n        /* \"#utility.yul\":4113:4117   */\n      dup2\n        /* \"#utility.yul\":4109:4129   */\n      sub\n        /* \"#utility.yul\":4105:4106   */\n      0x00\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4090:4107   */\n      add\n        /* \"#utility.yul\":4083:4130   */\n      mstore\n        /* \"#utility.yul\":4147:4278   */\n      tag_230\n        /* \"#utility.yul\":4273:4277   */\n      dup2\n        /* \"#utility.yul\":4147:4278   */\n      tag_159\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4139:4278   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:4285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4291:4471   */\n    tag_160:\n        /* \"#utility.yul\":4339:4416   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4336:4337   */\n      0x00\n        /* \"#utility.yul\":4329:4417   */\n      mstore\n        /* \"#utility.yul\":4436:4440   */\n      0x11\n        /* \"#utility.yul\":4433:4434   */\n      0x04\n        /* \"#utility.yul\":4426:4441   */\n      mstore\n        /* \"#utility.yul\":4460:4464   */\n      0x24\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4450:4465   */\n      revert\n        /* \"#utility.yul\":4477:4671   */\n    tag_82:\n        /* \"#utility.yul\":4517:4521   */\n      0x00\n        /* \"#utility.yul\":4537:4557   */\n      tag_233\n        /* \"#utility.yul\":4555:4556   */\n      dup3\n        /* \"#utility.yul\":4537:4557   */\n      tag_141\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4532:4557   */\n      swap2\n      pop\n        /* \"#utility.yul\":4571:4591   */\n      tag_234\n        /* \"#utility.yul\":4589:4590   */\n      dup4\n        /* \"#utility.yul\":4571:4591   */\n      tag_141\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4566:4591   */\n      swap3\n      pop\n        /* \"#utility.yul\":4615:4616   */\n      dup3\n        /* \"#utility.yul\":4612:4613   */\n      dup3\n        /* \"#utility.yul\":4608:4617   */\n      sub\n        /* \"#utility.yul\":4600:4617   */\n      swap1\n      pop\n        /* \"#utility.yul\":4639:4640   */\n      dup2\n        /* \"#utility.yul\":4633:4637   */\n      dup2\n        /* \"#utility.yul\":4630:4641   */\n      gt\n        /* \"#utility.yul\":4627:4664   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":4644:4662   */\n      tag_236\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4627:4664   */\n    tag_235:\n        /* \"#utility.yul\":4477:4671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4677:4897   */\n    tag_161:\n        /* \"#utility.yul\":4817:4851   */\n      0x596f7520646f6e2774206861766520656e6f75676820746f2077697468647261\n        /* \"#utility.yul\":4813:4814   */\n      0x00\n        /* \"#utility.yul\":4805:4811   */\n      dup3\n        /* \"#utility.yul\":4801:4815   */\n      add\n        /* \"#utility.yul\":4794:4852   */\n      mstore\n        /* \"#utility.yul\":4886:4889   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"#utility.yul\":4873:4879   */\n      dup3\n        /* \"#utility.yul\":4869:4884   */\n      add\n        /* \"#utility.yul\":4862:4890   */\n      mstore\n        /* \"#utility.yul\":4677:4897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4903:5269   */\n    tag_162:\n        /* \"#utility.yul\":5045:5048   */\n      0x00\n        /* \"#utility.yul\":5066:5133   */\n      tag_239\n        /* \"#utility.yul\":5130:5132   */\n      0x21\n        /* \"#utility.yul\":5125:5128   */\n      dup4\n        /* \"#utility.yul\":5066:5133   */\n      tag_157\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5059:5133   */\n      swap2\n      pop\n        /* \"#utility.yul\":5142:5235   */\n      tag_240\n        /* \"#utility.yul\":5231:5234   */\n      dup3\n        /* \"#utility.yul\":5142:5235   */\n      tag_161\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5260:5262   */\n      0x40\n        /* \"#utility.yul\":5255:5258   */\n      dup3\n        /* \"#utility.yul\":5251:5263   */\n      add\n        /* \"#utility.yul\":5244:5263   */\n      swap1\n      pop\n        /* \"#utility.yul\":4903:5269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5275:5694   */\n    tag_85:\n        /* \"#utility.yul\":5441:5445   */\n      0x00\n        /* \"#utility.yul\":5479:5481   */\n      0x20\n        /* \"#utility.yul\":5468:5477   */\n      dup3\n        /* \"#utility.yul\":5464:5482   */\n      add\n        /* \"#utility.yul\":5456:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5528:5537   */\n      dup2\n        /* \"#utility.yul\":5522:5526   */\n      dup2\n        /* \"#utility.yul\":5518:5538   */\n      sub\n        /* \"#utility.yul\":5514:5515   */\n      0x00\n        /* \"#utility.yul\":5503:5512   */\n      dup4\n        /* \"#utility.yul\":5499:5516   */\n      add\n        /* \"#utility.yul\":5492:5539   */\n      mstore\n        /* \"#utility.yul\":5556:5687   */\n      tag_242\n        /* \"#utility.yul\":5682:5686   */\n      dup2\n        /* \"#utility.yul\":5556:5687   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5548:5687   */\n      swap1\n      pop\n        /* \"#utility.yul\":5275:5694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5700:5818   */\n    tag_163:\n        /* \"#utility.yul\":5787:5811   */\n      tag_244\n        /* \"#utility.yul\":5805:5810   */\n      dup2\n        /* \"#utility.yul\":5787:5811   */\n      tag_154\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5782:5785   */\n      dup3\n        /* \"#utility.yul\":5775:5812   */\n      mstore\n        /* \"#utility.yul\":5700:5818   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5824:6156   */\n    tag_87:\n        /* \"#utility.yul\":5945:5949   */\n      0x00\n        /* \"#utility.yul\":5983:5985   */\n      0x40\n        /* \"#utility.yul\":5972:5981   */\n      dup3\n        /* \"#utility.yul\":5968:5986   */\n      add\n        /* \"#utility.yul\":5960:5986   */\n      swap1\n      pop\n        /* \"#utility.yul\":5996:6067   */\n      tag_246\n        /* \"#utility.yul\":6064:6065   */\n      0x00\n        /* \"#utility.yul\":6053:6062   */\n      dup4\n        /* \"#utility.yul\":6049:6066   */\n      add\n        /* \"#utility.yul\":6040:6046   */\n      dup6\n        /* \"#utility.yul\":5996:6067   */\n      tag_163\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6077:6149   */\n      tag_247\n        /* \"#utility.yul\":6145:6147   */\n      0x20\n        /* \"#utility.yul\":6134:6143   */\n      dup4\n        /* \"#utility.yul\":6130:6148   */\n      add\n        /* \"#utility.yul\":6121:6127   */\n      dup5\n        /* \"#utility.yul\":6077:6149   */\n      tag_142\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5824:6156   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6162:6252   */\n    tag_164:\n        /* \"#utility.yul\":6196:6203   */\n      0x00\n        /* \"#utility.yul\":6239:6244   */\n      dup2\n        /* \"#utility.yul\":6232:6245   */\n      iszero\n        /* \"#utility.yul\":6225:6246   */\n      iszero\n        /* \"#utility.yul\":6214:6246   */\n      swap1\n      pop\n        /* \"#utility.yul\":6162:6252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6258:6374   */\n    tag_165:\n        /* \"#utility.yul\":6328:6349   */\n      tag_250\n        /* \"#utility.yul\":6343:6348   */\n      dup2\n        /* \"#utility.yul\":6328:6349   */\n      tag_164\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6321:6326   */\n      dup2\n        /* \"#utility.yul\":6318:6350   */\n      eq\n        /* \"#utility.yul\":6308:6368   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6364:6365   */\n      0x00\n        /* \"#utility.yul\":6361:6362   */\n      dup1\n        /* \"#utility.yul\":6354:6366   */\n      revert\n        /* \"#utility.yul\":6308:6368   */\n    tag_251:\n        /* \"#utility.yul\":6258:6374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:6517   */\n    tag_166:\n        /* \"#utility.yul\":6434:6439   */\n      0x00\n        /* \"#utility.yul\":6465:6471   */\n      dup2\n        /* \"#utility.yul\":6459:6472   */\n      mload\n        /* \"#utility.yul\":6450:6472   */\n      swap1\n      pop\n        /* \"#utility.yul\":6481:6511   */\n      tag_253\n        /* \"#utility.yul\":6505:6510   */\n      dup2\n        /* \"#utility.yul\":6481:6511   */\n      tag_165\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6380:6517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6523:6868   */\n    tag_91:\n        /* \"#utility.yul\":6590:6596   */\n      0x00\n        /* \"#utility.yul\":6639:6641   */\n      0x20\n        /* \"#utility.yul\":6627:6636   */\n      dup3\n        /* \"#utility.yul\":6618:6625   */\n      dup5\n        /* \"#utility.yul\":6614:6637   */\n      sub\n        /* \"#utility.yul\":6610:6642   */\n      slt\n        /* \"#utility.yul\":6607:6726   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":6645:6724   */\n      tag_256\n      tag_144\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6607:6726   */\n    tag_255:\n        /* \"#utility.yul\":6765:6766   */\n      0x00\n        /* \"#utility.yul\":6790:6851   */\n      tag_257\n        /* \"#utility.yul\":6843:6850   */\n      dup5\n        /* \"#utility.yul\":6834:6840   */\n      dup3\n        /* \"#utility.yul\":6823:6832   */\n      dup6\n        /* \"#utility.yul\":6819:6841   */\n      add\n        /* \"#utility.yul\":6790:6851   */\n      tag_166\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6780:6851   */\n      swap2\n      pop\n        /* \"#utility.yul\":6736:6861   */\n      pop\n        /* \"#utility.yul\":6523:6868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6874:7049   */\n    tag_167:\n        /* \"#utility.yul\":7014:7041   */\n      0x4661696c656420746f207472616e7366657220746f6b656e7300000000000000\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":7002:7008   */\n      dup3\n        /* \"#utility.yul\":6998:7012   */\n      add\n        /* \"#utility.yul\":6991:7042   */\n      mstore\n        /* \"#utility.yul\":6874:7049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7055:7421   */\n    tag_168:\n        /* \"#utility.yul\":7197:7200   */\n      0x00\n        /* \"#utility.yul\":7218:7285   */\n      tag_260\n        /* \"#utility.yul\":7282:7284   */\n      0x19\n        /* \"#utility.yul\":7277:7280   */\n      dup4\n        /* \"#utility.yul\":7218:7285   */\n      tag_157\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7211:7285   */\n      swap2\n      pop\n        /* \"#utility.yul\":7294:7387   */\n      tag_261\n        /* \"#utility.yul\":7383:7386   */\n      dup3\n        /* \"#utility.yul\":7294:7387   */\n      tag_167\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7412:7414   */\n      0x20\n        /* \"#utility.yul\":7407:7410   */\n      dup3\n        /* \"#utility.yul\":7403:7415   */\n      add\n        /* \"#utility.yul\":7396:7415   */\n      swap1\n      pop\n        /* \"#utility.yul\":7055:7421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:7846   */\n    tag_94:\n        /* \"#utility.yul\":7593:7597   */\n      0x00\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"#utility.yul\":7620:7629   */\n      dup3\n        /* \"#utility.yul\":7616:7634   */\n      add\n        /* \"#utility.yul\":7608:7634   */\n      swap1\n      pop\n        /* \"#utility.yul\":7680:7689   */\n      dup2\n        /* \"#utility.yul\":7674:7678   */\n      dup2\n        /* \"#utility.yul\":7670:7690   */\n      sub\n        /* \"#utility.yul\":7666:7667   */\n      0x00\n        /* \"#utility.yul\":7655:7664   */\n      dup4\n        /* \"#utility.yul\":7651:7668   */\n      add\n        /* \"#utility.yul\":7644:7691   */\n      mstore\n        /* \"#utility.yul\":7708:7839   */\n      tag_263\n        /* \"#utility.yul\":7834:7838   */\n      dup2\n        /* \"#utility.yul\":7708:7839   */\n      tag_168\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7700:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7427:7846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:8043   */\n    tag_96:\n        /* \"#utility.yul\":7892:7895   */\n      0x00\n        /* \"#utility.yul\":7911:7931   */\n      tag_265\n        /* \"#utility.yul\":7929:7930   */\n      dup3\n        /* \"#utility.yul\":7911:7931   */\n      tag_141\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7906:7931   */\n      swap2\n      pop\n        /* \"#utility.yul\":7945:7965   */\n      tag_266\n        /* \"#utility.yul\":7963:7964   */\n      dup4\n        /* \"#utility.yul\":7945:7965   */\n      tag_141\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7940:7965   */\n      swap3\n      pop\n        /* \"#utility.yul\":7988:7989   */\n      dup3\n        /* \"#utility.yul\":7985:7986   */\n      dup3\n        /* \"#utility.yul\":7981:7990   */\n      add\n        /* \"#utility.yul\":7974:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8009:8012   */\n      dup1\n        /* \"#utility.yul\":8006:8007   */\n      dup3\n        /* \"#utility.yul\":8003:8013   */\n      gt\n        /* \"#utility.yul\":8000:8036   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":8016:8034   */\n      tag_268\n      tag_160\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8000:8036   */\n    tag_267:\n        /* \"#utility.yul\":7852:8043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8049:8224   */\n    tag_169:\n        /* \"#utility.yul\":8189:8216   */\n      0x5374616b696e67207374696c6c20696e2070726f677265737300000000000000\n        /* \"#utility.yul\":8185:8186   */\n      0x00\n        /* \"#utility.yul\":8177:8183   */\n      dup3\n        /* \"#utility.yul\":8173:8187   */\n      add\n        /* \"#utility.yul\":8166:8217   */\n      mstore\n        /* \"#utility.yul\":8049:8224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8230:8596   */\n    tag_170:\n        /* \"#utility.yul\":8372:8375   */\n      0x00\n        /* \"#utility.yul\":8393:8460   */\n      tag_271\n        /* \"#utility.yul\":8457:8459   */\n      0x19\n        /* \"#utility.yul\":8452:8455   */\n      dup4\n        /* \"#utility.yul\":8393:8460   */\n      tag_157\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8386:8460   */\n      swap2\n      pop\n        /* \"#utility.yul\":8469:8562   */\n      tag_272\n        /* \"#utility.yul\":8558:8561   */\n      dup3\n        /* \"#utility.yul\":8469:8562   */\n      tag_169\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8587:8589   */\n      0x20\n        /* \"#utility.yul\":8582:8585   */\n      dup3\n        /* \"#utility.yul\":8578:8590   */\n      add\n        /* \"#utility.yul\":8571:8590   */\n      swap1\n      pop\n        /* \"#utility.yul\":8230:8596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8602:9021   */\n    tag_100:\n        /* \"#utility.yul\":8768:8772   */\n      0x00\n        /* \"#utility.yul\":8806:8808   */\n      0x20\n        /* \"#utility.yul\":8795:8804   */\n      dup3\n        /* \"#utility.yul\":8791:8809   */\n      add\n        /* \"#utility.yul\":8783:8809   */\n      swap1\n      pop\n        /* \"#utility.yul\":8855:8864   */\n      dup2\n        /* \"#utility.yul\":8849:8853   */\n      dup2\n        /* \"#utility.yul\":8845:8865   */\n      sub\n        /* \"#utility.yul\":8841:8842   */\n      0x00\n        /* \"#utility.yul\":8830:8839   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8819:8866   */\n      mstore\n        /* \"#utility.yul\":8883:9014   */\n      tag_274\n        /* \"#utility.yul\":9009:9013   */\n      dup2\n        /* \"#utility.yul\":8883:9014   */\n      tag_170\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8875:9014   */\n      swap1\n      pop\n        /* \"#utility.yul\":8602:9021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9027:9249   */\n    tag_105:\n        /* \"#utility.yul\":9120:9124   */\n      0x00\n        /* \"#utility.yul\":9158:9160   */\n      0x20\n        /* \"#utility.yul\":9147:9156   */\n      dup3\n        /* \"#utility.yul\":9143:9161   */\n      add\n        /* \"#utility.yul\":9135:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9171:9242   */\n      tag_276\n        /* \"#utility.yul\":9239:9240   */\n      0x00\n        /* \"#utility.yul\":9228:9237   */\n      dup4\n        /* \"#utility.yul\":9224:9241   */\n      add\n        /* \"#utility.yul\":9215:9221   */\n      dup5\n        /* \"#utility.yul\":9171:9242   */\n      tag_163\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9027:9249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9255:9398   */\n    tag_171:\n        /* \"#utility.yul\":9312:9317   */\n      0x00\n        /* \"#utility.yul\":9343:9349   */\n      dup2\n        /* \"#utility.yul\":9337:9350   */\n      mload\n        /* \"#utility.yul\":9328:9350   */\n      swap1\n      pop\n        /* \"#utility.yul\":9359:9392   */\n      tag_278\n        /* \"#utility.yul\":9386:9391   */\n      dup2\n        /* \"#utility.yul\":9359:9392   */\n      tag_146\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9255:9398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9404:9755   */\n    tag_109:\n        /* \"#utility.yul\":9474:9480   */\n      0x00\n        /* \"#utility.yul\":9523:9525   */\n      0x20\n        /* \"#utility.yul\":9511:9520   */\n      dup3\n        /* \"#utility.yul\":9502:9509   */\n      dup5\n        /* \"#utility.yul\":9498:9521   */\n      sub\n        /* \"#utility.yul\":9494:9526   */\n      slt\n        /* \"#utility.yul\":9491:9610   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":9529:9608   */\n      tag_281\n      tag_144\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9491:9610   */\n    tag_280:\n        /* \"#utility.yul\":9649:9650   */\n      0x00\n        /* \"#utility.yul\":9674:9738   */\n      tag_282\n        /* \"#utility.yul\":9730:9737   */\n      dup5\n        /* \"#utility.yul\":9721:9727   */\n      dup3\n        /* \"#utility.yul\":9710:9719   */\n      dup6\n        /* \"#utility.yul\":9706:9728   */\n      add\n        /* \"#utility.yul\":9674:9738   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9664:9738   */\n      swap2\n      pop\n        /* \"#utility.yul\":9620:9748   */\n      pop\n        /* \"#utility.yul\":9404:9755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9761:9938   */\n    tag_172:\n        /* \"#utility.yul\":9901:9930   */\n      0x4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000\n        /* \"#utility.yul\":9897:9898   */\n      0x00\n        /* \"#utility.yul\":9889:9895   */\n      dup3\n        /* \"#utility.yul\":9885:9899   */\n      add\n        /* \"#utility.yul\":9878:9931   */\n      mstore\n        /* \"#utility.yul\":9761:9938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10310   */\n    tag_173:\n        /* \"#utility.yul\":10086:10089   */\n      0x00\n        /* \"#utility.yul\":10107:10174   */\n      tag_285\n        /* \"#utility.yul\":10171:10173   */\n      0x1b\n        /* \"#utility.yul\":10166:10169   */\n      dup4\n        /* \"#utility.yul\":10107:10174   */\n      tag_157\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10100:10174   */\n      swap2\n      pop\n        /* \"#utility.yul\":10183:10276   */\n      tag_286\n        /* \"#utility.yul\":10272:10275   */\n      dup3\n        /* \"#utility.yul\":10183:10276   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10301:10303   */\n      0x20\n        /* \"#utility.yul\":10296:10299   */\n      dup3\n        /* \"#utility.yul\":10292:10304   */\n      add\n        /* \"#utility.yul\":10285:10304   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:10310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10316:10735   */\n    tag_112:\n        /* \"#utility.yul\":10482:10486   */\n      0x00\n        /* \"#utility.yul\":10520:10522   */\n      0x20\n        /* \"#utility.yul\":10509:10518   */\n      dup3\n        /* \"#utility.yul\":10505:10523   */\n      add\n        /* \"#utility.yul\":10497:10523   */\n      swap1\n      pop\n        /* \"#utility.yul\":10569:10578   */\n      dup2\n        /* \"#utility.yul\":10563:10567   */\n      dup2\n        /* \"#utility.yul\":10559:10579   */\n      sub\n        /* \"#utility.yul\":10555:10556   */\n      0x00\n        /* \"#utility.yul\":10544:10553   */\n      dup4\n        /* \"#utility.yul\":10540:10557   */\n      add\n        /* \"#utility.yul\":10533:10580   */\n      mstore\n        /* \"#utility.yul\":10597:10728   */\n      tag_288\n        /* \"#utility.yul\":10723:10727   */\n      dup2\n        /* \"#utility.yul\":10597:10728   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10589:10728   */\n      swap1\n      pop\n        /* \"#utility.yul\":10316:10735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10741:11183   */\n    tag_114:\n        /* \"#utility.yul\":10890:10894   */\n      0x00\n        /* \"#utility.yul\":10928:10930   */\n      0x60\n        /* \"#utility.yul\":10917:10926   */\n      dup3\n        /* \"#utility.yul\":10913:10931   */\n      add\n        /* \"#utility.yul\":10905:10931   */\n      swap1\n      pop\n        /* \"#utility.yul\":10941:11012   */\n      tag_290\n        /* \"#utility.yul\":11009:11010   */\n      0x00\n        /* \"#utility.yul\":10998:11007   */\n      dup4\n        /* \"#utility.yul\":10994:11011   */\n      add\n        /* \"#utility.yul\":10985:10991   */\n      dup7\n        /* \"#utility.yul\":10941:11012   */\n      tag_163\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11022:11094   */\n      tag_291\n        /* \"#utility.yul\":11090:11092   */\n      0x20\n        /* \"#utility.yul\":11079:11088   */\n      dup4\n        /* \"#utility.yul\":11075:11093   */\n      add\n        /* \"#utility.yul\":11066:11072   */\n      dup6\n        /* \"#utility.yul\":11022:11094   */\n      tag_163\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11104:11176   */\n      tag_292\n        /* \"#utility.yul\":11172:11174   */\n      0x40\n        /* \"#utility.yul\":11161:11170   */\n      dup4\n        /* \"#utility.yul\":11157:11175   */\n      add\n        /* \"#utility.yul\":11148:11154   */\n      dup5\n        /* \"#utility.yul\":11104:11176   */\n      tag_142\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10741:11183   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11189:11360   */\n    tag_174:\n        /* \"#utility.yul\":11329:11352   */\n      0x4661696c656420746f207374616b6520746f6b656e0000000000000000000000\n        /* \"#utility.yul\":11325:11326   */\n      0x00\n        /* \"#utility.yul\":11317:11323   */\n      dup3\n        /* \"#utility.yul\":11313:11327   */\n      add\n        /* \"#utility.yul\":11306:11353   */\n      mstore\n        /* \"#utility.yul\":11189:11360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11366:11732   */\n    tag_175:\n        /* \"#utility.yul\":11508:11511   */\n      0x00\n        /* \"#utility.yul\":11529:11596   */\n      tag_295\n        /* \"#utility.yul\":11593:11595   */\n      0x15\n        /* \"#utility.yul\":11588:11591   */\n      dup4\n        /* \"#utility.yul\":11529:11596   */\n      tag_157\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11522:11596   */\n      swap2\n      pop\n        /* \"#utility.yul\":11605:11698   */\n      tag_296\n        /* \"#utility.yul\":11694:11697   */\n      dup3\n        /* \"#utility.yul\":11605:11698   */\n      tag_174\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11723:11725   */\n      0x20\n        /* \"#utility.yul\":11718:11721   */\n      dup3\n        /* \"#utility.yul\":11714:11726   */\n      add\n        /* \"#utility.yul\":11707:11726   */\n      swap1\n      pop\n        /* \"#utility.yul\":11366:11732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:12157   */\n    tag_120:\n        /* \"#utility.yul\":11904:11908   */\n      0x00\n        /* \"#utility.yul\":11942:11944   */\n      0x20\n        /* \"#utility.yul\":11931:11940   */\n      dup3\n        /* \"#utility.yul\":11927:11945   */\n      add\n        /* \"#utility.yul\":11919:11945   */\n      swap1\n      pop\n        /* \"#utility.yul\":11991:12000   */\n      dup2\n        /* \"#utility.yul\":11985:11989   */\n      dup2\n        /* \"#utility.yul\":11981:12001   */\n      sub\n        /* \"#utility.yul\":11977:11978   */\n      0x00\n        /* \"#utility.yul\":11966:11975   */\n      dup4\n        /* \"#utility.yul\":11962:11979   */\n      add\n        /* \"#utility.yul\":11955:12002   */\n      mstore\n        /* \"#utility.yul\":12019:12150   */\n      tag_298\n        /* \"#utility.yul\":12145:12149   */\n      dup2\n        /* \"#utility.yul\":12019:12150   */\n      tag_175\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12011:12150   */\n      swap1\n      pop\n        /* \"#utility.yul\":11738:12157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12163:12343   */\n    tag_176:\n        /* \"#utility.yul\":12303:12335   */\n      0x596f752068617665206e6f74207374616b656420616e7920746f6b656e730000\n        /* \"#utility.yul\":12299:12300   */\n      0x00\n        /* \"#utility.yul\":12291:12297   */\n      dup3\n        /* \"#utility.yul\":12287:12301   */\n      add\n        /* \"#utility.yul\":12280:12336   */\n      mstore\n        /* \"#utility.yul\":12163:12343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12349:12715   */\n    tag_177:\n        /* \"#utility.yul\":12491:12494   */\n      0x00\n        /* \"#utility.yul\":12512:12579   */\n      tag_301\n        /* \"#utility.yul\":12576:12578   */\n      0x1e\n        /* \"#utility.yul\":12571:12574   */\n      dup4\n        /* \"#utility.yul\":12512:12579   */\n      tag_157\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":12505:12579   */\n      swap2\n      pop\n        /* \"#utility.yul\":12588:12681   */\n      tag_302\n        /* \"#utility.yul\":12677:12680   */\n      dup3\n        /* \"#utility.yul\":12588:12681   */\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12706:12708   */\n      0x20\n        /* \"#utility.yul\":12701:12704   */\n      dup3\n        /* \"#utility.yul\":12697:12709   */\n      add\n        /* \"#utility.yul\":12690:12709   */\n      swap1\n      pop\n        /* \"#utility.yul\":12349:12715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:13140   */\n    tag_127:\n        /* \"#utility.yul\":12887:12891   */\n      0x00\n        /* \"#utility.yul\":12925:12927   */\n      0x20\n        /* \"#utility.yul\":12914:12923   */\n      dup3\n        /* \"#utility.yul\":12910:12928   */\n      add\n        /* \"#utility.yul\":12902:12928   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:12983   */\n      dup2\n        /* \"#utility.yul\":12968:12972   */\n      dup2\n        /* \"#utility.yul\":12964:12984   */\n      sub\n        /* \"#utility.yul\":12960:12961   */\n      0x00\n        /* \"#utility.yul\":12949:12958   */\n      dup4\n        /* \"#utility.yul\":12945:12962   */\n      add\n        /* \"#utility.yul\":12938:12985   */\n      mstore\n        /* \"#utility.yul\":13002:13133   */\n      tag_304\n        /* \"#utility.yul\":13128:13132   */\n      dup2\n        /* \"#utility.yul\":13002:13133   */\n      tag_177\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12994:13133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12721:13140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13326   */\n    tag_178:\n        /* \"#utility.yul\":13194:13271   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13191:13192   */\n      0x00\n        /* \"#utility.yul\":13184:13272   */\n      mstore\n        /* \"#utility.yul\":13291:13295   */\n      0x12\n        /* \"#utility.yul\":13288:13289   */\n      0x04\n        /* \"#utility.yul\":13281:13296   */\n      mstore\n        /* \"#utility.yul\":13315:13319   */\n      0x24\n        /* \"#utility.yul\":13312:13313   */\n      0x00\n        /* \"#utility.yul\":13305:13320   */\n      revert\n        /* \"#utility.yul\":13332:13517   */\n    tag_130:\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13389:13409   */\n      tag_307\n        /* \"#utility.yul\":13407:13408   */\n      dup3\n        /* \"#utility.yul\":13389:13409   */\n      tag_141\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":13384:13409   */\n      swap2\n      pop\n        /* \"#utility.yul\":13423:13443   */\n      tag_308\n        /* \"#utility.yul\":13441:13442   */\n      dup4\n        /* \"#utility.yul\":13423:13443   */\n      tag_141\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":13418:13443   */\n      swap3\n      pop\n        /* \"#utility.yul\":13462:13463   */\n      dup3\n        /* \"#utility.yul\":13452:13487   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":13467:13485   */\n      tag_310\n      tag_178\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":13452:13487   */\n    tag_309:\n        /* \"#utility.yul\":13509:13510   */\n      dup3\n        /* \"#utility.yul\":13506:13507   */\n      dup3\n        /* \"#utility.yul\":13502:13511   */\n      div\n        /* \"#utility.yul\":13497:13511   */\n      swap1\n      pop\n        /* \"#utility.yul\":13332:13517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13523:13933   */\n    tag_132:\n        /* \"#utility.yul\":13563:13570   */\n      0x00\n        /* \"#utility.yul\":13586:13606   */\n      tag_312\n        /* \"#utility.yul\":13604:13605   */\n      dup3\n        /* \"#utility.yul\":13586:13606   */\n      tag_141\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":13581:13606   */\n      swap2\n      pop\n        /* \"#utility.yul\":13620:13640   */\n      tag_313\n        /* \"#utility.yul\":13638:13639   */\n      dup4\n        /* \"#utility.yul\":13620:13640   */\n      tag_141\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":13615:13640   */\n      swap3\n      pop\n        /* \"#utility.yul\":13675:13676   */\n      dup3\n        /* \"#utility.yul\":13672:13673   */\n      dup3\n        /* \"#utility.yul\":13668:13677   */\n      mul\n        /* \"#utility.yul\":13697:13727   */\n      tag_314\n        /* \"#utility.yul\":13715:13726   */\n      dup2\n        /* \"#utility.yul\":13697:13727   */\n      tag_141\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13686:13727   */\n      swap2\n      pop\n        /* \"#utility.yul\":13876:13877   */\n      dup3\n        /* \"#utility.yul\":13867:13874   */\n      dup3\n        /* \"#utility.yul\":13863:13878   */\n      div\n        /* \"#utility.yul\":13860:13861   */\n      dup5\n        /* \"#utility.yul\":13857:13879   */\n      eq\n        /* \"#utility.yul\":13837:13838   */\n      dup4\n        /* \"#utility.yul\":13830:13839   */\n      iszero\n        /* \"#utility.yul\":13810:13893   */\n      or\n        /* \"#utility.yul\":13787:13926   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":13906:13924   */\n      tag_316\n      tag_160\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13787:13926   */\n    tag_315:\n        /* \"#utility.yul\":13571:13933   */\n      pop\n        /* \"#utility.yul\":13523:13933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13939:14164   */\n    tag_179:\n        /* \"#utility.yul\":14079:14113   */\n      0x63616e277420736574206461746520746f20612070726576696f75732074696d\n        /* \"#utility.yul\":14075:14076   */\n      0x00\n        /* \"#utility.yul\":14067:14073   */\n      dup3\n        /* \"#utility.yul\":14063:14077   */\n      add\n        /* \"#utility.yul\":14056:14114   */\n      mstore\n        /* \"#utility.yul\":14148:14156   */\n      0x657374616d700000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14143:14145   */\n      0x20\n        /* \"#utility.yul\":14135:14141   */\n      dup3\n        /* \"#utility.yul\":14131:14146   */\n      add\n        /* \"#utility.yul\":14124:14157   */\n      mstore\n        /* \"#utility.yul\":13939:14164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14170:14536   */\n    tag_180:\n        /* \"#utility.yul\":14312:14315   */\n      0x00\n        /* \"#utility.yul\":14333:14400   */\n      tag_319\n        /* \"#utility.yul\":14397:14399   */\n      0x26\n        /* \"#utility.yul\":14392:14395   */\n      dup4\n        /* \"#utility.yul\":14333:14400   */\n      tag_157\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14326:14400   */\n      swap2\n      pop\n        /* \"#utility.yul\":14409:14502   */\n      tag_320\n        /* \"#utility.yul\":14498:14501   */\n      dup3\n        /* \"#utility.yul\":14409:14502   */\n      tag_179\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14527:14529   */\n      0x40\n        /* \"#utility.yul\":14522:14525   */\n      dup3\n        /* \"#utility.yul\":14518:14530   */\n      add\n        /* \"#utility.yul\":14511:14530   */\n      swap1\n      pop\n        /* \"#utility.yul\":14170:14536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14542:14961   */\n    tag_137:\n        /* \"#utility.yul\":14708:14712   */\n      0x00\n        /* \"#utility.yul\":14746:14748   */\n      0x20\n        /* \"#utility.yul\":14735:14744   */\n      dup3\n        /* \"#utility.yul\":14731:14749   */\n      add\n        /* \"#utility.yul\":14723:14749   */\n      swap1\n      pop\n        /* \"#utility.yul\":14795:14804   */\n      dup2\n        /* \"#utility.yul\":14789:14793   */\n      dup2\n        /* \"#utility.yul\":14785:14805   */\n      sub\n        /* \"#utility.yul\":14781:14782   */\n      0x00\n        /* \"#utility.yul\":14770:14779   */\n      dup4\n        /* \"#utility.yul\":14766:14783   */\n      add\n        /* \"#utility.yul\":14759:14806   */\n      mstore\n        /* \"#utility.yul\":14823:14954   */\n      tag_322\n        /* \"#utility.yul\":14949:14953   */\n      dup2\n        /* \"#utility.yul\":14823:14954   */\n      tag_180\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14815:14954   */\n      swap1\n      pop\n        /* \"#utility.yul\":14542:14961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e2d0ecfe1fc792dfc9c7b7f0d6078b9d0ecd17c1a36057d0bbb65975a1bc1fb264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200138b3803806200138b83398181016040528101906200003791906200012a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000171565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b60008060408385031215620001445762000143620000c0565b5b6000620001548582860162000113565b9250506020620001678582860162000113565b9150509250929050565b61120a80620001816000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639e447fc611610097578063d1af0c7d11610066578063d1af0c7d14610267578063d3aceae214610285578063d6f19262146102b5578063f6be71d1146102d357610100565b80639e447fc6146101f3578063ad2e8c9b1461020f578063b69ef8a81461022d578063cb82cc8f1461024b57610100565b806367d3b488116100d357806367d3b4881461017b57806372f702f3146101995780637519ab50146101b75780638b0e9f3f146101d557610100565b80630fb5a6b4146101055780632c4e722e14610123578063327bcac514610141578063523a3f081461015f575b600080fd5b61010d6102ef565b60405161011a9190610a2f565b60405180910390f35b61012b6102f5565b6040516101389190610a2f565b60405180910390f35b6101496102fb565b6040516101569190610a2f565b60405180910390f35b61017960048036038101906101749190610a7b565b610301565b005b610183610516565b6040516101909190610a2f565b60405180910390f35b6101a161051c565b6040516101ae9190610b27565b60405180910390f35b6101bf610540565b6040516101cc9190610a2f565b60405180910390f35b6101dd610546565b6040516101ea9190610a2f565b60405180910390f35b61020d60048036038101906102089190610a7b565b61054c565b005b61021761059a565b6040516102249190610a2f565b60405180910390f35b6102356105a4565b6040516102429190610a2f565b60405180910390f35b61026560048036038101906102609190610a7b565b6105eb565b005b61026f610859565b60405161027c9190610b27565b60405180910390f35b61029f600480360381019061029a9190610b80565b61087f565b6040516102ac9190610a2f565b60405180910390f35b6102bd610897565b6040516102ca9190610a2f565b60405180910390f35b6102ed60048036038101906102e89190610a7b565b610990565b005b60045481565b60075481565b60035481565b600061030b610897565b1161034b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034290610c0a565b60405180910390fd5b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610394610897565b61039e9190610c59565b106103de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d590610cff565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161043b929190610d2e565b6020604051808303816000875af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610d8f565b6104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b490610e08565b60405180910390fd5b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050c9190610e28565b9250508190555050565b60055481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60025481565b4260055410610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058790610ea8565b60405180910390fd5b8060078190555050565b6000600454905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106459190610ec8565b602060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190610ef8565b10156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90610f71565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161072493929190610f91565b6020604051808303816000875af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610d8f565b6107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d90611014565b60405180910390fd5b6107f881600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a0090919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061085081600254610a0090919063ffffffff16565b60028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915090505481565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091190611080565b60405180910390fd5b600654426109289190610c59565b606460075461093791906110cf565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109819190611100565b61098b9190611100565b905090565b42600554106109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb906111b4565b60405180910390fd5b806004819055506109f081600554610a0090919063ffffffff16565b6005819055504260068190555050565b60008183610a0e9190610e28565b905092915050565b6000819050919050565b610a2981610a16565b82525050565b6000602082019050610a446000830184610a20565b92915050565b600080fd5b610a5881610a16565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a4a565b5b6000610a9f84828501610a66565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610aed610ae8610ae384610aa8565b610ac8565b610aa8565b9050919050565b6000610aff82610ad2565b9050919050565b6000610b1182610af4565b9050919050565b610b2181610b06565b82525050565b6000602082019050610b3c6000830184610b18565b92915050565b6000610b4d82610aa8565b9050919050565b610b5d81610b42565b8114610b6857600080fd5b50565b600081359050610b7a81610b54565b92915050565b600060208284031215610b9657610b95610a4a565b5b6000610ba484828501610b6b565b91505092915050565b600082825260208201905092915050565b7f596f752068617665206e6f74206561726e656420616e79207265776172647300600082015250565b6000610bf4601f83610bad565b9150610bff82610bbe565b602082019050919050565b60006020820190508181036000830152610c2381610be7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6482610a16565b9150610c6f83610a16565b9250828203905081811115610c8757610c86610c2a565b5b92915050565b7f596f7520646f6e2774206861766520656e6f75676820746f207769746864726160008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ce9602183610bad565b9150610cf482610c8d565b604082019050919050565b60006020820190508181036000830152610d1881610cdc565b9050919050565b610d2881610b42565b82525050565b6000604082019050610d436000830185610d1f565b610d506020830184610a20565b9392505050565b60008115159050919050565b610d6c81610d57565b8114610d7757600080fd5b50565b600081519050610d8981610d63565b92915050565b600060208284031215610da557610da4610a4a565b5b6000610db384828501610d7a565b91505092915050565b7f4661696c656420746f207472616e7366657220746f6b656e7300000000000000600082015250565b6000610df2601983610bad565b9150610dfd82610dbc565b602082019050919050565b60006020820190508181036000830152610e2181610de5565b9050919050565b6000610e3382610a16565b9150610e3e83610a16565b9250828201905080821115610e5657610e55610c2a565b5b92915050565b7f5374616b696e67207374696c6c20696e2070726f677265737300000000000000600082015250565b6000610e92601983610bad565b9150610e9d82610e5c565b602082019050919050565b60006020820190508181036000830152610ec181610e85565b9050919050565b6000602082019050610edd6000830184610d1f565b92915050565b600081519050610ef281610a4f565b92915050565b600060208284031215610f0e57610f0d610a4a565b5b6000610f1c84828501610ee3565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320666f72207374616b650000000000600082015250565b6000610f5b601b83610bad565b9150610f6682610f25565b602082019050919050565b60006020820190508181036000830152610f8a81610f4e565b9050919050565b6000606082019050610fa66000830186610d1f565b610fb36020830185610d1f565b610fc06040830184610a20565b949350505050565b7f4661696c656420746f207374616b6520746f6b656e0000000000000000000000600082015250565b6000610ffe601583610bad565b915061100982610fc8565b602082019050919050565b6000602082019050818103600083015261102d81610ff1565b9050919050565b7f596f752068617665206e6f74207374616b656420616e7920746f6b656e730000600082015250565b600061106a601e83610bad565b915061107582611034565b602082019050919050565b600060208201905081810360008301526110998161105d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110da82610a16565b91506110e583610a16565b9250826110f5576110f46110a0565b5b828204905092915050565b600061110b82610a16565b915061111683610a16565b925082820261112481610a16565b9150828204841483151761113b5761113a610c2a565b5b5092915050565b7f63616e277420736574206461746520746f20612070726576696f75732074696d60008201527f657374616d700000000000000000000000000000000000000000000000000000602082015250565b600061119e602683610bad565b91506111a982611142565b604082019050919050565b600060208201905081810360008301526111cd81611191565b905091905056fea2646970667358221220e2d0ecfe1fc792dfc9c7b7f0d6078b9d0ecd17c1a36057d0bbb65975a1bc1fb264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x138B CODESIZE SUB DUP1 PUSH3 0x138B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x171 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF2 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x104 DUP2 PUSH3 0xE5 JUMP JUMPDEST DUP2 EQ PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x144 JUMPI PUSH3 0x143 PUSH3 0xC0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x154 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x167 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x120A DUP1 PUSH3 0x181 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2D3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x24B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x67D3B488 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1D5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x327BCAC5 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B PUSH2 0x897 JUMP JUMPDEST GT PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x394 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST LT PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP3 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP1 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xEF8 JUMP JUMPDEST LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x850 DUP2 PUSH1 0x2 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x911 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x9F0 DUP2 PUSH1 0x5 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA29 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP2 EQ PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9F DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAED PUSH2 0xAE8 PUSH2 0xAE3 DUP5 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF DUP3 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 DUP3 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB21 DUP2 PUSH2 0xB06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP2 EQ PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB7A DUP2 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA4 DUP5 DUP3 DUP6 ADD PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74206561726E656420616E79207265776172647300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH1 0x1F DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xBFF DUP3 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC23 DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC86 PUSH2 0xC2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520656E6F75676820746F2077697468647261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 PUSH1 0x21 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCF4 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD18 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xD50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP2 EQ PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD89 DUP2 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB3 DUP5 DUP3 DUP6 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E7300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF2 PUSH1 0x19 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xDFD DUP3 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE21 DUP2 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xC2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67207374696C6C20696E2070726F677265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE92 PUSH1 0x19 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC1 DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEF2 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH2 0xF0D PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF1C DUP5 DUP3 DUP6 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B PUSH1 0x1B DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP3 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8A DUP2 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xFB3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xFC0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFE PUSH1 0x15 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 DUP3 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x102D DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106A PUSH1 0x1E DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1099 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10DA DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E5 DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x10A0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1116 DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1124 DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xC2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119E PUSH1 0x26 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x11A9 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11CD DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xD0 0xEC INVALID 0x1F 0xC7 SWAP3 0xDF 0xC9 0xC7 0xB7 CREATE 0xD6 SMOD DUP12 SWAP14 0xE 0xCD OR 0xC1 LOG3 PUSH1 0x57 0xD0 0xBB 0xB6 MSIZE PUSH22 0xA1BC1FB264736F6C6343000812003300000000000000 ",
							"sourceMap": "617:2230:0:-:0;;;1116:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1203:11;1181:12;;:34;;;;;;;;;;;;;;;;;;1247:13;1225:12;;:36;;;;;;;;;;;;;;;;;;1116:152;;617:2230;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;617:2230:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balance_62": {
									"entryPoint": 2175,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_535": {
									"entryPoint": 2560,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balance_148": {
									"entryPoint": 1444,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositStake_137": {
									"entryPoint": 1515,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@duration_52": {
									"entryPoint": 751,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_236": {
									"entryPoint": 2199,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@finishAt_54": {
									"entryPoint": 1302,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDuration_186": {
									"entryPoint": 1434,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_58": {
									"entryPoint": 757,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_46": {
									"entryPoint": 2137,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDuration_178": {
									"entryPoint": 2448,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_204": {
									"entryPoint": 1356,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_43": {
									"entryPoint": 1308,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakeRewards_50": {
									"entryPoint": 763,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_48": {
									"entryPoint": 1350,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatedAt_56": {
									"entryPoint": 1344,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawReward_280": {
									"entryPoint": 769,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$359_to_t_address_fromStack": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$359__to_t_address__fromStack_reversed": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$359_to_t_address": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14964:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:3"
															},
															"nodeType": "YulIf",
															"src": "822:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:3",
														"type": ""
													}
												],
												"src": "769:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:3",
														"type": ""
													}
												],
												"src": "897:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:3"
															},
															"nodeType": "YulIf",
															"src": "1118:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:3",
														"type": ""
													}
												],
												"src": "1042:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1558:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1537:3:3",
														"type": ""
													}
												],
												"src": "1509:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1645:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1615:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1625:9:3",
														"type": ""
													}
												],
												"src": "1575:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1793:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1763:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1773:9:3",
														"type": ""
													}
												],
												"src": "1723:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$359_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1909:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1919:9:3",
														"type": ""
													}
												],
												"src": "1855:140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$359_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:64:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$359_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2068:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2075:3:3",
														"type": ""
													}
												],
												"src": "2001:159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2278:138:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2288:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2300:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2311:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2288:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$359_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2324:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:85:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$359__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2250:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2262:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2273:4:3",
														"type": ""
													}
												],
												"src": "2166:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2467:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2477:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2449:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2459:7:3",
														"type": ""
													}
												],
												"src": "2422:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:43:3"
															},
															"nodeType": "YulIf",
															"src": "2577:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2560:5:3",
														"type": ""
													}
												],
												"src": "2524:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2682:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2690:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2698:5:3",
														"type": ""
													}
												],
												"src": "2652:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2909:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:32:3"
															},
															"nodeType": "YulIf",
															"src": "2873:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3002:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2844:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:3",
														"type": ""
													}
												],
												"src": "2797:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3266:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3216:11:3",
														"type": ""
													}
												],
												"src": "3132:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:14:3"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74206561726e656420616e792072657761726473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3447:33:3",
																		"type": "",
																		"value": "You have not earned any rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3405:6:3",
														"type": ""
													}
												],
												"src": "3307:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3640:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3650:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3716:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3657:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3650:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3822:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660",
																	"nodeType": "YulIdentifier",
																	"src": "3733:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3733:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3628:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3636:3:3",
														"type": ""
													}
												],
												"src": "3494:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4047:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4059:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4070:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4055:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4047:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4090:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4113:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4119:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4083:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4139:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4273:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4147:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4139:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4017:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4032:4:3",
														"type": ""
													}
												],
												"src": "3866:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4319:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4336:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4339:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4329:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4329:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4433:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4426:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4460:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4450:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4450:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4450:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4291:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4522:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4532:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4555:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4537:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4532:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4566:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4589:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4571:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4566:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4600:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4612:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4615:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4608:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4600:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4642:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4644:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4644:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4644:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4633:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4639:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4630:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:11:3"
															},
															"nodeType": "YulIf",
															"src": "4627:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4508:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4511:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4517:4:3",
														"type": ""
													}
												],
												"src": "4477:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4783:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4805:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4813:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4801:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4801:14:3"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520656e6f75676820746f2077697468647261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4817:34:3",
																		"type": "",
																		"value": "You don't have enough to withdra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4873:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4881:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4869:15:3"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4886:3:3",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4862:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4862:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4775:6:3",
														"type": ""
													}
												],
												"src": "4677:220:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5049:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5059:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5125:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5130:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5066:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5231:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2",
																	"nodeType": "YulIdentifier",
																	"src": "5142:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5142:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5244:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5255:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5037:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5045:3:3",
														"type": ""
													}
												],
												"src": "4903:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5446:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5456:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5468:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5479:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5456:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5514:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5499:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5522:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5528:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5492:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5548:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5682:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5556:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5548:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5426:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5441:4:3",
														"type": ""
													}
												],
												"src": "5275:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5765:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5782:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5805:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5787:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5787:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5775:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5775:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5753:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5760:3:3",
														"type": ""
													}
												],
												"src": "5700:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5950:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5960:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5972:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5983:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5968:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5968:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5960:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6040:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6053:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6064:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6049:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6049:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5996:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5996:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6121:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6134:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6145:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6130:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6130:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6077:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6077:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5914:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5926:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5934:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5945:4:3",
														"type": ""
													}
												],
												"src": "5824:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6204:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6214:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6239:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6232:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6214:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6186:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6196:7:3",
														"type": ""
													}
												],
												"src": "6162:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6298:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6352:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6361:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6364:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6354:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6354:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6321:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6343:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6328:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6328:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6318:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6318:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6311:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:40:3"
															},
															"nodeType": "YulIf",
															"src": "6308:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6291:5:3",
														"type": ""
													}
												],
												"src": "6258:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6450:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6465:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6459:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6450:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6505:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6481:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6418:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6426:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6434:5:3",
														"type": ""
													}
												],
												"src": "6380:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6597:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6643:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6645:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6645:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6645:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6618:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6627:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6614:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6614:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6610:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6610:32:3"
															},
															"nodeType": "YulIf",
															"src": "6607:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6736:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6751:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6765:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6755:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6780:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6823:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6834:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6819:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6819:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6843:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6790:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6790:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6780:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6567:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6578:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6590:6:3",
														"type": ""
													}
												],
												"src": "6523:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6980:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7002:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6998:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6998:14:3"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7014:27:3",
																		"type": "",
																		"value": "Failed to transfer tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6991:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6972:6:3",
														"type": ""
													}
												],
												"src": "6874:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7201:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7211:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7282:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7218:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7211:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7383:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276",
																	"nodeType": "YulIdentifier",
																	"src": "7294:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7294:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7407:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7403:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7189:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7197:3:3",
														"type": ""
													}
												],
												"src": "7055:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7608:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7655:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7666:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7674:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7670:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7670:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7644:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7700:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7834:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7708:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7700:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7578:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7593:4:3",
														"type": ""
													}
												],
												"src": "7427:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7896:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7906:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7929:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7911:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7906:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7940:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7963:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7945:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7940:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7974:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7985:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7988:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7981:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7974:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8014:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8016:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8016:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8016:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8006:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8009:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8003:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:10:3"
															},
															"nodeType": "YulIf",
															"src": "8000:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7883:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7886:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7892:3:3",
														"type": ""
													}
												],
												"src": "7852:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8155:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8177:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8185:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8173:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8173:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67207374696c6c20696e2070726f6772657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8189:27:3",
																		"type": "",
																		"value": "Staking still in progress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8166:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8147:6:3",
														"type": ""
													}
												],
												"src": "8049:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8376:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8386:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8452:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8457:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8393:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8386:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8558:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																	"nodeType": "YulIdentifier",
																	"src": "8469:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8469:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8571:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8582:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8587:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8571:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8364:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8372:3:3",
														"type": ""
													}
												],
												"src": "8230:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8773:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8783:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8795:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8806:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8791:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8783:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8830:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8841:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8826:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8826:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8849:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8855:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8845:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8845:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8819:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8819:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8875:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9009:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8883:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8875:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8753:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8768:4:3",
														"type": ""
													}
												],
												"src": "8602:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9125:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9135:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9147:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9143:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9143:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9135:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9215:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9228:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9239:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9224:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9224:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9171:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9171:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9097:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9109:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9120:4:3",
														"type": ""
													}
												],
												"src": "9027:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9318:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9328:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9343:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9337:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9328:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9386:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9359:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9359:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9296:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9304:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9312:5:3",
														"type": ""
													}
												],
												"src": "9255:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9481:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9527:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9529:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9529:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9529:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9502:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9523:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:32:3"
															},
															"nodeType": "YulIf",
															"src": "9491:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "9620:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9635:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9649:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9639:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9664:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9710:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9721:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9706:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9706:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9730:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9674:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9674:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9664:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9451:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9462:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9474:6:3",
														"type": ""
													}
												],
												"src": "9404:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9867:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9889:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9897:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:14:3"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9901:29:3",
																		"type": "",
																		"value": "Not enough tokens for stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9859:6:3",
														"type": ""
													}
												],
												"src": "9761:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10090:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10100:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10166:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10171:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10107:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10107:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10100:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10272:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																	"nodeType": "YulIdentifier",
																	"src": "10183:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10183:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10183:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10285:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10296:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10292:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10292:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10285:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10078:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10086:3:3",
														"type": ""
													}
												],
												"src": "9944:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10487:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10497:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10509:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10520:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10505:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10505:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10497:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10555:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10540:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10563:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10569:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10559:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10559:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10533:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10533:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10533:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10589:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10723:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10597:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10589:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10467:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10482:4:3",
														"type": ""
													}
												],
												"src": "10316:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10895:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10905:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10917:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10928:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10913:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10913:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10905:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10985:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11009:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10994:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10941:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10941:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10941:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11066:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11079:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11090:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11075:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11075:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11022:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11022:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11022:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11148:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11161:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11172:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11157:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11104:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11104:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11104:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10851:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10863:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10871:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10879:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10890:4:3",
														"type": ""
													}
												],
												"src": "10741:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11295:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11317:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11325:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:14:3"
																	},
																	{
																		"hexValue": "4661696c656420746f207374616b6520746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11329:23:3",
																		"type": "",
																		"value": "Failed to stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11306:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11306:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11287:6:3",
														"type": ""
													}
												],
												"src": "11189:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11512:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11522:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11588:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11593:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11529:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11529:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11522:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11694:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																	"nodeType": "YulIdentifier",
																	"src": "11605:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11605:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11605:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11707:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11718:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11723:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11714:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11500:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11508:3:3",
														"type": ""
													}
												],
												"src": "11366:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11909:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11919:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11931:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11942:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11927:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11927:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11919:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11966:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11977:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11962:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11962:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11985:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11991:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11981:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11981:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11955:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12145:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12019:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12011:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11889:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11904:4:3",
														"type": ""
													}
												],
												"src": "11738:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12269:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12291:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12299:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12287:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12287:14:3"
																	},
																	{
																		"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12303:32:3",
																		"type": "",
																		"value": "You have not staked any tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12280:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12280:56:3"
														}
													]
												},
												"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12261:6:3",
														"type": ""
													}
												],
												"src": "12163:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12495:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12505:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12571:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12576:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12512:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12677:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																	"nodeType": "YulIdentifier",
																	"src": "12588:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12588:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12588:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12690:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12701:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12706:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12697:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12690:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12483:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12491:3:3",
														"type": ""
													}
												],
												"src": "12349:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12892:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12902:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12914:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12925:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12910:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12902:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12949:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12960:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12945:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12945:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12968:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12964:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12938:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12938:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12938:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12994:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13128:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13002:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13002:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12994:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12872:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12887:4:3",
														"type": ""
													}
												],
												"src": "12721:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13174:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13191:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13194:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13184:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13288:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13291:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13281:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13281:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13281:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13312:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13315:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13305:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13305:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13146:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13374:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13384:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13407:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13389:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13389:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13384:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13418:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13441:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13423:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13423:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13418:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13465:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13467:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13467:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13467:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13462:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:9:3"
															},
															"nodeType": "YulIf",
															"src": "13452:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13497:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13506:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13509:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13502:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13502:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13497:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13363:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13366:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13372:1:3",
														"type": ""
													}
												],
												"src": "13332:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13571:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13581:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13604:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13586:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13581:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13615:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13638:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13620:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13620:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13615:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13649:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13672:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13675:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13668:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "13653:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13686:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "13715:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13697:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13697:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13686:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13904:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13906:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13906:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13906:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13837:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13830:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13830:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13860:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13867:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13876:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13863:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13863:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13857:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13857:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13810:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13810:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13790:113:3"
															},
															"nodeType": "YulIf",
															"src": "13787:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13554:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13557:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13563:7:3",
														"type": ""
													}
												],
												"src": "13523:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14045:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14067:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14075:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14063:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14063:14:3"
																	},
																	{
																		"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14079:34:3",
																		"type": "",
																		"value": "can't set date to a previous tim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14056:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14056:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14135:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14143:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14131:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14131:15:3"
																	},
																	{
																		"hexValue": "657374616d70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14148:8:3",
																		"type": "",
																		"value": "estamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14124:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14124:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14124:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14037:6:3",
														"type": ""
													}
												],
												"src": "13939:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14316:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14326:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14392:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14397:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14333:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14333:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14326:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14498:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																	"nodeType": "YulIdentifier",
																	"src": "14409:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14409:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14409:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14511:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14522:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14527:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14518:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14518:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14511:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14304:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14312:3:3",
														"type": ""
													}
												],
												"src": "14170:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14713:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14723:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14735:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14746:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14731:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14731:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14723:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14770:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14781:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14766:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14789:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14795:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14785:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14785:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14759:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14759:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14815:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14949:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14823:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14823:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14815:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14693:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14708:4:3",
														"type": ""
													}
												],
												"src": "14542:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$359_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$359_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$359_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$359__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$359_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not earned any rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have enough to withdra\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking still in progress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens for stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not staked any tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't set date to a previous tim\")\n\n        mstore(add(memPtr, 32), \"estamp\")\n\n    }\n\n    function abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD3ACEAE2 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xD6F19262 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2D3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xAD2E8C9B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x24B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x67D3B488 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x7519AB50 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1D5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x327BCAC5 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B PUSH2 0x897 JUMP JUMPDEST GT PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x394 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST LT PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43B SWAP3 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP1 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xEF8 JUMP JUMPDEST LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79D SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x850 DUP2 PUSH1 0x2 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x91A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x911 SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x7 SLOAD PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SLOAD LT PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x9F0 DUP2 PUSH1 0x5 SLOAD PUSH2 0xA00 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA29 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA16 JUMP JUMPDEST DUP2 EQ PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9F DUP5 DUP3 DUP6 ADD PUSH2 0xA66 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAED PUSH2 0xAE8 PUSH2 0xAE3 DUP5 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF DUP3 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 DUP3 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB21 DUP2 PUSH2 0xB06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP3 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP2 EQ PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB7A DUP2 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB95 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA4 DUP5 DUP3 DUP6 ADD PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74206561726E656420616E79207265776172647300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF4 PUSH1 0x1F DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xBFF DUP3 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC23 DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6F DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC86 PUSH2 0xC2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206861766520656E6F75676820746F2077697468647261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 PUSH1 0x21 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xCF4 DUP3 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD18 DUP2 PUSH2 0xCDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xB42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xD50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD57 JUMP JUMPDEST DUP2 EQ PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD89 DUP2 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDB3 DUP5 DUP3 DUP6 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220746F6B656E7300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF2 PUSH1 0x19 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xDFD DUP3 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE21 DUP2 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xC2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67207374696C6C20696E2070726F677265737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE92 PUSH1 0x19 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC1 DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEF2 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH2 0xF0D PUSH2 0xA4A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF1C DUP5 DUP3 DUP6 ADD PUSH2 0xEE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B PUSH1 0x1B DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP3 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8A DUP2 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xFB3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0xFC0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207374616B6520746F6B656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFE PUSH1 0x15 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1009 DUP3 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x102D DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F74207374616B656420616E7920746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106A PUSH1 0x1E DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1099 DUP2 PUSH2 0x105D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10DA DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E5 DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x10A0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B DUP3 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1116 DUP4 PUSH2 0xA16 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1124 DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xC2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E277420736574206461746520746F20612070726576696F75732074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657374616D700000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119E PUSH1 0x26 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP PUSH2 0x11A9 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11CD DUP2 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xD0 0xEC INVALID 0x1F 0xC7 SWAP3 0xDF 0xC9 0xC7 0xB7 CREATE 0xD6 SMOD DUP12 SWAP14 0xE 0xCD OR 0xC1 LOG3 PUSH1 0x57 0xD0 0xBB 0xB6 MSIZE PUSH22 0xA1BC1FB264736F6C6343000812003300000000000000 ",
							"sourceMap": "617:2230:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;793:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2466:372;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;877:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;903:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2090:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1999:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1639:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1274:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;732:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2246:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1739:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;833:20;;;;:::o;931:16::-;;;;:::o;793:29::-;;;;:::o;2466:372::-;2544:1;2533:8;:6;:8::i;:::-;:12;2525:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2644:7;2610:19;:31;2630:10;2610:31;;;;;;;;;;;;;;;;2599:8;:6;:8::i;:::-;:42;;;;:::i;:::-;:52;2591:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2707:12;;;;;;;;;;;:21;;;2729:10;2741:7;2707:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2699:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2824:7;2789:19;:31;2809:10;2789:31;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;2466:372;:::o;877:20::-;;;;:::o;700:26::-;;;;;;;;;;;;:::o;903:21::-;;;;:::o;765:22::-;;;;:::o;2090:150::-;2165:15;2154:8;;:26;2146:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2228:5;2221:4;:12;;;;2090:150;:::o;1999:85::-;2044:7;2069:8;;2062:15;;1999:85;:::o;1639:94::-;1681:7;1706:8;:20;1715:10;1706:20;;;;;;;;;;;;;;;;1699:27;;1639:94;:::o;1274:360::-;1375:6;1337:12;;;;;;;;;;:22;;;1360:10;1337:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;1329:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1431:12;;;;;;;;;;:25;;;1457:10;1477:4;1484:6;1431:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1423:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1550:32;1575:6;1550:8;:20;1559:10;1550:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1527:8;:20;1536:10;1527:20;;;;;;;;;;;;;;;:55;;;;1605:22;1620:6;1605:10;;:14;;:22;;;;:::i;:::-;1592:10;:35;;;;1274:360;:::o;732:26::-;;;;;;;;;;;;;:::o;967:41::-;;;;;;;;;;;;;;;;;:::o;2246:214::-;2284:7;2333:1;2310:8;:20;2319:10;2310:20;;;;;;;;;;;;;;;;:24;2302:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2442:9;;2424:15;:27;;;;:::i;:::-;2416:3;2411:4;;:8;;;;:::i;:::-;2387;:20;2396:10;2387:20;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:66;;;;:::i;:::-;2380:73;;2246:214;:::o;1739:254::-;1816:15;1805:8;;:26;1797:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1896:9;1885:8;:20;;;;1926:23;1939:9;1926:8;;:12;;:23;;;;:::i;:::-;1915:8;:34;;;;1971:15;1959:9;:27;;;;1739:254;:::o;2755:96:2:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:250::-;2273:4;2311:2;2300:9;2296:18;2288:26;;2324:85;2406:1;2395:9;2391:17;2382:6;2324:85;:::i;:::-;2166:250;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:169::-;3216:11;3250:6;3245:3;3238:19;3290:4;3285:3;3281:14;3266:29;;3132:169;;;;:::o;3307:181::-;3447:33;3443:1;3435:6;3431:14;3424:57;3307:181;:::o;3494:366::-;3636:3;3657:67;3721:2;3716:3;3657:67;:::i;:::-;3650:74;;3733:93;3822:3;3733:93;:::i;:::-;3851:2;3846:3;3842:12;3835:19;;3494:366;;;:::o;3866:419::-;4032:4;4070:2;4059:9;4055:18;4047:26;;4119:9;4113:4;4109:20;4105:1;4094:9;4090:17;4083:47;4147:131;4273:4;4147:131;:::i;:::-;4139:139;;3866:419;;;:::o;4291:180::-;4339:77;4336:1;4329:88;4436:4;4433:1;4426:15;4460:4;4457:1;4450:15;4477:194;4517:4;4537:20;4555:1;4537:20;:::i;:::-;4532:25;;4571:20;4589:1;4571:20;:::i;:::-;4566:25;;4615:1;4612;4608:9;4600:17;;4639:1;4633:4;4630:11;4627:37;;;4644:18;;:::i;:::-;4627:37;4477:194;;;;:::o;4677:220::-;4817:34;4813:1;4805:6;4801:14;4794:58;4886:3;4881:2;4873:6;4869:15;4862:28;4677:220;:::o;4903:366::-;5045:3;5066:67;5130:2;5125:3;5066:67;:::i;:::-;5059:74;;5142:93;5231:3;5142:93;:::i;:::-;5260:2;5255:3;5251:12;5244:19;;4903:366;;;:::o;5275:419::-;5441:4;5479:2;5468:9;5464:18;5456:26;;5528:9;5522:4;5518:20;5514:1;5503:9;5499:17;5492:47;5556:131;5682:4;5556:131;:::i;:::-;5548:139;;5275:419;;;:::o;5700:118::-;5787:24;5805:5;5787:24;:::i;:::-;5782:3;5775:37;5700:118;;:::o;5824:332::-;5945:4;5983:2;5972:9;5968:18;5960:26;;5996:71;6064:1;6053:9;6049:17;6040:6;5996:71;:::i;:::-;6077:72;6145:2;6134:9;6130:18;6121:6;6077:72;:::i;:::-;5824:332;;;;;:::o;6162:90::-;6196:7;6239:5;6232:13;6225:21;6214:32;;6162:90;;;:::o;6258:116::-;6328:21;6343:5;6328:21;:::i;:::-;6321:5;6318:32;6308:60;;6364:1;6361;6354:12;6308:60;6258:116;:::o;6380:137::-;6434:5;6465:6;6459:13;6450:22;;6481:30;6505:5;6481:30;:::i;:::-;6380:137;;;;:::o;6523:345::-;6590:6;6639:2;6627:9;6618:7;6614:23;6610:32;6607:119;;;6645:79;;:::i;:::-;6607:119;6765:1;6790:61;6843:7;6834:6;6823:9;6819:22;6790:61;:::i;:::-;6780:71;;6736:125;6523:345;;;;:::o;6874:175::-;7014:27;7010:1;7002:6;6998:14;6991:51;6874:175;:::o;7055:366::-;7197:3;7218:67;7282:2;7277:3;7218:67;:::i;:::-;7211:74;;7294:93;7383:3;7294:93;:::i;:::-;7412:2;7407:3;7403:12;7396:19;;7055:366;;;:::o;7427:419::-;7593:4;7631:2;7620:9;7616:18;7608:26;;7680:9;7674:4;7670:20;7666:1;7655:9;7651:17;7644:47;7708:131;7834:4;7708:131;:::i;:::-;7700:139;;7427:419;;;:::o;7852:191::-;7892:3;7911:20;7929:1;7911:20;:::i;:::-;7906:25;;7945:20;7963:1;7945:20;:::i;:::-;7940:25;;7988:1;7985;7981:9;7974:16;;8009:3;8006:1;8003:10;8000:36;;;8016:18;;:::i;:::-;8000:36;7852:191;;;;:::o;8049:175::-;8189:27;8185:1;8177:6;8173:14;8166:51;8049:175;:::o;8230:366::-;8372:3;8393:67;8457:2;8452:3;8393:67;:::i;:::-;8386:74;;8469:93;8558:3;8469:93;:::i;:::-;8587:2;8582:3;8578:12;8571:19;;8230:366;;;:::o;8602:419::-;8768:4;8806:2;8795:9;8791:18;8783:26;;8855:9;8849:4;8845:20;8841:1;8830:9;8826:17;8819:47;8883:131;9009:4;8883:131;:::i;:::-;8875:139;;8602:419;;;:::o;9027:222::-;9120:4;9158:2;9147:9;9143:18;9135:26;;9171:71;9239:1;9228:9;9224:17;9215:6;9171:71;:::i;:::-;9027:222;;;;:::o;9255:143::-;9312:5;9343:6;9337:13;9328:22;;9359:33;9386:5;9359:33;:::i;:::-;9255:143;;;;:::o;9404:351::-;9474:6;9523:2;9511:9;9502:7;9498:23;9494:32;9491:119;;;9529:79;;:::i;:::-;9491:119;9649:1;9674:64;9730:7;9721:6;9710:9;9706:22;9674:64;:::i;:::-;9664:74;;9620:128;9404:351;;;;:::o;9761:177::-;9901:29;9897:1;9889:6;9885:14;9878:53;9761:177;:::o;9944:366::-;10086:3;10107:67;10171:2;10166:3;10107:67;:::i;:::-;10100:74;;10183:93;10272:3;10183:93;:::i;:::-;10301:2;10296:3;10292:12;10285:19;;9944:366;;;:::o;10316:419::-;10482:4;10520:2;10509:9;10505:18;10497:26;;10569:9;10563:4;10559:20;10555:1;10544:9;10540:17;10533:47;10597:131;10723:4;10597:131;:::i;:::-;10589:139;;10316:419;;;:::o;10741:442::-;10890:4;10928:2;10917:9;10913:18;10905:26;;10941:71;11009:1;10998:9;10994:17;10985:6;10941:71;:::i;:::-;11022:72;11090:2;11079:9;11075:18;11066:6;11022:72;:::i;:::-;11104;11172:2;11161:9;11157:18;11148:6;11104:72;:::i;:::-;10741:442;;;;;;:::o;11189:171::-;11329:23;11325:1;11317:6;11313:14;11306:47;11189:171;:::o;11366:366::-;11508:3;11529:67;11593:2;11588:3;11529:67;:::i;:::-;11522:74;;11605:93;11694:3;11605:93;:::i;:::-;11723:2;11718:3;11714:12;11707:19;;11366:366;;;:::o;11738:419::-;11904:4;11942:2;11931:9;11927:18;11919:26;;11991:9;11985:4;11981:20;11977:1;11966:9;11962:17;11955:47;12019:131;12145:4;12019:131;:::i;:::-;12011:139;;11738:419;;;:::o;12163:180::-;12303:32;12299:1;12291:6;12287:14;12280:56;12163:180;:::o;12349:366::-;12491:3;12512:67;12576:2;12571:3;12512:67;:::i;:::-;12505:74;;12588:93;12677:3;12588:93;:::i;:::-;12706:2;12701:3;12697:12;12690:19;;12349:366;;;:::o;12721:419::-;12887:4;12925:2;12914:9;12910:18;12902:26;;12974:9;12968:4;12964:20;12960:1;12949:9;12945:17;12938:47;13002:131;13128:4;13002:131;:::i;:::-;12994:139;;12721:419;;;:::o;13146:180::-;13194:77;13191:1;13184:88;13291:4;13288:1;13281:15;13315:4;13312:1;13305:15;13332:185;13372:1;13389:20;13407:1;13389:20;:::i;:::-;13384:25;;13423:20;13441:1;13423:20;:::i;:::-;13418:25;;13462:1;13452:35;;13467:18;;:::i;:::-;13452:35;13509:1;13506;13502:9;13497:14;;13332:185;;;;:::o;13523:410::-;13563:7;13586:20;13604:1;13586:20;:::i;:::-;13581:25;;13620:20;13638:1;13620:20;:::i;:::-;13615:25;;13675:1;13672;13668:9;13697:30;13715:11;13697:30;:::i;:::-;13686:41;;13876:1;13867:7;13863:15;13860:1;13857:22;13837:1;13830:9;13810:83;13787:139;;13906:18;;:::i;:::-;13787:139;13571:362;13523:410;;;;:::o;13939:225::-;14079:34;14075:1;14067:6;14063:14;14056:58;14148:8;14143:2;14135:6;14131:15;14124:33;13939:225;:::o;14170:366::-;14312:3;14333:67;14397:2;14392:3;14333:67;:::i;:::-;14326:74;;14409:93;14498:3;14409:93;:::i;:::-;14527:2;14522:3;14518:12;14511:19;;14170:366;;;:::o;14542:419::-;14708:4;14746:2;14735:9;14731:18;14723:26;;14795:9;14789:4;14785:20;14781:1;14770:9;14766:17;14759:47;14823:131;14949:4;14823:131;:::i;:::-;14815:139;;14542:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "923600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_balance(address)": "2858",
								"balance()": "2593",
								"depositStake(uint256)": "infinite",
								"duration()": "2453",
								"earned()": "infinite",
								"finishAt()": "2452",
								"getDuration()": "2482",
								"rate()": "2475",
								"rewardsToken()": "infinite",
								"setDuration(uint256)": "infinite",
								"setRewardRate(uint256)": "24665",
								"stakingToken()": "infinite",
								"totalStake()": "2518",
								"totalStakeRewards()": "2497",
								"updatedAt()": "2496",
								"withdrawReward(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1116,
									"end": 1268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1203,
									"end": 1214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1181,
									"end": 1215,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1247,
									"end": 1260,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1237,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1225,
									"end": 1237,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 617,
									"end": 2847,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2d0ecfe1fc792dfc9c7b7f0d6078b9d0ecd17c1a36057d0bbb65975a1bc1fb264736f6c63430008120033",
									".code": [
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "9E447FC6"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "D3ACEAE2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "D6F19262"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "F6BE71D1"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "9E447FC6"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "AD2E8C9B"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "CB82CC8F"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "67D3B488"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "67D3B488"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "7519AB50"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "327BCAC5"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "523A3F08"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 617,
											"end": 2847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2466,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2466,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2090,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2090,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1999,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1999,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1639,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1639,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1274,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1274,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2246,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2246,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1739,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1739,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 931,
											"end": 947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2533,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2533,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2525,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2525,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2599,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2599,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2599,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2599,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2591,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2591,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2707,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2707,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2707,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2699,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2699,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2789,
											"end": 2831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2466,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 700,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 903,
											"end": 924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 903,
											"end": 924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 765,
											"end": 787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2146,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2146,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1706,
											"end": 1726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1337,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1337,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1329,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1329,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1457,
											"end": 1467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1477,
											"end": 1481,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1431,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1431,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1431,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1423,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1423,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1550,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1546,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1605,
											"end": 1615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1605,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1605,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1592,
											"end": 1627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 967,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2334,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2302,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2424,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2424,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2419,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2411,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2406,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2387,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2387,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1831,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1797,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1797,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1896,
											"end": 1905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1939,
											"end": 1948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1926,
											"end": 1938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1926,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1915,
											"end": 1949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 1986,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1959,
											"end": 1986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2324,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3488,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3307,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3480,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F74206561726E656420616E79207265776172647300"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3860,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3494,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3716,
											"end": 3719,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3657,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3724,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3657,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3733,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3826,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3733,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3849,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3835,
											"end": 3854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3835,
											"end": 3854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 4285,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3866,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4119,
											"end": 4128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4129,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4090,
											"end": 4107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4083,
											"end": 4130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4273,
											"end": 4277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4147,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4278,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4147,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4139,
											"end": 4278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4139,
											"end": 4278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 4285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 4285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 4285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3866,
											"end": 4285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4471,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4291,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4416,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4440,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4465,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4537,
											"end": 4557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4557,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4537,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4571,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4566,
											"end": 4591,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4566,
											"end": 4591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4617,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4633,
											"end": 4637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4641,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4664,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4627,
											"end": 4664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4644,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4664,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4627,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4677,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4851,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520646F6E2774206861766520656E6F75676820746F2077697468647261"
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4801,
											"end": 4815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4889,
											"name": "PUSH",
											"source": 3,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 4884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 5269,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4903,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5130,
											"end": 5132,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5125,
											"end": 5128,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5066,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5133,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5066,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5231,
											"end": 5234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5235,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5142,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5244,
											"end": 5263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5244,
											"end": 5263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 5269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 5269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 5269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 5269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5694,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5275,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5682,
											"end": 5686,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5556,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5687,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5556,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5275,
											"end": 5694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5818,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5700,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5787,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5811,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5787,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5812,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5985,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 5981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 5986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 5986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6064,
											"end": 6065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5996,
											"end": 6067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6067,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5996,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6134,
											"end": 6143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6077,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6149,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6077,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 6156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6374,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6258,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6328,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 6328,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6318,
											"end": 6350,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6308,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6308,
											"end": 6368,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6366,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6308,
											"end": 6368,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6308,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6459,
											"end": 6472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6505,
											"end": 6510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6481,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6590,
											"end": 6596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6625,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6614,
											"end": 6637,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6726,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6607,
											"end": 6726,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6645,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6645,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6724,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6645,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6726,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6607,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6832,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6819,
											"end": 6841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6790,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6790,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6790,
											"end": 6851,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6790,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6736,
											"end": 6861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6523,
											"end": 6868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6874,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7014,
											"end": 7041,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F207472616E7366657220746F6B656E7300000000000000"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7012,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6991,
											"end": 7042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 7049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7282,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7218,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7218,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7211,
											"end": 7285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7383,
											"end": 7386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7294,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 7294,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7407,
											"end": 7410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7396,
											"end": 7415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7616,
											"end": 7634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7674,
											"end": 7678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7690,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7666,
											"end": 7667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7668,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7644,
											"end": 7691,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7834,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7708,
											"end": 7839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7708,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7700,
											"end": 7839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7700,
											"end": 7839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7892,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7911,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7911,
											"end": 7931,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7911,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7945,
											"end": 7965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7965,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 7989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 7990,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7974,
											"end": 7990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7974,
											"end": 7990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8009,
											"end": 8012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8016,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8016,
											"end": 8034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8034,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8016,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 8043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8224,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8049,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8189,
											"end": 8216,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67207374696C6C20696E2070726F677265737300000000000000"
										},
										{
											"begin": 8185,
											"end": 8186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8166,
											"end": 8217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8049,
											"end": 8224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8596,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8230,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8372,
											"end": 8375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 8452,
											"end": 8455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8393,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8460,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8393,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8558,
											"end": 8561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8469,
											"end": 8562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8562,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8469,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8582,
											"end": 8585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8578,
											"end": 8590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8230,
											"end": 8596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 9021,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8602,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8795,
											"end": 8804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8783,
											"end": 8809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8783,
											"end": 8809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8855,
											"end": 8864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9009,
											"end": 9013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8883,
											"end": 9014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 9014,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8883,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 9014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 9014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 9021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 9021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 9021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 9021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9120,
											"end": 9124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9224,
											"end": 9241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9215,
											"end": 9221,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 9171,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9312,
											"end": 9317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9337,
											"end": 9350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9328,
											"end": 9350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9386,
											"end": 9391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9359,
											"end": 9392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9255,
											"end": 9398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9502,
											"end": 9509,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9498,
											"end": 9521,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9494,
											"end": 9526,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 9529,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9491,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9730,
											"end": 9737,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9721,
											"end": 9727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9719,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9706,
											"end": 9728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9674,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9664,
											"end": 9738,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9664,
											"end": 9738,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9404,
											"end": 9755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9761,
											"end": 9938,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 9761,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9901,
											"end": 9930,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F75676820746F6B656E7320666F72207374616B650000000000"
										},
										{
											"begin": 9897,
											"end": 9898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9885,
											"end": 9899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9878,
											"end": 9931,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9761,
											"end": 9938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9761,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10310,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 9944,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10086,
											"end": 10089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10171,
											"end": 10173,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 10166,
											"end": 10169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10107,
											"end": 10174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 10107,
											"end": 10174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10107,
											"end": 10174,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10107,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10100,
											"end": 10174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10100,
											"end": 10174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10272,
											"end": 10275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10183,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10183,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10301,
											"end": 10303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10292,
											"end": 10304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10285,
											"end": 10304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10285,
											"end": 10304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10735,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10316,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10482,
											"end": 10486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10522,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10505,
											"end": 10523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10497,
											"end": 10523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10497,
											"end": 10523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10569,
											"end": 10578,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10563,
											"end": 10567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10559,
											"end": 10579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10540,
											"end": 10557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10723,
											"end": 10727,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10597,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10597,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10589,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10589,
											"end": 10728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10917,
											"end": 10926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10941,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10994,
											"end": 11011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10941,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10941,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10941,
											"end": 11012,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10941,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11090,
											"end": 11092,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11075,
											"end": 11093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 11022,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11094,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11022,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11104,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 11172,
											"end": 11174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11157,
											"end": 11175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11154,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11104,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 11104,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11104,
											"end": 11176,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 11104,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 11183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11189,
											"end": 11360,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 11189,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11329,
											"end": 11352,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F207374616B6520746F6B656E0000000000000000000000"
										},
										{
											"begin": 11325,
											"end": 11326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11317,
											"end": 11323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11313,
											"end": 11327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11306,
											"end": 11353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11189,
											"end": 11360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11189,
											"end": 11360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11732,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 11366,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11529,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 11593,
											"end": 11595,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 11588,
											"end": 11591,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11529,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 11529,
											"end": 11596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11529,
											"end": 11596,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 11529,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11522,
											"end": 11596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11522,
											"end": 11596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11605,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 11694,
											"end": 11697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11605,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 11605,
											"end": 11698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11605,
											"end": 11698,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 11605,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11718,
											"end": 11721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11714,
											"end": 11726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 11726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 11726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11738,
											"end": 12157,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 11738,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11904,
											"end": 11908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 11944,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11931,
											"end": 11940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11927,
											"end": 11945,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11919,
											"end": 11945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11919,
											"end": 11945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11991,
											"end": 12000,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11985,
											"end": 11989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11981,
											"end": 12001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11977,
											"end": 11978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11966,
											"end": 11975,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11962,
											"end": 11979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11955,
											"end": 12002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12019,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 12145,
											"end": 12149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12019,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 12019,
											"end": 12150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12019,
											"end": 12150,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 12019,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12011,
											"end": 12150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12011,
											"end": 12150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11738,
											"end": 12157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11738,
											"end": 12157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11738,
											"end": 12157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11738,
											"end": 12157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12343,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 12163,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12303,
											"end": 12335,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F74207374616B656420616E7920746F6B656E730000"
										},
										{
											"begin": 12299,
											"end": 12300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12287,
											"end": 12301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12280,
											"end": 12336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 12576,
											"end": 12578,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 12571,
											"end": 12574,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 12512,
											"end": 12579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 12588,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12706,
											"end": 12708,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12697,
											"end": 12709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12349,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12887,
											"end": 12891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12925,
											"end": 12927,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12910,
											"end": 12928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12938,
											"end": 12985,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 13128,
											"end": 13132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 13002,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13146,
											"end": 13326,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 13146,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13194,
											"end": 13271,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13291,
											"end": 13295,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 13288,
											"end": 13289,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13281,
											"end": 13296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13315,
											"end": 13319,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13312,
											"end": 13313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13305,
											"end": 13320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13389,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 13407,
											"end": 13408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13389,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 13389,
											"end": 13409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13389,
											"end": 13409,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 13389,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13384,
											"end": 13409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13384,
											"end": 13409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 13441,
											"end": 13442,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 13423,
											"end": 13443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 13423,
											"end": 13443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13418,
											"end": 13443,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13418,
											"end": 13443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13462,
											"end": 13463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13452,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 13452,
											"end": 13487,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 13467,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 13467,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13452,
											"end": 13487,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 13452,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13509,
											"end": 13510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13506,
											"end": 13507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13502,
											"end": 13511,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 13497,
											"end": 13511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13497,
											"end": 13511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13332,
											"end": 13517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13563,
											"end": 13570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 13586,
											"end": 13606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13581,
											"end": 13606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13581,
											"end": 13606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 13620,
											"end": 13640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13615,
											"end": 13640,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13615,
											"end": 13640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13672,
											"end": 13673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13677,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 13715,
											"end": 13726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 13697,
											"end": 13727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 13697,
											"end": 13727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13686,
											"end": 13727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13686,
											"end": 13727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13867,
											"end": 13874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13863,
											"end": 13878,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 13860,
											"end": 13861,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13857,
											"end": 13879,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13837,
											"end": 13838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13830,
											"end": 13839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13810,
											"end": 13893,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 13787,
											"end": 13926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 13787,
											"end": 13926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13906,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 13906,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 13906,
											"end": 13924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13906,
											"end": 13924,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 13906,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13787,
											"end": 13926,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 13787,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13571,
											"end": 13933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13523,
											"end": 13933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13939,
											"end": 14164,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 13939,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14079,
											"end": 14113,
											"name": "PUSH",
											"source": 3,
											"value": "63616E277420736574206461746520746F20612070726576696F75732074696D"
										},
										{
											"begin": 14075,
											"end": 14076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14067,
											"end": 14073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14056,
											"end": 14114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14148,
											"end": 14156,
											"name": "PUSH",
											"source": 3,
											"value": "657374616D700000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14143,
											"end": 14145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14131,
											"end": 14146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14124,
											"end": 14157,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13939,
											"end": 14164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13939,
											"end": 14164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14170,
											"end": 14536,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 14170,
											"end": 14536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14312,
											"end": 14315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14333,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 14397,
											"end": 14399,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 14392,
											"end": 14395,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14333,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 14333,
											"end": 14400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14333,
											"end": 14400,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 14333,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14326,
											"end": 14400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14326,
											"end": 14400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 14498,
											"end": 14501,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 14409,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14502,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 14409,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14527,
											"end": 14529,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14518,
											"end": 14530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14170,
											"end": 14536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14170,
											"end": 14536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14170,
											"end": 14536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14170,
											"end": 14536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14542,
											"end": 14961,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 14542,
											"end": 14961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14708,
											"end": 14712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14746,
											"end": 14748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14735,
											"end": 14744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14731,
											"end": 14749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14723,
											"end": 14749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14723,
											"end": 14749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14795,
											"end": 14804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14789,
											"end": 14793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14785,
											"end": 14805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14781,
											"end": 14782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14770,
											"end": 14779,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14766,
											"end": 14783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14759,
											"end": 14806,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14823,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 14949,
											"end": 14953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14823,
											"end": 14954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 14823,
											"end": 14954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14823,
											"end": 14954,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 14823,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14815,
											"end": 14954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14815,
											"end": 14954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14542,
											"end": 14961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14542,
											"end": 14961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14542,
											"end": 14961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14542,
											"end": 14961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_balance(address)": "d3aceae2",
							"balance()": "b69ef8a8",
							"depositStake(uint256)": "cb82cc8f",
							"duration()": "0fb5a6b4",
							"earned()": "d6f19262",
							"finishAt()": "67d3b488",
							"getDuration()": "ad2e8c9b",
							"rate()": "2c4e722e",
							"rewardsToken()": "d1af0c7d",
							"setDuration(uint256)": "f6be71d1",
							"setRewardRate(uint256)": "9e447fc6",
							"stakingToken()": "72f702f3",
							"totalStake()": "8b0e9f3f",
							"totalStakeRewards()": "327bcac5",
							"updatedAt()": "7519ab50",
							"withdrawReward(uint256)": "523a3f08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/staking.sol\":{\"keccak256\":\"0x81701a93bd8d7c28c35bc5df2c669a4f0b587b71078096a3158c5a55f2eb72d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5778e380979cf91f5ebecc533d0a1902f4a71de50aecdb6abdcbfd8ca3682b5c\",\"dweb:/ipfs/Qmcq2okvfsvssT2iVJz9sqFJitseDiFbPfj3QVuDMcJcMK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "contracts/staking.sol:Staking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)359"
							},
							{
								"astId": 46,
								"contract": "contracts/staking.sol:Staking",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)359"
							},
							{
								"astId": 48,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 50,
								"contract": "contracts/staking.sol:Staking",
								"label": "totalStakeRewards",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/staking.sol:Staking",
								"label": "duration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/staking.sol:Staking",
								"label": "finishAt",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "contracts/staking.sol:Staking",
								"label": "updatedAt",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "contracts/staking.sol:Staking",
								"label": "rate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "contracts/staking.sol:Staking",
								"label": "_balance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 66,
								"contract": "contracts/staking.sol:Staking",
								"label": "_rewardsWithdrawals",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)359": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xF6 CALLVALUE 0xE2 SELFDESTRUCT PUSH3 0x2AAD15 DUP11 DELEGATECALL 0xE2 CALLDATACOPY 0x2D PUSH6 0x6A7586817809 0x2A 0xFC 0xAE 0xB9 ADDRESS DUP5 PUSH29 0x95D76CC264736F6C634300081200330000000000000000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054f634e2ff622aad158af4e2372d656a75868178092afcaeb930847c95d76cc264736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/staking.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/staking.sol": {
				"ast": {
					"absolutePath": "contracts/staking.sol",
					"exportedSymbols": {
						"IERC20": [
							359
						],
						"IStake": [
							34
						],
						"SafeMath": [
							671
						],
						"Staking": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "31:25:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 282,
							"sourceUnit": 360,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 282,
							"sourceUnit": 672,
							"src": "168:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStake",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "IStake",
							"nameLocation": "290:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb82cc8f",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "311:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "330:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:14:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:0"
									},
									"scope": 34,
									"src": "302:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25d5971f",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "375:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:13:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 34,
									"src": "352:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f6be71d1",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "412:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "429:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:0"
									},
									"scope": 34,
									"src": "403:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7e284b8",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeLeft",
									"nameLocation": "463:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:9:0"
									},
									"scope": 34,
									"src": "454:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "523:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "539:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:13:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:0"
									},
									"scope": 34,
									"src": "514:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "523a3f08",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawReward",
									"nameLocation": "575:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "590:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:13:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:0"
									},
									"scope": 34,
									"src": "566:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 282,
							"src": "280:335:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Staking",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 37,
									"libraryName": {
										"id": 35,
										"name": "SafeMath",
										"nameLocations": [
											"645:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 671,
										"src": "645:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "639:27:0",
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 40,
									"libraryName": {
										"id": 38,
										"name": "SafeMath",
										"nameLocations": [
											"677:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 671,
										"src": "677:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "671:24:0",
									"typeName": {
										"id": 39,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "690:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 43,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "714:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "700:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$359",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 42,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 41,
											"name": "IERC20",
											"nameLocations": [
												"700:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 359,
											"src": "700:6:0"
										},
										"referencedDeclaration": 359,
										"src": "700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$359",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 46,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "746:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "732:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$359",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 45,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 44,
											"name": "IERC20",
											"nameLocations": [
												"732:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 359,
											"src": "732:6:0"
										},
										"referencedDeclaration": 359,
										"src": "732:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$359",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 48,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "777:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "765:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "765:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "327bcac5",
									"id": 50,
									"mutability": "mutable",
									"name": "totalStakeRewards",
									"nameLocation": "805:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "793:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "793:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 52,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "845:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "833:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "833:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 54,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "889:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "877:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "877:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7519ab50",
									"id": 56,
									"mutability": "mutable",
									"name": "updatedAt",
									"nameLocation": "915:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "903:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "903:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 58,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "943:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "931:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "931:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3aceae2",
									"id": 62,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "1000:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "967:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 61,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "976:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "967:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 60,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "987:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "_rewardsWithdrawals",
									"nameLocation": "1048:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 281,
									"src": "1014:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 65,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1023:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1014:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 64,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1034:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1171:97:0",
										"statements": [
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1181:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$359",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 75,
																"name": "_stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1203:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 74,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1196:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$359_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1196:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$359",
															"typeString": "contract IERC20"
														}
													},
													"src": "1181:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$359",
														"typeString": "contract IERC20"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1181:34:0"
											},
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1225:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$359",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 81,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1247:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 80,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "1240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$359_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1240:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$359",
															"typeString": "contract IERC20"
														}
													},
													"src": "1225:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$359",
														"typeString": "contract IERC20"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1225:36:0"
											}
										]
									},
									"id": 86,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_stakeToken",
												"nameLocation": "1136:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1128:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1157:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1149:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:44:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:0:0"
									},
									"scope": 281,
									"src": "1116:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1319:315:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 94,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1360:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1364:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1360:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 92,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "1337:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$359",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1350:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 316,
																	"src": "1337:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1337:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 97,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1375:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1337:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320666f72207374616b65",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1383:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															},
															"value": "Not enough tokens for stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a387c1b4c8925768d33d0b100aa47f95d67c84a7b43f237a2110af004c78b820",
																"typeString": "literal_string \"Not enough tokens for stake\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1329:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 105,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1457:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1461:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1457:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 109,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1477:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$281",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$281",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1469:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 107,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1469:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1469:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 111,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1484:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 103,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "1431:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$359",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1444:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "1431:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1431:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207374616b6520746f6b656e",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1492:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															},
															"value": "Failed to stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43fbf52c89779574c613003d8d4c152ee72bd85bf337f66caf9e080de040dfe1",
																"typeString": "literal_string \"Failed to stake token\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1423:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1423:93:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 116,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1527:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"expression": {
																"id": 117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1536:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1540:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1536:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1527:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 125,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1575:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 120,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1550:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 123,
																"indexExpression": {
																	"expression": {
																		"id": 121,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1559:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1563:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1559:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1550:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1571:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "1550:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1550:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1527:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1527:55:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1592:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 132,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1620:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 130,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1605:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1616:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "1605:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1605:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1592:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1592:35:0"
											}
										]
									},
									"functionSelector": "cb82cc8f",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositStake",
									"nameLocation": "1283:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1302:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1297:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:13:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:0"
									},
									"scope": 281,
									"src": "1274:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1689:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 142,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1706:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 145,
													"indexExpression": {
														"expression": {
															"id": 143,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1715:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1719:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1715:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1706:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 146,
												"nodeType": "Return",
												"src": "1699:27:0"
											}
										]
									},
									"functionSelector": "b69ef8a8",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "1648:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:0"
									},
									"scope": 281,
									"src": "1639:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1787:206:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 154,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1805:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 155,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1822:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1816:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e277420736574206461746520746f20612070726576696f75732074696d657374616d70",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1833:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															},
															"value": "can't set date to a previous timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43067c0af46c43b1ffab7320c5f1f3b84b164a240dcd8f185cf48f2cfc313ec9",
																"typeString": "literal_string \"can't set date to a previous timestamp\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1797:77:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1885:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1896:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1885:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1885:20:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1915:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 168,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "1939:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 166,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1935:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "1926:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1926:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1915:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1915:34:0"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "updatedAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 173,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1977:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1971:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1959:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1959:27:0"
											}
										]
									},
									"functionSelector": "f6be71d1",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "1748:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1768:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1760:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:19:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:0:0"
									},
									"scope": 281,
									"src": "1739:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2052:32:0",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2069:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "2062:15:0"
											}
										]
									},
									"functionSelector": "ad2e8c9b",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDuration",
									"nameLocation": "2008:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2044:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:9:0"
									},
									"scope": 281,
									"src": "1999:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2136:104:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "2154:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 193,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2165:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2171:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2165:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67207374696c6c20696e2070726f6772657373",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																"typeString": "literal_string \"Staking still in progress\""
															},
															"value": "Staking still in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e24f8282f5fccdc222a6faec3c043f045654ecd888914a57934081a031dbf6e",
																"typeString": "literal_string \"Staking still in progress\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2146:64:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 200,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2228:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2221:12:0"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRewardRate",
									"nameLocation": "2099:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "2121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:15:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:0"
									},
									"scope": 281,
									"src": "2090:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2292:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 210,
																	"name": "_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2310:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"expression": {
																		"id": 211,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2319:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2323:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2319:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2310:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2333:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2310:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74207374616b656420616e7920746f6b656e73",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															},
															"value": "You have not staked any tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b89eb03512af8a5609764f99eb27982d3d607db444d9852d47cbed812dc9da96",
																"typeString": "literal_string \"You have not staked any tokens\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2302:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 219,
																"name": "_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2387:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 222,
															"indexExpression": {
																"expression": {
																	"id": 220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2396:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2400:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2387:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 223,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "2411:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2416:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2411:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 226,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2387:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 228,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2430:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2424:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 230,
																	"name": "updatedAt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2442:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2424:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2423:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2387:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 234,
												"nodeType": "Return",
												"src": "2380:73:0"
											}
										]
									},
									"functionSelector": "d6f19262",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "2255:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:2:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2284:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:9:0"
									},
									"scope": 281,
									"src": "2246:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2515:323:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 242,
																	"name": "earned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2533:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2533:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2544:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2533:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f74206561726e656420616e792072657761726473",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2547:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660",
																"typeString": "literal_string \"You have not earned any rewards\""
															},
															"value": "You have not earned any rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a8030f72099cf025be8a9a084a5fbade701c21a0cf468debb43481801bb3660",
																"typeString": "literal_string \"You have not earned any rewards\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2525:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2525:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 250,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2599:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2599:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 252,
																		"name": "_rewardsWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "2610:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 255,
																	"indexExpression": {
																		"expression": {
																			"id": 253,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2630:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2634:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2630:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2610:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2599:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 257,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "2644:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2599:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520656e6f75676820746f207769746864726177",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2653:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2",
																"typeString": "literal_string \"You don't have enough to withdraw\""
															},
															"value": "You don't have enough to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_309a3b04d38794946ed23057a771f2f7503e46e2d21d314deb23de3fcd065dd2",
																"typeString": "literal_string \"You don't have enough to withdraw\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2591:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2591:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 265,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2729:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2733:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2729:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 267,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "2741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "rewardsToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "2707:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$359",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2720:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "2707:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2707:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220746f6b656e73",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2751:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276",
																"typeString": "literal_string \"Failed to transfer tokens\""
															},
															"value": "Failed to transfer tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23a9a6b5491b6c7f551486d95db2bf9d53e35a8061da0ba85b10a3015a078276",
																"typeString": "literal_string \"Failed to transfer tokens\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2699:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2699:80:0"
											},
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 272,
															"name": "_rewardsWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2789:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 275,
														"indexExpression": {
															"expression": {
																"id": 273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2809:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2813:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2789:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 276,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "2824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2789:42:0"
											}
										]
									},
									"functionSelector": "523a3f08",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawReward",
									"nameLocation": "2475:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:17:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2515:0:0"
									},
									"scope": 281,
									"src": "2466:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 282,
							"src": "617:2230:0",
							"usedErrors": []
						}
					],
					"src": "31:2817:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							359
						]
					},
					"id": 360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 359,
							"linearizedBaseContracts": [
								359
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 293,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 302,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 359,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 359,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 359,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 359,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 359,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 359,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 360,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							671
						]
					},
					"id": 672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 362,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 392,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 392,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 376,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 377,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 387,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 373,
															"id": 386,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 389,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 390,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 373,
														"id": 391,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 671,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 420,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 407,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 413,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 405,
															"id": 412,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 416,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 418,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 405,
														"id": 419,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 671,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 462,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 441,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 433,
															"id": 440,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															443
														],
														"declarations": [
															{
																"constant": false,
																"id": 443,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 442,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 447,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 445,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 448,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 449,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 451,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 457,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 433,
															"id": 456,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 459,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 460,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 433,
														"id": 461,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 671,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 490,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 483,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 475,
															"id": 482,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 485,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 486,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 488,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 475,
														"id": 489,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 671,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 518,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 511,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 503,
															"id": 510,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 513,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 514,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 503,
														"id": 517,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 671,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 531,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 533,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 671,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 546,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 548,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 671,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 560,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 561,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 563,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 671,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 576,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 578,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 671,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 591,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 671,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 618,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 608,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 609,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 611,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 607,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 613,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 606,
														"id": 617,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 671,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 643,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 636,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 632,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 638,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 640,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 631,
														"id": 642,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 671,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 668,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 658,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 661,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 657,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 663,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 656,
														"id": 667,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 671,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 672,
							"src": "482:6210:2",
							"usedErrors": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			}
		}
	}
}